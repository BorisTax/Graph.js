{"version":3,"sources":["reducers/shapes.js","utils/geometry.js","components/shapes/ShapeStyle.js","components/colors.js","components/shapes/Shape.js","components/shapes/TextShape.js","components/Screen.js","actions/ScreenActions.js","actions/ShapeActions.js","components/shapes/cursors/FreeCursor.js","components/shapes/ShapeManager.js","components/shapes/cursors/DrawCursor.js","components/shapes/SLineShape.js","components/shapes/markers/SnapMarkersManager.js","components/shapes/SelectionManager.js","components/shapes/SelectRectShape.js","components/shapes/shapecreators/ShapeBuilder.js","components/shapes/shapecreators/SelectRectCreator.js","components/shapes/cursors/DragCursor.js","components/shapes/cursors/PickCursor.js","reducers/screen.js","config.js","actions/AppActions.js","locale/eng.js","reducers/options.js","actions/ComponentActions.js","reducers/component.js","actions/UserActions.js","reducers/user.js","reducers/index.js","store/configureStore.js","components/LangToogleButton.js","components/LangToggleBar.js","components/HelpButton.js","components/User.js","components/Header.js","components/ToolButton.js","components/ToolButtonGroup.js","components/shapes/markers/SnapMarker.js","components/shapes/markers/CenterSnapMarker.js","components/shapes/markers/PointMarker.js","components/shapes/pickers/PropertyPicker.js","components/shapes/pickers/PointPicker.js","components/shapes/TriangleShape.js","components/shapes/markers/MiddleSnapMarker.js","components/shapes/RectangleShape.js","components/shapes/markers/EndSnapMarker.js","components/shapes/LineShape.js","components/shapes/pickers/DistancePicker.js","components/shapes/CircleShape.js","components/shapes/shapecreators/StraightLineCreator.js","components/shapes/RayLineShape.js","components/shapes/shapecreators/RayLineCreator.js","components/shapes/shapecreators/LineCreator.js","components/shapes/shapecreators/CircleCRCreator.js","components/shapes/shapecreators/Circle2PCreator.js","components/shapes/shapecreators/Circle3PCreator.js","components/shapes/shapecreators/TriangleCreator.js","components/shapes/shapecreators/RectangleCreator.js","components/CreateToolBar.js","components/OptionTogglePic.js","components/SnapToggleBar.js","components/PickButton.js","components/PropertyField.js","components/PropertyMultField.js","components/PropertyEditButtonsBar.js","components/PropertyEditorBar.js","components/SelectionToolBar.js","components/MainContainer.js","components/MySelf.js","components/HelpSection.js","components/Confirm.js","components/Alert.js","Body.js","components/Spinner.js","components/Login.js","components/Register.js","components/Activation.js","GeomEditor.js","index.js"],"names":["initialState","status","Coord2D","x","arguments","length","undefined","y","Object","classCallCheck","this","Point2D","Line","p1","p2","SLine","_this","param","createLine","a","b","c","createClass","key","value","NaN","RLine","origin","vector","Vector","directionPoint","Arc","first","second","third","chord","Math","sqrt","Rectangle","topLeft","bottomRight","width","abs","height","Circle","center","radius","Triangle","points","line1","Geometry","SLinePerpOnPoint","midPoint","line2","p","Intersection","SLineSLine","distance","modulus","d","d1","d2","line","sline","pointOnLine","rectTopLeft","rectBottomRight","lines","Array","forEach","l","LineSLine","push","ps","RectangleSLine","SLineFromRLine","isPointOnRayLine","rectTopLeft1","rectBottomRight1","rectTopLeft2","rectBottomRight2","lines1","lines2","l1","l2","LineLine","circle","dx","dy","LineShifted","r","A","B","C","QuadEquation","res","i","CircleSLine","k","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","err","return","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","realWidth","screenWidth","round","getYbyX","isNaN","getXbyY","sx","sy","x1","y1","x2","y2","pointOnSLineProjection","point","SLineFromLine","min","v1","v2","v","acos","scalar","p3","midp1","midp2","pline1","pline2","arc","mp","m","limit","arcMiddlePoint","arcToPointArray","arcByTwoPointsCenter","len","angleVectors","angle","cos","sin","screenHeight","realHeight","realRect","screenRect","ratio","ShapeStyle","color","stroke","originColor","type","DASH","SOLID","SELECTION","Color","BLUE","BLACK","GRAY","RED","DARK_ORANGE","GREEN","SELECTED","SELECTION_AREA","GRID","ACTIVE_POINT_MARKER","POINT_MARKER","Shape","style","state","selected","highlighted","model","setColor","getColor","objectSpread","setStyle","activePoint","activePointMarker","prop","TextShape","text","possibleConstructorReturn","getPrototypeOf","call","ctx","refresh","strokeStyle","getStyle","setLineDash","getStroke","lineWidth","getWidth","console","log","save","font","basePoint","p0","anchor","CENTER","measureText","newPoint","rotatePoint","translate","rotate","strokeText","restore","realToScreen","Map","get","prototype","cross","full","concat","Screen","props","curPoint","prevPoint","gridStep","gridStepPixels","dragGrid","gridPointsX","gridPointsY","gridNumbersX","gridNumbersY","dragX0","dragY0","drag","lbut","mbut","window","KEYDOWNHANDLE","refCanvas","React","createRef","PI","shapes","cursor","setCoord","curCoord","drawShape","solidStyle","dashStyle","firstX","firstY","hor","vert","ix","iy","xGridLineNumber","yGridLineNumber","gridLinesCountX","gridLinesCountY","px","getRealRect","getScreenRect","show","grid","beginPath","moveTo","lineTo","py","w","format","s0","s","toFixed","marginLeft","marginRight","marginTop","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","marginBottom","h","drawSelf","fillStyle","lineJoin","fillRect","drawGrid","xAxe","yAxe","status_bar","currentShape","shapeCreator","captions","creators","getName","description","creationStep","CREATE","steps","getCurrentStep","curHelperShapes","getHelperShapes","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","shape","curShape","getShape","PICK","pickers","picker","pickShape","pickHelperShapes","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","_iteratorNormalCompletion6","_didIteratorError6","_iteratorError6","_step6","_iterator6","strokeRect","drawCoordinates","statusBar","FREE","marker","snapMarkersManager","getActiveMarker","getMarker","SELECT","selectionManager","getSelectionShape","mouseOnScreen","drawCursor","e","rect","target","getBoundingClientRect","clientX","left","clientY","top","isOutRect","coord","PAN","screenToReal","rdx","rdy","actions","setTopLeft","setBoundedCircle","temp","gridSnap","snapMinDist","pixelRatio","getDistanceToNearestMarker","snapDist","getPos","shapeManager","setShapeNearPoint","selectDist","setCurrent","setShapeInRect","prevCoord","setCurCoord","button","setScreenStatus","preventDefault","reset","setNext","repaint","setPrevStatus","cancel","deltaY","setScale","isLegal","setNextPoint","isNext","refreshSnapMarkers","refreshShapeManager","cyclicCreation","createShape","boundedCircle","toggleShapeSelected","setPickedData","getPickedData","selectShapes","getSelectedShapes","getComputedStyle","document","querySelector","sw","Number","parseInt","sh","setDimensions","canvas","_this2","getContext","addEventListener","mwheel","bind","passive","paint","resize","centerToPoint","body","oncontextmenu","keyDownHandler","ctrlKey","shiftKey","altKey","keyCode","action","setShapes","selectionType","react_default","createElement","ref","id","onMouseMove","mmove","onMouseDown","mdown","onMouseUp","mup","onMouseLeave","mleave","onMouseEnter","menter","onClick","onclick","Component","MARKER_SIZE","SNAP_MARKER_SIZE","ADD_SHAPE","CANCEL","CANCEL_SELECTION","CENTER_TO_POINT","CREATE_SHAPE","DELETE_CONFIRM","DELETE_SELECTED_SHAPES","PAN_SCREEN","PICK","REFRESH_SHAPE_MANAGER","REFRESH_SNAP_MARKERS","REPAINT","SELECT_ALL","SELECT_SHAPE","SET_BOUNDED_CIRCLE","SET_CUR_COORD","SET_CYCLIC_FLAG","SET_DIMENSIONS","SET_GRID_SNAP","SET_GRID_VISIBLE","SET_PICKED_DATA","SET_PREV_STATUS","SET_RATIO","SET_REAL_WIDTH","SET_SCALE","SET_SCREEN_CONTEXT","SET_SELECTION_TYPE","SET_SNAP","SET_STATUS","SET_TOP_LEFT","START_PICKING","START_SELECTION","deleteConfirm","deleteSelectedShapes","data","payload","params","creator","CANCEL","startPicking","SET_PROPERTY","FreeCursor","rectSize","ShapeManager","allShapes","selType","dist","getDistance","setState","tl","br","isInRect","_s$isInRect","ok","getState","filter","DrawCursor","SLineShape","rad","set","regexp","PointToSLineDistance","SnapMarkersManager","snapSet","Set","snapMarkersActive","snapMarkersAll","activeMarker","snapClass","add","refreshMarkerList","delete","markers","has","constructor","clear","pos","minDistance","SelectionManager","selectionCreator","SelectRectShape","rectangle","realToScreenLength","ShapeBuilder","legal","helperShapes","setControlPoints","name","SelectRectCreator","caption","DragCursor","pts","size","drawArrow","map","PickCursor","PICK_END","xAxeShape","yAxeShape","pickedData","editId","fix","prevStatus","selectedShapes","snap","statusParams","getRealWidthParams","pr","rh","gsp","options","devUrl","_devUrl","SET_LANGUAGE","SHOW_HELP","SHOW_CONFIRM","SHOW_ALERT","setLanguage","showHelp","showConfirm","messageKey","okAction","showAlert","blink","form","oldColor","backgroundColor","count","int","setInterval","clearInterval","about","email","user","buttons","logout","showPass","pick","registerForm","title","password","passwordAgain","serverMessages","inputMessages","loginForm","regForm","rememberMe","messages","activation","deleteShapes","regSucceed","create","createToolBar","createCheckBox","createSLine2Points","createRayLine2Points","createSegmentLine2Points","createCircleCenter","createCircle2P","createCircle3P","createRect","createRectCenter","createTriangle","createTriangleInscribed","createTriangleDescribed","createParabola","createHyperbola","createFunction","development","modify","crossSelect","fullSelect","snapToggleBar","snapGridPoints","snapEndPoints","snapCenterPoints","snapMiddlePoints","showGrid","propBar","noShapesSelected","NShapesSelected","deleteButton","Title","Radius","Center","P1","P2","Origin","Direction","P3","PointPicker","DistancePicker","StraightLineCreator","RayLineCreator","LineCreator","CircleCRCreator","Circle2PCreator","Circle3PCreator","RectangleCreator","TriangleCreator","help","hotKeys","desc","SET_ACTIVE_SNAP_BUTTON","CLEAR_ACTIVE_SNAP_BUTTON","SET_ACTIVE_CREATE_BUTTON","SET_ACTIVE_LANG_BUTTON","activeLangButton","defaultLang","activeSnapButtons","message","SET_TOKEN","LOGOUT","token","cookie","split","jwtDecode","rootReducer","combineReducers","screen","bc","random","viewPortWidth","viewPortHeight","prevCursor","addSnapMarkers","getMarkers","getProperties","setProperty","_action$payload","scale","boundedCicle","context","addSnap","removeSnap","expires","remember","components","newState","activeButtons","activeCreateButton","store","createStore","applyMiddleware","thunk","LangToggleButton","pressed","requestLanguage","lang","setActiveLangButtonId","className","LangToggleBar","LangToogleButton_LangToggleButton","connect","dispatch","fetch","method","JSON","stringify","headers","Content-Type","then","json","capt","catch","error","HelpButton","User","links","react_router_dom","to","cap","Fragment","Header","components_LangToggleBar","components_HelpButton","components_User","ToolButton","activeButtonId","dev","setButtonFirst","cls","ToolButtonGroup","firstButton","expanded","find","ToolButton_ToolButton","index","activeButton","SnapMarker","markerShape","EndSnapMarker","CircleShape","setMarker","PointMarker","screenCenter","screenRadius","fill","PropertyPicker","getType","TriangleShape","triangle","list","MiddleSnapMarker","l3","PointToLineDistance","pointInRect","every","LineRectangle","some","RectangleShape","tr","bl","bottom","right","RectangleRectangle","LineShape","setAnchor","setFont","setText","setPoint","sign","CenterSnapMarker","outRectX1","outRectY1","outRectX2","outRectY2","inRectX1","inRectY1","inRectX2","inRectY2","pointInRectByPoints","construct","toConsumableArray","RayLineShape","CircleRLine","PointToRLineDistance","RectangleRLine","radiusLine","diamLine","gray","blue","getOuterCircle","CreateToolBar","_ref","setButtonId","createNewShape","setActiveCreateButton","onChange","setCyclicFlag","checked","htmlFor","ToolButtonGroup_ToolButtonGroup","ownProps","flag","OptionTogglePic","setSnap","clearActiveSnapButton","setActiveSnapButton","SnapToggleBar","OptionTogglePic_OptionTogglePic","PickButton","active","PropertyField","correct","prevValue","originValue","match","charCode","n","parseFloat","propKey","display","flexDirection","alignContent","label","change","onKeyPress","onKeyDown","stopPropagation","onBlur","blur","onFocus","components_PickButton","nextProps","prevState","pickedValue","PropertyMultField","setActivePoint","focus","PropertyEditButtonsBar","PropertyEditorBar","shapeTitle","propElements","shapeType","keys","components_PropertyMultField","components_PropertyField","components_PropertyEditButtonsBar","SelectionToolBar","setSelectionType","MainContainer","Screen_Screen","assign","borderWidth","borderStyle","components_CreateToolBar","components_SelectionToolBar","components_PropertyEditorBar","components_SnapToggleBar","addShape","cancelSelection","selectAll","setRatio","setRealWidth","MySelf","textAlign","ref2","position","whiteSpace","fontSize","HelpSection","animate","maxw","current","maxh","t","clientWidth","clientHeight","item","react","zIndex","components_MySelf","Confirm","onOk","hideConfirm","Alert","hideAlert","Body","components_Confirm","components_Alert","Header_Header","components_HelpSection","components_MainContainer","Spinner","Login","refName","refPass","logging","errCode","history","pass","requestLogin","nameOrEmail","success","setToken","_this3","overflow","transition","setTimeout","_this4","onSubmit","required","placeholder","onRegClick","Spinner_Spinner","Register","refEmail","refPass1","refPass2","fetching","pass1","pass2","messIndex","check","registered","Activation","activated","activate","onLoginClick","GeomEditor","es","react_router","path","component","exact","ReactDOM","render","GeomEditor_GeomEditor","getElementById"],"mappings":"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","file":"static/js/main.5b434fb1.chunk.js","sourcesContent":["const initialState = {\r\n    status: 'FREE',\r\n}\r\nexport function shapeReducer(state = initialState) {\r\n    return state\r\n}","\r\nexport class Coord2D{\r\n    constructor(x=0,y=0){\r\n        this.x=x;\r\n        this.y=y;\r\n    }\r\n}\r\nexport class Point2D {\r\n    constructor(x=0,y=0){\r\n    this.x=x;\r\n    this.y=y;\r\n}\r\n}\r\n\r\nexport class Line{\r\n    constructor(p1,p2){\r\n        if(arguments.length===2){\r\n        this.p1=p1;\r\n        this.p2=p2;\r\n        }\r\n        if(arguments.length===4){\r\n            this.p1={x:arguments[0],y:arguments[1]}\r\n            this.p2={x:arguments[2],y:arguments[3]}\r\n        }\r\n    }\r\n\r\n}\r\nexport class SLine{\r\n    constructor(){\r\n        let param=arguments;\r\n        let createLine=(p1,p2)=>{\r\n            this.a=p1.y-p2.y;\r\n            this.b=p2.x-p1.x;\r\n            this.c=p1.x*p2.y-p1.y*p2.x;\r\n        };\r\n        switch (param.length) {\r\n            case(0):createLine(new Coord2D(),new Coord2D());break;\r\n            case(1):createLine(param[0].p1,param[0].p2);break;\r\n            case(2):createLine(param[0],param[1]);break;\r\n            case(3):this.a=param[0];this.b=param[1];this.c=param[2];break;\r\n            default:\r\n        }\r\n    }\r\n    getYbyX(x){\r\n        if(this.b!==0)return -(this.a*x+this.c)/this.b;else return NaN;\r\n    }\r\n    getXbyY(y){\r\n        if(this.a!==0)return -(this.b*y+this.c)/this.a;else return NaN;\r\n    }\r\n\r\n}\r\n\r\nexport class RLine {\r\n\r\n    constructor(p1=new Coord2D(), p2=new Coord2D()){\r\n    this.origin=p1;\r\n    this.vector=new Vector();\r\n    this.vector.x=p2.x-p1.x;\r\n    this.vector.y=p2.y-p1.y;\r\n    this.directionPoint={x:this.origin.x+this.vector.x,y:this.origin.y+this.vector.y}\r\n    }\r\n\r\n    getYbyX(x){\r\n    if(this.b!==0){\r\n        let y=-(this.a*x+this.c)/this.b;\r\n        if(((x-this.origin.x)*this.vector.x)>=0&&((y-this.origin.y)*this.vector.y)>=0)return y;\r\n        return NaN;\r\n        }\r\n    else return NaN;\r\n    }\r\n\r\n    getXbyY(y){\r\n    if(this.a!==0){\r\n        let x=-(this.b*y+this.c)/this.a;\r\n        if(((x-this.origin.x)*this.vector.x)>=0&&((y-this.origin.y)*this.vector.y)>=0)return y;\r\n        return NaN;\r\n    }else return NaN;\r\n    }\r\n\r\n}\r\n\r\nexport class Arc {\r\n    constructor(first, second, third){\r\n    this.first=first;\r\n    this.second=second;\r\n    this.third=third;\r\n    this.chord=Math.sqrt((second.x-first.x)*(second.x-first.x)+(second.y-first.y)*(second.y-first.y));\r\n}\r\n\r\n\r\n}\r\n\r\n\r\nexport class Rectangle {\r\n    constructor(topLeft=new Coord2D(),bottomRight=new Coord2D()){\r\n        this.topLeft={};\r\n        this.bottomRight={};\r\n        this.topLeft.x=topLeft.x>bottomRight.x?bottomRight.x:topLeft.x;\r\n        this.topLeft.y=topLeft.y<bottomRight.y?bottomRight.y:topLeft.y;\r\n        this.width=Math.abs(bottomRight.x-topLeft.x);\r\n        this.height=Math.abs(bottomRight.y-topLeft.y);\r\n        this.bottomRight.x=this.topLeft.x+this.width;\r\n        this.bottomRight.y=this.topLeft.y-this.height;\r\n    }\r\n    \r\n}\r\n\r\nexport class Circle {\r\n    constructor(center=new Coord2D(),radius=0){\r\n        this.center=center;\r\n        this.radius=radius;\r\n    }\r\n    \r\n}\r\n\r\nexport class Triangle {\r\n    constructor(points=[new Coord2D(),new Coord2D(),new Coord2D()]){\r\n        this.points=points;\r\n    }\r\n    getOuterCircle(){\r\n        let line1=Geometry.SLinePerpOnPoint(new SLine(this.points[0],this.points[1]),Geometry.midPoint(this.points[0],this.points[1]));\r\n        let line2=Geometry.SLinePerpOnPoint(new SLine(this.points[0],this.points[2]),Geometry.midPoint(this.points[0],this.points[2]));\r\n        let p=Intersection.SLineSLine(line1,line2);\r\n        if(p===null) p=Geometry.midPoint(this.points[0],this.points[1]);\r\n        let circle=new Circle(p,Geometry.distance(p,this.points[0]));\r\n        return circle;\r\n    }\r\n\r\n}\r\n\r\nexport class Vector {\r\n    constructor(p1=new Coord2D(),p2=new Coord2D()){\r\n    this.x=p2.x-p1.x;\r\n    this.y=p2.y-p1.y;\r\n    this.modulus=Math.sqrt(this.x*this.x+this.y*this.y);\r\n    }\r\n}\r\nexport class Intersection{\r\n    static SLineSLine(line1, line2) {\r\n        let d = line1.a * line2.b - line1.b * line2.a;\r\n        if (d === 0) return null;\r\n        let d1 = -line1.c * line2.b - (-line2.c * line1.b);\r\n        let d2 = -line2.c * line1.a - (-line1.c * line2.a);\r\n        return new Coord2D(d1 / d, d2 / d);\r\n    }\r\n    static LineSLine(line, sline) {\r\n        let p = Intersection.SLineSLine(sline, new SLine(line));\r\n        if (p === null) return null;\r\n        if (!Geometry.pointOnLine(p, line.p1, line.p2)) return null;\r\n        return p;\r\n    }\r\n    static RectangleSLine(rectTopLeft, rectBottomRight,line) {\r\n        let lines = new Array(4);\r\n        let points = [];\r\n        lines[0] = new Line(rectTopLeft.x, rectTopLeft.y, rectBottomRight.x, rectTopLeft.y);\r\n        lines[1] = new Line(rectTopLeft.x, rectBottomRight.y, rectBottomRight.x, rectBottomRight.y);\r\n        lines[2] = new Line(rectTopLeft.x, rectTopLeft.y, rectTopLeft.x, rectBottomRight.y);\r\n        lines[3] = new Line(rectBottomRight.x, rectTopLeft.y, rectBottomRight.x, rectBottomRight.y);\r\n        lines.forEach(l=> {\r\n            const p=Intersection.LineSLine(l, line)\r\n            if(p&&points.length<2) points.push(p);\r\n            });\r\n        return points;\r\n    }\r\n    static RectangleRLine(rectTopLeft, rectBottomRight,line) {\r\n        const ps=Intersection.RectangleSLine(rectTopLeft, rectBottomRight,Geometry.SLineFromRLine(line));\r\n        const points=[];\r\n        ps.forEach(p=>{if(Geometry.isPointOnRayLine(line,p)) points.push(p)});\r\n        return points;\r\n    }\r\n    static RectangleRectangle(rectTopLeft1,rectBottomRight1,rectTopLeft2,rectBottomRight2){\r\n        const lines1=[new Line(rectTopLeft1.x,rectTopLeft1.y,rectBottomRight1.x,rectTopLeft1.y),\r\n                      new Line(rectBottomRight1.x,rectTopLeft1.y,rectBottomRight1.x,rectBottomRight1.y),\r\n                      new Line(rectTopLeft1.x,rectBottomRight1.y,rectBottomRight1.x,rectBottomRight1.y),\r\n                      new Line(rectTopLeft1.x,rectTopLeft1.y,rectTopLeft1.x,rectBottomRight1.y)];\r\n        const lines2=[new Line(rectTopLeft2.x,rectTopLeft2.y,rectBottomRight2.x,rectTopLeft2.y),\r\n                      new Line(rectBottomRight2.x,rectTopLeft2.y,rectBottomRight2.x,rectBottomRight2.y),\r\n                      new Line(rectTopLeft2.x,rectBottomRight2.y,rectBottomRight2.x,rectBottomRight2.y),\r\n                      new Line(rectTopLeft2.x,rectTopLeft2.y,rectTopLeft2.x,rectBottomRight2.y)];\r\n        const ps=[];\r\n        lines1.forEach(l1=>{lines2.forEach((l2)=>{\r\n                const p=Intersection.LineLine(l1,l2);\r\n                if(p) ps.push(p);\r\n        })})   \r\n        return ps; \r\n    }\r\n    static LineRectangle(line, rectTopLeft, rectBottomRight) {\r\n        let lines = new Array(4);\r\n        let points = [];\r\n        lines[0] = new Line(rectTopLeft.x, rectTopLeft.y, rectBottomRight.x, rectTopLeft.y);\r\n        lines[1] = new Line(rectTopLeft.x, rectBottomRight.y, rectBottomRight.x, rectBottomRight.y);\r\n        lines[2] = new Line(rectTopLeft.x, rectTopLeft.y, rectTopLeft.x, rectBottomRight.y);\r\n        lines[3] = new Line(rectBottomRight.x, rectTopLeft.y, rectBottomRight.x, rectBottomRight.y);\r\n        lines.forEach(l=> {\r\n            const p=Intersection.LineLine(line, l)\r\n            if(p&&points.length<2) points.push(p);\r\n            });\r\n        return points;\r\n    }\r\n    static LineLine(l1,l2){\r\n        const p=Intersection.SLineSLine(new SLine(l1),new SLine(l2));\r\n        if(p){\r\n            if(Geometry.pointOnLine(p, l1.p1, l1.p2)&&Geometry.pointOnLine(p, l2.p1, l2.p2)) return p;\r\n        }\r\n        return null;\r\n    }\r\n    static CircleSLine(circle,line) {\r\n        let dx = -circle.center.x;\r\n        let dy = -circle.center.y;\r\n        let sline = Geometry.LineShifted(line, dx, dy);\r\n        let a = sline.a;\r\n        let b = sline.b;\r\n        let c = sline.c;\r\n        let r = circle.radius;\r\n        if (b === 0) {\r\n            a = sline.b;\r\n            b = sline.a;\r\n        }\r\n        let A = a * a + b * b;\r\n        let B = 2 * a * c;\r\n        let C = c * c - r * r * b * b;\r\n        let x = Geometry.QuadEquation(A, B, C);\r\n        if (x === null) return null;\r\n        let res = new Array(x.length);\r\n        for (let i = 0; i < x.length; i++) {\r\n            res[i] = new Coord2D();\r\n            if (sline.b === 0) {\r\n                res[i].y = x[i];\r\n                res[i].x = -(a * x[i] + c) / b;\r\n            } else {\r\n                res[i].x = x[i];\r\n                res[i].y = -(a * x[i] + c) / b;\r\n            }\r\n            res[i].x = res[i].x - dx;\r\n            res[i].y = res[i].y - dy;\r\n        }\r\n        return res;\r\n    }\r\n    static CircleRLine(circle,line) {\r\n        let points = Intersection.CircleSLine(circle, new SLine(line.origin, new Coord2D(line.origin.x+line.vector.x,line.origin.y+line.vector.y)));\r\n        if (points === null) return null;\r\n        let k = 0;\r\n        let i = 0;\r\n        for (let p of points) {\r\n\r\n            if (Geometry.isPointOnRayLine(line, p)) k++; else points[i] = null;\r\n            i++;\r\n        }\r\n        if (k === 0) return null;\r\n        let res = new Array(k);\r\n        k = 0;\r\n        for (let p of points) if (p != null) {\r\n            res[k++] = p;\r\n        }\r\n        return res;\r\n    }\r\n}\r\nexport default class Geometry {\r\n\r\n    static realToScreenLength(value, realWidth, screenWidth){\r\n        return Math.round(value/(realWidth/screenWidth));\r\n    }\r\n    static SLineFromRLine(line){\r\n        return new SLine(line.origin,new Coord2D(line.origin.x+line.vector.x,line.origin.y+line.vector.y));\r\n    }\r\n    static SLineFromLine(line){\r\n        return new SLine(line.p1,line.p2);\r\n    }\r\n    static SLineByTwoPoints(p1, p2) {\r\n        return new SLine(p1, p2);\r\n    }\r\n\r\n    static SLinePerpOnPoint(line, p) {\r\n        return new SLine(-line.b, line.a, -line.a * p.y + line.b * p.x);\r\n    }\r\n\r\n    static LineShifted(line, dx, dy) {\r\n        let p = new Array(2);\r\n        for (let i = 0; i < 2; i++) {\r\n            let x = i;\r\n            let y = line.getYbyX(x);\r\n            if (isNaN(y)) {\r\n                y = i;\r\n                x = line.getXbyY(y);\r\n            }\r\n            x = x + dx;\r\n            y = y + dy;\r\n            p[i] = new Coord2D(x, y);\r\n        }\r\n        return new SLine(p[0], p[1]);\r\n    }\r\n\r\n    // static SLinesIntersectionPoint(line1, line2) {\r\n    //     let d = line1.a * line2.b - line1.b * line2.a;\r\n    //     if (d === 0) return null;\r\n    //     let d1 = -line1.c * line2.b - (-line2.c * line1.b);\r\n    //     let d2 = -line2.c * line1.a - (-line1.c * line2.a);\r\n    //     return new Coord2D(d1 / d, d2 / d);\r\n    // }\r\n\r\n    static pointInRect(p, rectTopLeft, rectBottomRight) {\r\n        let sx = (p.x - rectBottomRight.x) * (p.x - rectTopLeft.x);\r\n        let sy = (p.y - rectBottomRight.y) * (p.y - rectTopLeft.y);\r\n        return (sx <= 0 && sy <= 0);\r\n    }\r\n    static pointInRectByPoints(x,y, x1,y1,x2,y2) {\r\n        if((x>=x1&&x<=x2)&&(y<=y1&&y>=y2)) return true;\r\n        return false;\r\n    }\r\n    static pointOnLine(p, p1, p2) {\r\n        if(!p||!p1||!p2)return false; \r\n        let sx = Math.round((p.x - p1.x) * (p.x - p2.x)*100000)/100000;\r\n        let sy = Math.round((p.y - p1.y) * (p.y - p2.y)*100000)/100000;\r\n        return (sx <= 0 && sy <= 0);\r\n    }\r\n\r\n    // static SLineLineIntersection(sLine, line) {\r\n    //     let p = Geometry.SLinesIntersectionPoint(sLine, new SLine(line));\r\n    //     if (p === null) return null;\r\n    //     if (!Geometry.pointOnLine(p, line.p1, line.p2)) return null;\r\n    //     return p;\r\n    // }\r\n    // static SLineRectangleIntersection(line, rectTopLeft, rectBottomRight) {\r\n    //     let lines = new Array(4);\r\n    //     let points = [];\r\n    //     lines[0] = new Line(rectTopLeft.x, rectTopLeft.y, rectBottomRight.x, rectTopLeft.y);\r\n    //     lines[1] = new Line(rectTopLeft.x, rectBottomRight.y, rectBottomRight.x, rectBottomRight.y);\r\n    //     lines[2] = new Line(rectTopLeft.x, rectTopLeft.y, rectTopLeft.x, rectBottomRight.y);\r\n    //     lines[3] = new Line(rectBottomRight.x, rectTopLeft.y, rectBottomRight.x, rectBottomRight.y);\r\n    //     let i = 0;\r\n    //     lines.forEach(l=> {\r\n    //         const p=Geometry.SLineLineIntersection(line, l)\r\n    //         if(p&&points.length<2) points.push(p);\r\n    //         i++;});\r\n    //     return points;\r\n    // }\r\n    // static RayLineRectangleIntersection(line, rectTopLeft, rectBottomRight) {\r\n    //     const ps=Geometry.SLineRectangleIntersection(new SLine(line.origin,{x:line.origin.x+line.vector.x,y:line.origin.y+line.vector.y}),rectTopLeft, rectBottomRight)\r\n        \r\n    //     const points=[];\r\n    //     ps.forEach(p=>{if(Geometry.isPointOnRayLine(line,p)) points.push(p)});\r\n    //     return points;\r\n    // }\r\n    // static LineRectangleIntersection(line, rectTopLeft, rectBottomRight) {\r\n    //     let lines = new Array(4);\r\n    //     let points = [];\r\n    //     lines[0] = new Line(rectTopLeft.x, rectTopLeft.y, rectBottomRight.x, rectTopLeft.y);\r\n    //     lines[1] = new Line(rectTopLeft.x, rectBottomRight.y, rectBottomRight.x, rectBottomRight.y);\r\n    //     lines[2] = new Line(rectTopLeft.x, rectTopLeft.y, rectTopLeft.x, rectBottomRight.y);\r\n    //     lines[3] = new Line(rectBottomRight.x, rectTopLeft.y, rectBottomRight.x, rectBottomRight.y);\r\n    //     let i = 0;\r\n    //     lines.forEach(l=> {\r\n    //         const p=Geometry.LinesIntersection(line, l)\r\n    //         if(p&&points.length<2) points.push(p);\r\n    //         i++;});\r\n    //     return points;\r\n    // }\r\n    // static LinesIntersection(l1,l2){\r\n    //     const p=Geometry.SLinesIntersectionPoint(new SLine(l1),new SLine(l2));\r\n    //     if(p){\r\n    //         if(Geometry.pointOnLine(p, l1.p1, l1.p2)&&Geometry.pointOnLine(p, l2.p1, l2.p2)) return p;\r\n    //     }\r\n    //     return null;\r\n    // }\r\n    static pointOnSLineProjection(p, line){\r\n        return Intersection.SLineSLine(line,Geometry.SLinePerpOnPoint(line,p));\r\n    }\r\n    static  PointToSLineDistance(p, line){\r\n        let res=Geometry.distance(p,Geometry.pointOnSLineProjection(p, line));\r\n        return res;\r\n    }\r\n\r\n    static PointToRLineDistance(p, line){\r\n        let point=Geometry.pointOnSLineProjection(p, Geometry.SLineFromRLine(line));\r\n        let res;\r\n        if(Geometry.isPointOnRayLine(line,point)) res=Geometry.distance(p,point);else res=Geometry.distance(p,line.origin);\r\n        return res;\r\n    }\r\n    static PointToLineDistance(p, line){\r\n        let point=Geometry.pointOnSLineProjection(p, Geometry.SLineFromLine(line));\r\n        let res;\r\n        if(Geometry.pointOnLine(point,line.p1,line.p2)) res=Geometry.distance(p,point);\r\n        else res=Math.min(Geometry.distance(p,line.p1),Geometry.distance(p,line.p2));\r\n        return res;\r\n    }\r\n    static midPoint(p1, p2) {\r\n        return new Coord2D((p2.x + p1.x) / 2, (p2.y + p1.y) / 2);\r\n    }\r\n\r\n    static scalar(v1, v2) {\r\n        return v1.x * v2.x + v1.y * v2.y;\r\n    }\r\n\r\n    static modulus(v) {\r\n        return Math.sqrt(v[0] * v[0] + v[1] * v[1]);\r\n    }\r\n\r\n    static angleVectors(v1, v2) {\r\n        return Math.acos(this.scalar(v1, v2) / (v1.modulus * v2.modulus));\r\n    }\r\n\r\n    static arcCenterPoint(p1, p2, p3) {\r\n        let line1 = new SLine(p1, p2);\r\n        let line2 = new SLine(p2, p3);\r\n        let midp1 = Geometry.midPoint(p1, p2);\r\n        let midp2 = Geometry.midPoint(p2, p3);\r\n        let pline1 = Geometry.SLinePerpOnPoint(line1, midp1);\r\n        let pline2 = Geometry.SLinePerpOnPoint(line2, midp2);\r\n        return Intersection.SLineSLine(pline1, pline2);\r\n    }\r\n\r\n    // static CircleLineIntersection(line, circle) {\r\n    //     let dx = -circle.center.x;\r\n    //     let dy = -circle.center.y;\r\n\r\n    //     let sline = Geometry.LineShifted(line, dx, dy);\r\n    //     let a = sline.a;\r\n    //     let b = sline.b;\r\n    //     let c = sline.c;\r\n    //     let r = circle.radius;\r\n    //     if (b === 0) {\r\n    //         a = sline.b;\r\n    //         b = sline.a;\r\n    //     }\r\n    //     let A = a * a + b * b;\r\n    //     let B = 2 * a * c;\r\n    //     let C = c * c - r * r * b * b;\r\n    //     let x = Geometry.QuadEquation(A, B, C);\r\n    //     if (x === null) return null;\r\n    //     let res = new Array(x.length);\r\n    //     for (let i = 0; i < x.length; i++) {\r\n    //         res[i] = new Coord2D();\r\n    //         if (sline.b === 0) {\r\n    //             res[i].y = x[i];\r\n    //             res[i].x = -(a * x[i] + c) / b;\r\n    //         } else {\r\n    //             res[i].x = x[i];\r\n    //             res[i].y = -(a * x[i] + c) / b;\r\n    //         }\r\n    //         res[i].x = res[i].x - dx;\r\n    //         res[i].y = res[i].y - dy;\r\n    //     }\r\n    //     return res;\r\n    // }\r\n\r\n    static isPointOnRayLine(line, point) {\r\n        return (((point.x - line.origin.x) * line.vector.x) >= 0 && ((point.y - line.origin.y) * line.vector.y) >= 0);\r\n    }\r\n\r\n    // static CircleRayLineIntersection(line, circle) {\r\n    //     let points = Geometry.CircleLineIntersection(new SLine(line.origin, new Coord2D(line.origin.x+line.vector.x,line.origin.y+line.vector.y)), circle);\r\n    //     if (points === null) return null;\r\n    //     let k = 0;\r\n    //     let i = 0;\r\n    //     for (let p of points) {\r\n\r\n    //         if (Geometry.isPointOnRayLine(line, p)) k++; else points[i] = null;\r\n    //         i++;\r\n    //     }\r\n    //     if (k === 0) return null;\r\n    //     let res = new Array(k);\r\n    //     k = 0;\r\n    //     for (let p of points) if (p != null) {\r\n    //         res[k++] = p;\r\n    //     }\r\n    //     return res;\r\n    // }\r\n\r\n    static arcMiddlePoint(arc) {\r\n        let mp = Geometry.midPoint(arc.first, arc.third);\r\n        let m = Math.sqrt((mp.x - arc.center.x) * (mp.x - arc.center.x) + (mp.y - arc.center.y) * (mp.y - arc.center.y));\r\n        return new Coord2D(arc.radius / m + arc.center.x, arc.radius / m + arc.center.y);\r\n    }\r\n\r\n    static arcToPointArray(arc, limit) {\r\n        if (arc.chord <= limit) {\r\n            let res = new Array(2);\r\n            res[0] = arc.first;\r\n            res[1] = arc.third;\r\n            return res;\r\n        }\r\n        let mp = Geometry.arcMiddlePoint(arc);\r\n        let first = Geometry.arcToPointArray(Geometry.arcByTwoPointsCenter(arc.first, mp, arc.center), limit);\r\n        let second = Geometry.arcToPointArray(Geometry.arcByTwoPointsCenter(mp, arc.third, arc.center), limit);\r\n        let len = first.length - 1 + second.length;\r\n        let res = new Array(len);\r\n        for (let i = 0; i <= len; i++) {\r\n            if (i < first.length - 1) res[i] = first[i];\r\n            else res[i] = second[i];\r\n        }\r\n        return res;\r\n    }\r\n\r\n    static arcByTwoPointsCenter(p1, p2, c) {\r\n        let mp = Geometry.midPoint(p1, p2);\r\n        let m = Math.sqrt((mp.x - c.x) * (mp.x - c.x) + (mp.y - c.y) * (mp.y - c.y));\r\n        let r = Math.sqrt((p1.x - c.x) * (p1.x - c.x) + (p1.y - c.y) * (p1.y - c.y));\r\n        return new Arc(p1, new Coord2D(r / m + c.x, r / m + c.y), p2);\r\n    }\r\n\r\n    static arcLength(arc) {\r\n        let v1 = new Vector(arc.center, arc.first);\r\n        let v2 = new Vector(arc.center, arc.third);\r\n        let a = Geometry.angleVectors(v1, v2);\r\n        return a * arc.radius;\r\n    }\r\n\r\n    static QuadEquation(a, b, c) {\r\n        if (a === 0) return null;\r\n        let d = b * b - 4 * a * c;\r\n        if (d < 0) return null;\r\n        let res = [];\r\n        if (d === 0) {\r\n            res = [];\r\n            res[0] = -b / (2 * a);\r\n            return res;\r\n        }\r\n        res = [];\r\n        res[0] = (-b + Math.sqrt(d)) / (2 * a);\r\n        res[1] = (-b - Math.sqrt(d)) / (2 * a);\r\n        return res;\r\n    }\r\n    static distance(p1,p2) {\r\n        return Math.sqrt((p2.x-p1.x) * (p2.x-p1.x) + (p2.y-p1.y) * (p2.y-p1.y));\r\n    }\r\n    static rotatePoint(point, angle, center){\r\n        let p=new Coord2D(point.x-center.x,point.y-center.y);\r\n        let res=new Coord2D();\r\n        res.x=p.x*Math.cos(angle)-p.y*Math.sin(angle)+center.x;\r\n        res.y=p.x*Math.sin(angle)+p.y*Math.cos(angle)+center.y;\r\n        return res;\r\n    }\r\n    static screenToReal(x,y,screenWidth,screenHeight,topLeft,bottomRight){\r\n        let realWidth=bottomRight.x-topLeft.x;\r\n        let realHeight=topLeft.y-bottomRight.y;\r\n        let rx=x/screenWidth*realWidth+topLeft.x;\r\n        let ry=topLeft.y-y/screenHeight*realHeight;\r\n        return {x:rx,y:ry};\r\n    }\r\n    static realToScreen(point,realRect, screenRect){\r\n        let ratio = realRect.width / screenRect.width;\r\n        let x = Math.round((point.x - realRect.topLeft.x) / ratio);\r\n        let y = -Math.round((point.y - realRect.topLeft.y) / ratio);\r\n        return {x,y};\r\n    }\r\n}\r\n\r\n\r\n","\r\nexport default class ShapeStyle {\r\n    static DASH=[1,3];\r\n    static SOLID=[0];\r\n    static SELECTION=[1,1];\r\n    constructor(color,stroke,width=1){\r\n        this.color=color;\r\n        this.originColor=this.color;\r\n        this.width=width;\r\n        this.type=stroke;\r\n        switch(stroke){\r\n            case ShapeStyle.DASH:\r\n                this.stroke=[1,3];\r\n                break;\r\n            case ShapeStyle.SOLID:\r\n                this.stroke=[0];\r\n                break;\r\n            case ShapeStyle.SELECTION:\r\n                this.stroke=[1,1];\r\n                break;\r\n            default:\r\n        }\r\n    }\r\n    getColor() {\r\n        return this.color;\r\n    }\r\n\r\n    setColor(color) {\r\n        this.color = color;\r\n    }\r\n    getType(){return this.type;}\r\n    getStroke() {\r\n        return this.stroke;\r\n    }\r\n\r\n    setStroke(stroke) {\r\n        this.stroke = stroke;\r\n    }\r\n    getWidth(){\r\n        return this.width;\r\n    }\r\n    setWidth(width){\r\n        this.width=width;\r\n    }\r\n\r\n}","export const Color={\r\n    BLUE:\"#0000FF\",\r\n    BLACK:\"#000000\",\r\n    GRAY:\"#D0D0D0\",\r\n    RED:\"#FF0000\",\r\n    DARK_ORANGE:\"#FFB000\",\r\n    GREEN:\"#00FF00\",\r\n    SELECTED:\"#0000FF\",\r\n    SELECTION_AREA:'#000000',\r\n    GRID:\"#909090\",\r\n    ACTIVE_POINT_MARKER:\"#FF0000\",\r\n    POINT_MARKER:\"#0000FF\",\r\n}","import {Color} from '../colors';\r\nimport ShapeStyle from './ShapeStyle';\r\n\r\nexport default class Shape {\r\n    constructor(){\r\n        this.style=new ShapeStyle(Color.BLACK,ShapeStyle.SOLID);\r\n        this.state={selected:false,highlighted:false};\r\n    }\r\n    getModel(){\r\n        return this.model;\r\n    }\r\n    setColor(color){\r\n        this.style.setColor(color);\r\n    }\r\n    getColor(){\r\n        return this.style.getColor();\r\n    }\r\n    getStyle() {\r\n        return this.style;\r\n    }\r\n\r\n    setStyle(style) {\r\n        this.style = style;\r\n    }\r\n    setState(state){\r\n        this.state={...this.state,...state};\r\n        if(this.state.selected===true) {\r\n            this.setStyle(new ShapeStyle(Color.SELECTED,ShapeStyle.SOLID,2));\r\n            return;\r\n        }else {\r\n            this.setStyle(new ShapeStyle(Color.BLACK,ShapeStyle.SOLID,1));\r\n            this.activePoint=null;\r\n            this.activePointMarker=null;\r\n        }\r\n        if(this.state.highlighted===true) this.setStyle(new ShapeStyle(Color.BLACK,ShapeStyle.SOLID,2));\r\n    }\r\n    getState(){\r\n        return this.state;\r\n    }\r\n    setProperty(prop){\r\n        if(prop.key==='Color') this.setColor(prop.value);\r\n    }\r\n}","import Geometry from '../../utils/geometry';\r\nimport Shape from \"./Shape\";\r\n\r\nexport default class TextShape extends Shape{\r\n    static CENTER=1;\r\n    constructor(text=\"\",point={x:0,y:0}){\r\n        super();\r\n        this.p=point;\r\n        this.text=text;\r\n    }\r\n    drawSelf(ctx,realRect, screenRect){\r\n        this.refresh(realRect, screenRect);\r\n        ctx.strokeStyle=this.getStyle().getColor();\r\n        ctx.setLineDash(this.getStyle().getStroke());\r\n        ctx.lineWidth=this.getStyle().getWidth();\r\n        console.log(ctx.lineWidth)\r\n        ctx.save();\r\n        ctx.font=this.font;\r\n        let basePoint={...this.p0}\r\n        if(this.anchor===TextShape.CENTER){\r\n            const width=ctx.measureText(this.text).width/2;\r\n            basePoint.x=this.p0.x-width*Math.cos(this.angle);\r\n            basePoint.y=this.p0.y-width*Math.sin(this.angle);\r\n        }\r\n        const newPoint=Geometry.rotatePoint(basePoint,this.angle,{x:0,y:0})\r\n        ctx.translate(basePoint.x-newPoint.x,basePoint.y-newPoint.y);\r\n        ctx.rotate(this.angle);\r\n        ctx.strokeText(this.text,basePoint.x,basePoint.y);\r\n        ctx.restore();\r\n    }\r\n    refresh(realRect, screenRect){\r\n        this.p0 = Geometry.realToScreen(this.p,realRect,screenRect);\r\n    }\r\n    rotate(angle){\r\n        this.angle=angle;\r\n    }\r\n    getMarkers(){\r\n        let list=[];\r\n        return list;\r\n    }\r\n    setText(text){\r\n        this.text=text;\r\n    }\r\n    setFont(font){\r\n        this.font=font;\r\n    }\r\n    setPoint(point){\r\n        this.p=point;\r\n    }\r\n    setAnchor(anchor){\r\n        this.anchor=anchor;\r\n    }\r\n    setActivePoint(key){\r\n        this.activePoint=null;\r\n        if(key==='P1') this.activePoint=this.p;\r\n    }\r\n    getProperties(){\r\n        let prop=new Map();\r\n        return prop;\r\n    }\r\n    setProperty(prop){\r\n        super.setProperty(prop);\r\n        switch(prop.key){\r\n            case 'P1':\r\n                this.line.p1.x=prop.value.x;\r\n                this.line.p1.y=prop.value.y;\r\n                break;\r\n            case 'P2':\r\n                this.line.p2.x=prop.value.x;\r\n                this.line.p2.y=prop.value.y;\r\n                break;\r\n            default:\r\n        }\r\n    }\r\n    getDistance(point) {\r\n        return null\r\n        //return Geometry.PointToLineDistance(point,this.line);\r\n    }\r\n    isInRect(topLeft,bottomRight){\r\n        return {cross:false,full:false}\r\n        // const inRect=[Geometry.pointInRect(this.p,topLeft,bottomRight),\r\n        //                 Geometry.pointInRect(this.line.p2,topLeft,bottomRight)];\r\n        // const full=inRect.every(i=>i===true);\r\n        // const cross=Intersection.LineRectangle(this.line,topLeft,bottomRight).length>0;\r\n        // return {cross,full};    \r\n    }\r\n    toString(){\r\n            return `Line P1(${this.line.p1.x},${this.line.p1.y}) P2(${this.line.p2.x},${this.line.p2.y})`;\r\n    }\r\n\r\n}","import React from 'react';\r\nimport '../Graph.css';\r\nimport Geometry, {Coord2D, Point2D,Rectangle} from '../utils/geometry.js';\r\nimport ShapeStyle from './shapes/ShapeStyle';\r\nimport {Color} from './colors';\r\nimport { FREE, CREATE, PAN, SELECT, PICK } from '../reducers/screen';\r\nimport TextShape from './shapes/TextShape';\r\nexport default class Screen extends React.Component {\r\n    static MARKER_SIZE=0.005;\r\n    static SNAP_MARKER_SIZE=5;\r\n    curPoint=new Point2D();\r\n    prevPoint=new Point2D();\r\n    gridStep=1;gridStepPixels=1;dragGrid=false;\r\n    gridPointsX=[];gridPointsY=[];\r\n    gridNumbersX=[];gridNumbersY=[];\r\n    dragX0=0;dragY0=0;\r\n    drag=false;lbut=0o00;mbut=0o01;\r\n    constructor(props){\r\n        super(props);\r\n        window.KEYDOWNHANDLE=true\r\n        this.refCanvas=React.createRef()\r\n    }\r\n\r\n    getRealRect(){\r\n        let realRect = new Rectangle();\r\n        realRect.topLeft = this.props.topLeft;\r\n        realRect.bottomRight=this.props.bottomRight;\r\n        realRect.width = this.props.bottomRight.x-this.props.topLeft.x;\r\n        realRect.height=this.props.topLeft.y-this.props.bottomRight.y;\r\n        return realRect;\r\n    }\r\n    getScreenRect(){\r\n        let screenRect = new Rectangle();\r\n        screenRect.topLeft.x = 0;\r\n        screenRect.topLeft.y = 0;\r\n        screenRect.width = this.props.screenWidth;\r\n        screenRect.height = this.props.screenHeight;\r\n        return screenRect;\r\n    }\r\n\r\n    test(){\r\n        const text=new TextShape('Text',{x:0,y:0})\r\n        text.setStyle(new ShapeStyle(Color.BLACK,ShapeStyle.SOLID))\r\n        text.rotate(45*Math.PI/180)\r\n        this.props.shapes.push(text);\r\n    }\r\n\r\n    drawCursor(ctx){\r\n      this.props.cursor.setCoord(this.props.curCoord);\r\n      this.drawShape(this.props.cursor,ctx);\r\n    }\r\n    drawGrid(ctx){\r\n        ctx.strokeStyle=Color.GRID;\r\n        let solidStyle=new ShapeStyle(Color.GRAY,ShapeStyle.SOLID);\r\n        let dashStyle=new ShapeStyle(Color.GRAY,ShapeStyle.DASH);\r\n        let firstX=Math.round(this.props.topLeft.x/this.props.gridStep)*this.props.gridStep;\r\n        let firstY=Math.round(this.props.topLeft.y/this.props.gridStep)*this.props.gridStep;\r\n        let hor=false;\r\n        let vert=false;\r\n        let ix=0;\r\n        let iy=0;\r\n        let xGridLineNumber=Math.round(firstX/this.props.gridStep);\r\n        let yGridLineNumber=Math.round(firstY/this.props.gridStep);\r\n        let gridLinesCountX=Math.round(this.props.realWidth/this.props.gridStep);\r\n        let gridLinesCountY=Math.round(this.props.realHeight/this.props.gridStep);\r\n        this.gridPointsX=new Array(gridLinesCountX);\r\n        this.gridPointsY=new Array(gridLinesCountY);\r\n        this.gridNumbersX=new Array(gridLinesCountX);\r\n        this.gridNumbersY=new Array(gridLinesCountY);\r\n        while(!hor||!vert){\r\n            if(!hor){\r\n                let x=firstX+this.props.gridStep*ix;\r\n                let px=Geometry.realToScreen(new Coord2D(x,this.props.topLeft.y),this.getRealRect(),this.getScreenRect());\r\n                if(xGridLineNumber%10===0) ctx.setLineDash(solidStyle.getStroke());else ctx.setLineDash(dashStyle.getStroke());\r\n\r\n                if(this.props.show.grid) {\r\n                    ctx.beginPath();\r\n                    ctx.moveTo(px.x, 0);\r\n                    ctx.lineTo(px.x, this.props.screenHeight);\r\n                    ctx.stroke();\r\n                }\r\n                this.gridPointsX[ix]=px.x;\r\n                this.gridNumbersX[ix]=x;\r\n                ix++;\r\n                xGridLineNumber++;\r\n                if(x>(this.props.topLeft.x+this.props.realWidth))hor=true;\r\n            }\r\n            if(!vert){\r\n                let y=firstY-this.props.gridStep*iy;\r\n                let py=Geometry.realToScreen(new Coord2D(this.props.topLeft.x,y),this.getRealRect(),this.getScreenRect());\r\n                if(yGridLineNumber%10===0) ctx.setLineDash(solidStyle.getStroke());else ctx.setLineDash(dashStyle.getStroke());\r\n                yGridLineNumber--;\r\n                if(this.props.show.grid) {\r\n                    ctx.beginPath();\r\n                    ctx.moveTo(0, py.y);\r\n                    ctx.lineTo(this.props.screenWidth, py.y);\r\n                    ctx.stroke();\r\n                }\r\n                this.gridPointsY[iy]=py.y;\r\n                this.gridNumbersY[iy]=y;\r\n                iy++;\r\n                if(y<(this.props.topLeft.y-this.props.realHeight))vert=true;\r\n            }\r\n\r\n        }\r\n        ctx.setLineDash(solidStyle.getStroke());\r\n    }\r\n    drawCoordinates(ctx){\r\n        ctx.font=\"10px sans-serif\";\r\n        ctx.strokeStyle=\"black\";\r\n        let i=0;\r\n        let format=0;\r\n        let w;\r\n        if(this.props.gridStep>=0.001){format=3;}\r\n        if(this.props.gridStep>=0.01){format=2;}\r\n        if(this.props.gridStep>=0.1){format=1;}\r\n        if(this.props.gridStep>=1){format=0;}\r\n        let l=0;\r\n        let s0=\"\";//Finding out the number with maximum length\r\n        for(let x of this.gridNumbersX){\r\n            if(x===null) continue;\r\n             let s=x.toFixed(format);\r\n            if(l<s.length){s0=s;l=s.length;}\r\n            }\r\n        w=ctx.measureText(s0).width;\r\n        for(let x of this.gridPointsX){\r\n            if(x===null) continue;\r\n            if(x>this.props.marginLeft&&x<this.props.screenWidth-this.props.marginRight) {\r\n                 let s=this.gridNumbersX[i].toFixed(format);\r\n                 let d=1;\r\n                 let r=w/this.props.gridStepPixels;\r\n                 if(r>=1)d=2;\r\n                 if(r>=1.5)d=5;\r\n                 if(Math.round(this.gridNumbersX[i]/this.props.gridStep)%d===0)\r\n                    ctx.strokeText(s,x-ctx.measureText(s).width/2,this.props.marginTop - 5);\r\n            }\r\n            i++;\r\n        }\r\n        i=0;\r\n        for(let y of this.gridPointsY){\r\n            if(y===null) continue;\r\n            if(y>this.props.marginTop&&y<this.props.screenHeight-this.props.marginBottom){\r\n                let s=this.gridNumbersY[i].toFixed(format);\r\n                w=ctx.measureText(s).width;\r\n                let h=ctx.measureText(\"12\").width;\r\n                let d=1;\r\n                let r=h/this.props.gridStepPixels;\r\n                if(r>0.8&&r<1.5)d=2;\r\n                if(r>=1.5)d=5;\r\n                if(Math.round(this.gridNumbersY[i]/this.props.gridStep)%d===0)\r\n                    ctx.strokeText(s,this.props.marginLeft-w,y+h/3);\r\n                }\r\n             i++;\r\n        }\r\n    }\r\n    drawShape(s, ctx){\r\n        s.drawSelf(ctx,this.getRealRect(), this.getScreenRect());\r\n    }\r\n    paint(ctx){\r\n        ctx.fillStyle=\"white\";\r\n        ctx.lineWidth=1;\r\n        ctx.lineJoin='round';\r\n        ctx.fillRect(0, 0, this.props.screenWidth, this.props.screenHeight);\r\n        this.drawGrid(ctx);\r\n        this.drawShape(this.props.xAxe,ctx)\r\n        this.drawShape(this.props.yAxe,ctx)\r\n        let status_bar=`X=${this.props.curCoord.x.toFixed(3)} Y=${this.props.curCoord.y.toFixed(3)} `;\r\n        let currentShape='';\r\n        if(this.props.shapeCreator) currentShape=this.props.captions.creators[this.props.shapeCreator.getName()].description;\r\n        let creationStep='';\r\n        if(this.props.status===CREATE) \r\n            {\r\n            creationStep=this.props.captions.creators[this.props.shapeCreator.getName()].steps[this.props.shapeCreator.getCurrentStep()];\r\n            status_bar=status_bar+`${currentShape}: ${creationStep}`;\r\n            }\r\n        if(this.props.shapeCreator){\r\n            let curHelperShapes=null;\r\n            curHelperShapes=this.props.shapeCreator.getHelperShapes();\r\n            if(curHelperShapes!=null)\r\n            for(let shape of curHelperShapes)\r\n                this.drawShape(shape, ctx);\r\n            let curShape=null;\r\n            curShape=this.props.shapeCreator.getShape();\r\n            if(curShape!=null) this.drawShape(curShape, ctx);\r\n        }\r\n        if(this.props.status===PICK) {\r\n            creationStep=this.props.captions.pickers[this.props.picker.getName()].steps[this.props.picker.getCurrentStep()];\r\n            status_bar=status_bar+`${creationStep}`;\r\n\r\n             }\r\n        if(this.props.picker){\r\n            const pickShape=this.props.picker.getShape();\r\n            if(pickShape!=null) this.drawShape(pickShape, ctx);   \r\n            const pickHelperShapes=this.props.picker.getHelperShapes();\r\n            if(pickHelperShapes!=null)\r\n            for(let shape of pickHelperShapes)\r\n                this.drawShape(shape, ctx);\r\n        }\r\n        for(let shape of this.props.shapes){\r\n                this.drawShape(shape,ctx);\r\n                if(shape.activePointMarker) \r\n                        this.drawShape(shape.activePointMarker,ctx);\r\n            }\r\n         \r\n        ctx.lineWidth=1;\r\n        ctx.setLineDash(ShapeStyle.SOLID);\r\n        ctx.fillStyle=\"white\";\r\n        //fill margin\r\n        ctx.fillRect(0, 0, this.props.screenWidth-this.props.marginRight,this.props.marginTop);\r\n        ctx.fillRect(0,0, this.props.marginLeft,this.props.screenHeight);\r\n        ctx.fillRect(this.props.screenWidth-this.props.marginRight, 0, this.props.screenWidth,this.props.screenHeight);\r\n        ctx.fillRect(this.props.marginLeft, this.props.screenHeight-this.props.marginBottom, this.props.screenWidth-this.props.marginRight,this.props.screenHeight-this.props.marginTop);\r\n        ctx.strokeStyle=\"black\";\r\n        ctx.strokeRect(this.props.marginLeft, this.props.marginTop, this.props.screenWidth-this.props.marginRight-this.props.marginLeft,this.props.screenHeight-this.props.marginBottom-this.props.marginTop);\r\n        this.drawCoordinates(ctx);\r\n        ctx.font=\"12px sans-serif\";\r\n        ctx.strokeText(status_bar,this.props.marginLeft,this.props.screenHeight-this.props.statusBar);\r\n        if(this.props.status!==FREE){\r\n            let marker=this.props.snapMarkersManager.getActiveMarker();\r\n            if(marker!=null) {\r\n                marker.refresh(this.getRealRect(), this.getScreenRect());\r\n                this.drawShape(marker.getMarker(), ctx);\r\n            }\r\n        }\r\n        ctx.lineWidth=1;\r\n        if(this.props.status===SELECT){\r\n            this.drawShape(this.props.selectionManager.getSelectionShape(),ctx);\r\n        }\r\n        if(this.mouseOnScreen)this.drawCursor(ctx);\r\n    }\r\n\r\n    isOutRect(p){\r\n       return p.x<this.props.marginLeft||p.x>this.props.screenWidth-this.props.marginRight\r\n        ||p.y<this.props.marginTop||p.y>this.props.screenHeight-this.props.marginBottom;\r\n    }\r\n\r\n    mmove(e){\r\n        let rect=e.target.getBoundingClientRect();\r\n        let curPoint={x:e.clientX-rect.left,y:e.clientY-rect.top};\r\n        this.mouseOnScreen=!this.isOutRect(curPoint);\r\n        let coord={x:this.props.curCoord.x,y:this.props.curCoord.y};\r\n\r\n        if(this.props.status===PAN){\r\n            coord=Geometry.screenToReal(curPoint.x,curPoint.y,this.props.screenWidth,this.props.screenHeight,this.props.topLeft,this.props.bottomRight);\r\n            let dx=curPoint.x-this.dragX0;\r\n            let dy=curPoint.y-this.dragY0;\r\n            this.dragX0=curPoint.x\r\n            this.dragY0=curPoint.y\r\n            const rdx=this.props.realWidth*dx/this.props.screenWidth;\r\n            const rdy=this.props.realHeight*dy/this.props.screenHeight;\r\n            this.props.actions.setTopLeft({x:this.props.topLeft.x-rdx,y:this.props.topLeft.y+rdy});\r\n            this.props.actions.setBoundedCircle();\r\n            return;\r\n        }\r\n        if(this.isOutRect(curPoint)){\r\n            curPoint.x=this.prevPoint.x;\r\n            curPoint.y=this.prevPoint.y;\r\n        }\r\n        coord=Geometry.screenToReal(curPoint.x,curPoint.y,this.props.screenWidth,this.props.screenHeight,this.props.topLeft,this.props.bottomRight);\r\n        coord.x=+coord.x.toFixed(4);\r\n        coord.y=+coord.y.toFixed(4);\r\n        this.prevPoint.x=curPoint.x;\r\n        this.prevPoint.y=curPoint.y;\r\n        let temp={x:coord.x,y:coord.y};\r\n        if(this.props.gridSnap&&this.props.status!==FREE){\r\n            let x=Math.round(temp.x/this.props.gridStep)*this.props.gridStep;\r\n            let y=Math.round(temp.y/this.props.gridStep)*this.props.gridStep;\r\n            let dx=x-temp.x;\r\n            let dy=y-temp.y;\r\n            if((Math.sqrt(dx*dx+dy*dy)<=this.props.snapMinDist*this.props.pixelRatio)){\r\n                if(!this.isOutRect(Geometry.realToScreen({x,y},this.getRealRect(),this.getScreenRect()))) {\r\n                    temp.x = x;\r\n                    temp.y = y;\r\n                    curPoint = Geometry.realToScreen(temp,this.getRealRect(),this.getScreenRect());\r\n                }\r\n                }\r\n        }\r\n        if(this.props.status!==FREE){\r\n            let d = this.props.snapMarkersManager.getDistanceToNearestMarker(temp,this.props.snapDist*this.props.pixelRatio);\r\n            if(d>=0&&d<=this.props.snapMinDist*this.props.pixelRatio){\r\n                temp=this.props.snapMarkersManager.getActiveMarker().getPos();\r\n                curPoint = Geometry.realToScreen(temp,this.getRealRect(),this.getScreenRect());\r\n            }\r\n        }\r\n        coord=temp;\r\n        if(this.props.status===FREE){\r\n            this.props.shapeManager.setShapeNearPoint(coord,this.props.selectDist*this.props.pixelRatio);\r\n        }\r\n        if(this.props.status===SELECT){\r\n            this.props.selectionManager.setCurrent(coord);\r\n            this.props.shapeManager.setShapeInRect(this.prevCoord,coord);\r\n        }\r\n        if(this.props.status===CREATE){\r\n            this.props.shapeCreator.setCurrent(coord);\r\n        }\r\n        if(this.props.status===PICK){\r\n            this.props.picker.setCurrent(coord);\r\n        }\r\n        this.props.actions.setCurCoord(coord);\r\n        \r\n    }\r\n    mdown(e){\r\n        if(e.button===1){\r\n            let rect=e.target.getBoundingClientRect();\r\n            const curPoint={x:e.clientX-rect.left,y:e.clientY-rect.top};\r\n            this.dragX0=curPoint.x\r\n            this.dragY0=curPoint.y\r\n            this.props.actions.setScreenStatus(PAN);\r\n            e.preventDefault();\r\n        }\r\n        if(e.button===0){\r\n            let rect=e.target.getBoundingClientRect();\r\n            this.curPoint.x=e.clientX-rect.left;\r\n            this.curPoint.y=e.clientY-rect.top;\r\n            if(this.props.status===FREE){\r\n                this.prevCoord=Geometry.screenToReal(this.curPoint.x,this.curPoint.y,this.props.screenWidth,this.props.screenHeight,this.props.topLeft,this.props.bottomRight);\r\n                this.props.selectionManager.reset();\r\n                this.props.selectionManager.setNext(Geometry.screenToReal(this.curPoint.x,this.curPoint.y,this.props.screenWidth,this.props.screenHeight,this.props.topLeft,this.props.bottomRight));\r\n                this.props.actions.setScreenStatus(SELECT);\r\n            }\r\n            this.props.actions.repaint();\r\n            e.preventDefault();\r\n        }\r\n    }\r\n    mup(e){\r\n        if(e.button===1){\r\n            this.props.actions.setPrevStatus();\r\n        }\r\n        if(e.button===0){\r\n            if(this.props.status===SELECT){\r\n                this.props.actions.cancel();\r\n            }\r\n        }\r\n    }\r\n    mwheel(e){\r\n        if(this.props.status===PAN)return;\r\n        let rect=e.target.getBoundingClientRect();\r\n        let p=Geometry.screenToReal(e.clientX-rect.left,e.clientY-rect.top,this.props.screenWidth,this.props.screenHeight,this.props.topLeft,this.props.bottomRight);\r\n        if(e.deltaY>0)\r\n        {\r\n            if(this.props.realWidth<=1000) this.props.actions.setScale(1.2,p);\r\n        }else{\r\n            if(this.props.pixelRatio>=0.001)\r\n                this.props.actions.setScale(1/1.2,p);\r\n        }\r\n       e.preventDefault();\r\n    }\r\n    mleave(){\r\n        if(this.props.status===PAN){\r\n            this.props.actions.setPrevStatus();\r\n        }\r\n        this.mouseOnScreen=false;\r\n        this.props.actions.repaint();\r\n    }\r\n    menter(){\r\n    }\r\n    onclick(e){\r\n        if(e.button===0){\r\n            if(this.props.status===CREATE){\r\n                this.props.shapeCreator.setCurrent(this.props.curCoord);\r\n                if(this.props.shapeCreator.isLegal()) this.props.shapeCreator.setNextPoint(this.props.curCoord);\r\n                if(!this.props.shapeCreator.isNext())\r\n                {\r\n                    this.props.shapes.push(this.props.shapeCreator.getShape());\r\n                    this.props.actions.refreshSnapMarkers();\r\n                    this.props.actions.refreshShapeManager();\r\n                    if(this.props.cyclicCreation){\r\n                        this.props.actions.createShape(this.props.shapeCreator.reset(this.props.boundedCircle));\r\n                    }else {\r\n                        this.props.actions.cancel();\r\n                    }\r\n                }\r\n            }\r\n            if(this.props.status===FREE){\r\n                    this.props.shapeManager.toggleShapeSelected();\r\n                }\r\n            if(this.props.status===PICK){\r\n                    this.props.picker.setNextPoint(this.props.curCoord);\r\n                    if(!this.props.picker.isNext())\r\n                    {\r\n                        this.props.actions.setPickedData(this.props.picker.getPickedData());\r\n                        this.props.actions.refreshSnapMarkers();\r\n                        this.props.actions.refreshShapeManager();\r\n                    }\r\n                }\r\n        }\r\n        this.props.actions.selectShapes(this.props.shapeManager.getSelectedShapes());\r\n        e.preventDefault();\r\n    }\r\n\r\n    resize(){\r\n        const style=window.getComputedStyle(document.querySelector('.screenContainer'));\r\n        const sw=Number.parseInt(style.width);\r\n        const sh=Number.parseInt(style.height);\r\n        this.props.actions.setDimensions(sw,sh,this.props.realWidth,this.props.topLeft);\r\n        this.canvas.width=sw;\r\n        this.canvas.height=sh;\r\n        this.props.actions.setBoundedCircle();\r\n    }\r\n    componentDidMount() {\r\n        this.canvas=document.querySelector(\"#canvas\");\r\n        this.ctx=this.canvas.getContext(\"2d\");\r\n        this.canvas.addEventListener(\"mousewheel\",this.mwheel.bind(this),{passive:false})\r\n        //this.test();\r\n        this.paint(this.ctx);\r\n        window.addEventListener('load',()=>{\r\n            this.resize();\r\n            this.props.actions.centerToPoint(new Coord2D(0,0));\r\n            this.props.actions.repaint();\r\n            document.body.oncontextmenu=()=>false\r\n        });\r\n        window.addEventListener('resize',()=>{\r\n            this.resize();\r\n        })\r\n        window.addEventListener('keydown',(e)=>{\r\n            if(window.KEYDOWNHANDLE===false) return;\r\n            this.props.keyDownHandler.forEach(key=>{\r\n                if(e.ctrlKey===key.ctrlKey&&e.shiftKey===key.shiftKey&&e.altKey===key.altKey&&e.keyCode===key.keyCode){\r\n                    if(this.props.actions[key.action]) this.props.actions[key.action](key.param);\r\n                    e.preventDefault();\r\n                }\r\n            })\r\n        })\r\n        \r\n    }\r\n\r\n    componentDidUpdate(){\r\n        this.props.shapeManager.setShapes(this.props.shapes,this.props.selectionType);\r\n        this.canvas.style.cursor='none'\r\n        this.paint(this.ctx);\r\n    }\r\n\r\n    render(){\r\n        return <canvas ref={this.refCanvas} id=\"canvas\" width={this.props.screenWidth} height={this.props.screenHeight}\r\n                onMouseMove={this.mmove.bind(this)}\r\n                onMouseDown={this.mdown.bind(this)}\r\n                onMouseUp={this.mup.bind(this)}\r\n                onMouseLeave={this.mleave.bind(this)}\r\n                onMouseEnter={this.menter.bind(this)}\r\n                onClick={this.onclick.bind(this)}\r\n            >\r\n            </canvas>\r\n    }\r\n}\r\n","import Screen from '../components/Screen';\r\nimport {SELECT,CREATE,CANCEL,PAN,PICK} from '../reducers/screen';\r\nexport const ADD_SHAPE = 'ADD_SHAPE';\r\nexport const CANCEL = 'CANCEL';\r\nexport const CANCEL_SELECTION = 'CANCEL_SELECTION';\r\nexport const CENTER_TO_POINT = 'CENTER_TO_POINT';\r\nexport const CREATE_SHAPE = 'CREATE_SHAPE';\r\nexport const DELETE_CONFIRM='DELETE_CONFIRM'\r\nexport const DELETE_SELECTED_SHAPES = 'DELETE_SELECTED_SHAPES';\r\nexport const PAN_SCREEN = 'PAN_SCREEN';\r\nexport const PICK = 'PICK';\r\nexport const REFRESH_SHAPE_MANAGER = 'REFRESH_SHAPE_MANAGER';\r\nexport const REFRESH_SNAP_MARKERS = 'REFRESH_SNAP_MARKERS';\r\nexport const REPAINT = 'REPAINT';\r\nexport const SELECT_ALL = 'SELECT_ALL';\r\nexport const SELECT_SHAPE = 'SELECT_SHAPE';\r\nexport const SET_BOUNDED_CIRCLE = 'SET_BOUNDED_CIRCLE';\r\nexport const SET_CUR_COORD = 'SET_CUR_COORD';\r\nexport const SET_CYCLIC_FLAG = 'SET_CYCLIC_FLAG';\r\nexport const SET_DIMENSIONS = 'SET_DIMENSIONS';\r\nexport const SET_GRID_SNAP = 'SET_GRID_SNAP';\r\nexport const SET_GRID_VISIBLE = 'SET_GRID_VISIBLE';\r\nexport const SET_PICKED_DATA = 'SET_PICKED_DATA';\r\nexport const SET_PREV_STATUS = 'SET_PREV_STATUS';\r\nexport const SET_RATIO = 'SET_RATIO';\r\nexport const SET_REAL_WIDTH = 'SET_REAL_WIDTH';\r\nexport const SET_SCALE = 'SET_SCALE';\r\nexport const SET_SCREEN_CONTEXT = 'SET_SCREEN_CONTEXT';\r\nexport const SET_SELECTION_TYPE = 'SET_SELECTION_TYPE';\r\nexport const SET_SNAP = 'SET_SNAP';\r\nexport const SET_STATUS = 'SET_STATUS';\r\nexport const SET_TOP_LEFT = 'SET_TOP_LEFT';\r\nexport const START_PICKING = 'START_PICKING';\r\nexport const START_SELECTION = 'START_SELECTION';\r\n\r\nexport function addShape(shape){\r\n    return {\r\n        type:ADD_SHAPE,\r\n        payload:shape\r\n    }\r\n}\r\nexport function cancel(){\r\n    return{\r\n        type:CANCEL\r\n    }\r\n}\r\nexport function cancelSelection(){\r\n    return{\r\n        type:CANCEL_SELECTION\r\n    }\r\n}\r\nexport function centerToPoint(p){\r\n    return {\r\n        type:CENTER_TO_POINT,\r\n        payload:p\r\n    }\r\n}\r\nexport function createNewShape(creator){\r\n    return {\r\n        type: CREATE_SHAPE,\r\n        payload:creator,\r\n    }\r\n}\r\nexport function deleteConfirm() {\r\n    return {\r\n        type: DELETE_CONFIRM,\r\n    }\r\n}\r\nexport function deleteSelectedShapes() {\r\n    return {\r\n        type: DELETE_SELECTED_SHAPES,\r\n    }\r\n}\r\nexport function refreshShapeManager(){\r\n    return{\r\n        type:REFRESH_SHAPE_MANAGER\r\n    }\r\n}\r\nexport function refreshSnapMarkers(){\r\n    return{\r\n        type:REFRESH_SNAP_MARKERS\r\n    }\r\n}\r\nexport function repaint(){\r\n    return{\r\n        type:REPAINT\r\n    }\r\n}\r\nexport function selectAll() {\r\n    return {\r\n        type: SELECT_ALL\r\n    }\r\n}\r\nexport function selectShapes(selectedShapes) {\r\n    return {\r\n        type: SELECT_SHAPE,\r\n        payload: selectedShapes,\r\n    }\r\n}\r\nexport function setBoundedCircle(){\r\n    return{\r\n        type:SET_BOUNDED_CIRCLE\r\n    }\r\n}\r\nexport function setCurCoord(coord) {\r\n    return {\r\n        type: SET_CUR_COORD,\r\n        payload: coord,\r\n    }\r\n}\r\nexport function setCyclicFlag(flag) {\r\n    return {\r\n        type: SET_CYCLIC_FLAG,\r\n        payload: flag,\r\n    }\r\n}\r\nexport function setDimensions(width,height,realWidth,topLeft){\r\n    return{\r\n        type:SET_DIMENSIONS,\r\n        payload:{width,height,realWidth,topLeft}\r\n    }\r\n}\r\nexport function setGridSnap(snap) {\r\n    return {\r\n        type: SET_GRID_SNAP,\r\n        payload: snap,\r\n    }\r\n}\r\nexport function setGridVisible(visible) {\r\n    return {\r\n        type: SET_GRID_VISIBLE,\r\n        payload: visible,\r\n    }\r\n}\r\nexport function setPickedData(data){\r\n    return{\r\n        type:SET_PICKED_DATA,\r\n        payload:data\r\n    }\r\n}\r\nexport function setPrevStatus(){\r\n    return{\r\n        type:SET_PREV_STATUS,\r\n    }\r\n}\r\nexport function setRatio(ratio){\r\n    return{\r\n        type:SET_RATIO,\r\n        payload:ratio\r\n    }\r\n}\r\nexport function setRealWidth(width){\r\n    return{\r\n        type:SET_REAL_WIDTH,\r\n        payload:width\r\n    }\r\n}\r\nexport function setScale(scale,anchor){\r\n    return{\r\n        type:SET_SCALE,\r\n        payload:{scale,anchor}\r\n    }\r\n}\r\nexport function setScreenContext(context) {\r\n    return {\r\n        type: SET_SCREEN_CONTEXT,\r\n        payload: context,\r\n    }\r\n}\r\nexport function setScreenStatus(status=Screen.FREE,params){\r\n    let payload=null;\r\n    let type=null;\r\n    switch(status){\r\n        case SELECT:\r\n            type=START_SELECTION;\r\n            break;\r\n        case CREATE:\r\n            type=CREATE_SHAPE;\r\n            payload={creator:params.creator}\r\n            break;\r\n        case CANCEL:\r\n            type=CANCEL;\r\n            break;\r\n        case PAN:\r\n            type=PAN_SCREEN;\r\n        break;\r\n        case PICK:\r\n            type=PICK;\r\n            payload={picker:params.picker}\r\n            break;\r\n        default:\r\n    }\r\n    return {\r\n        type,\r\n        payload\r\n    }\r\n}\r\nexport function setSelectionType(selType) {\r\n    return {\r\n        type: SET_SELECTION_TYPE,\r\n        payload: selType,\r\n    }\r\n}\r\nexport function setSnap(snapClass,snap) {\r\n    const type=snapClass==='grid'?SET_GRID_SNAP:SET_SNAP\r\n    const payload=snapClass==='grid'?snap:{snapClass:snapClass,snap:snap}\r\n    return {\r\n        type: type,\r\n        payload: payload,\r\n    }\r\n}\r\nexport function setTopLeft(p){\r\n    return {\r\n        type:SET_TOP_LEFT,\r\n        payload:p\r\n    }\r\n}\r\nexport function startPicking(id,picker){\r\n    return{\r\n        type:START_PICKING,\r\n        payload:{id,picker}\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","export const CREATE_SHAPE='CREATE_SHAPE';\r\nexport const SELECT_SHAPE='SELECT_SHAPE';\r\nexport const SET_PROPERTY='SET_PROPERTY';\r\nexport function createShape(shapeCreator) {\r\n    return {\r\n        type: CREATE_SHAPE,\r\n        payload: shapeCreator,\r\n    }\r\n}\r\nexport function setProperty(prop){\r\n    return {\r\n        type:SET_PROPERTY,\r\n        payload:prop,\r\n    }\r\n}\r\n\r\n","import Shape from \"../Shape\";\r\nimport Geometry from \"../../../utils/geometry\";\r\n\r\nexport default class FreeCursor extends Shape{\r\n    constructor(point){\r\n        super();\r\n        this.p=point;\r\n    }\r\n    drawSelf(ctx, realRect,  screenRect){\r\n        this.refresh(realRect,screenRect);\r\n        ctx.strokeStyle=this.getStyle().getColor();\r\n        ctx.setLineDash(this.getStyle().getStroke());\r\n        ctx.lineWidth=this.getStyle().getWidth();\r\n        let size=15;\r\n        let rectSize=6;\r\n        ctx.beginPath();\r\n        ctx.moveTo(this.p0.x-size,this.p0.y);\r\n        ctx.lineTo(this.p0.x+size,this.p0.y);\r\n        ctx.moveTo(this.p0.x,this.p0.y-size);\r\n        ctx.lineTo(this.p0.x,this.p0.y+size);\r\n        ctx.strokeRect(this.p0.x-rectSize/2,this.p0.y-rectSize/2,rectSize,rectSize);\r\n        ctx.stroke();\r\n    }\r\n    refresh( realRect,  screenRect){\r\n        this.p0 = Geometry.realToScreen(this.p,realRect,screenRect);\r\n    }\r\n    setCoord( point) {\r\n        this.p=point;\r\n    }\r\n}\r\n","export default class ShapeManager {\r\n    constructor(shapes){\r\n        this.allShapes=shapes;\r\n    }\r\n    setShapes(shapes,selType){\r\n        this.allShapes=shapes;\r\n        this.selType=selType;\r\n    }\r\n    setShapeNearPoint(p, dist){\r\n        let shape=null;\r\n        this.allShapes.forEach(s=>{\r\n            let d=s.getDistance(p);\r\n            if(d!==null&&d<=dist) {shape=s;}\r\n            s.setState({highlighted:false});\r\n        });\r\n        if(shape!==null)shape.setState({highlighted:true});\r\n    }\r\n    setShapeInRect(p1,p2){\r\n        let tl={...p1};\r\n        let br={...p2};\r\n        if(p1.x>p2.x) {tl.x=p2.x;br.x=p1.x}\r\n        if(p1.y<p2.y) {tl.y=p2.y;br.y=p1.y}\r\n        let shape=[];\r\n        this.allShapes.forEach(s=>{\r\n            if(!s.isInRect)return;//if method isInRect isn't implemented\r\n            const {cross,full}=s.isInRect(tl,br);\r\n            let ok=false;\r\n            if(this.selType==='fullSelect'&&full===true) ok=true;\r\n            if(this.selType==='crossSelect'&&cross===true) ok=true;\r\n            if(this.selType==='crossSelect'&&full===true) ok=true;\r\n            if(ok) {shape.push(s);}\r\n            s.setState({highlighted:false});\r\n        });\r\n        if(shape.length!==0)shape.forEach(s=>{s.setState({highlighted:true})});\r\n    }\r\n    toggleShapeSelected(){\r\n        this.allShapes.forEach(shape => {\r\n            if(shape.getState().highlighted) shape.setState({selected:!shape.getState().selected});\r\n        }); \r\n    }\r\n    getSelectedShapes(){\r\n        return this.allShapes.filter((shape)=>shape.getState().selected===true);\r\n    }\r\n}","import Shape from \"../Shape\";\r\nimport Geometry from \"../../../utils/geometry\";\r\n\r\nexport default class DrawCursor extends Shape{\r\n    constructor(point){\r\n        super();\r\n        this.p=point;\r\n    }\r\n    drawSelf(ctx, realRect,  screenRect){\r\n        this.refresh(realRect,screenRect);\r\n        ctx.strokeStyle=this.getStyle().getColor();\r\n        ctx.setLineDash(this.getStyle().getStroke());\r\n        ctx.lineWidth=this.getStyle().getWidth();\r\n        let size=10;\r\n        ctx.beginPath();\r\n        ctx.moveTo(this.p0.x-size,this.p0.y);\r\n        ctx.lineTo(this.p0.x+size,this.p0.y);\r\n        ctx.moveTo(this.p0.x,this.p0.y-size);\r\n        ctx.lineTo(this.p0.x,this.p0.y+size);\r\n        ctx.stroke();\r\n    }\r\n    refresh( realRect,  screenRect){\r\n        this.p0 = Geometry.realToScreen(this.p,realRect,screenRect);\r\n    }\r\n    setCoord( point) {\r\n        this.p=point;\r\n    }\r\n}\r\n","import Geometry,{Circle,Coord2D, Intersection} from \"../../utils/geometry\";\r\nimport Shape from \"./Shape\";\r\n\r\nexport default class SLineShape extends Shape{\r\n    constructor(line){\r\n        super();\r\n        this.line=line;\r\n        this.model=line;\r\n    }\r\n    drawSelf(ctx,realRect, screenRect){\r\n        this.refresh(realRect, screenRect);\r\n        if(this.p0===null||this.p1===null)return;\r\n        ctx.strokeStyle=this.getStyle().getColor();\r\n        ctx.setLineDash(this.getStyle().getStroke());\r\n        ctx.lineWidth=this.getStyle().getWidth();\r\n        ctx.beginPath();\r\n        ctx.moveTo(this.p0.x,this.p0.y);\r\n        ctx.lineTo(this.p1.x,this.p1.y);\r\n        ctx.stroke();\r\n    }\r\n    refresh(realRect, screenRect){\r\n        let br=new Coord2D(realRect.topLeft.x+realRect.width,realRect.topLeft.y-realRect.height);\r\n        let c=Geometry.midPoint(realRect.topLeft,br);\r\n        let rad=Geometry.distance(realRect.topLeft,br)/2;\r\n        let circle=new Circle(c,rad);\r\n        let p=Intersection.CircleSLine(circle,this.line);\r\n        if(p!==null){\r\n            if(p.length===1){\r\n                let r=this.p[0];\r\n                p=new Array(2);\r\n                p[0]=r;\r\n                p[1]=p[0];\r\n                }\r\n            this.p0=Geometry.realToScreen(p[0],realRect,screenRect);\r\n            this.p1=Geometry.realToScreen(p[1],realRect,screenRect);\r\n        }else{\r\n            this.p0=null;\r\n            this.p1=null;\r\n        }\r\n    }\r\n    setActivePoint(){\r\n        this.activePoint=null;\r\n    }\r\n    getMarkers(){\r\n        return null;\r\n    }\r\n    getProperties(){\r\n        let prop=new Map();\r\n        prop.set('Title',{value:'SLine',regexp:/\\s*/});\r\n        prop.set('A',{value:this.line.a,regexp:/^-?\\d*\\.?\\d*$/});\r\n        prop.set('B',{value:this.line.b,regexp:/^-?\\d*\\.?\\d*$/});\r\n        prop.set('C',{value:this.line.c,regexp:/^-?\\d*\\.?\\d*$/});\r\n        return prop;\r\n    }\r\n    setProperty(prop){\r\n        super.setProperty(prop);\r\n        switch(prop.key){\r\n            case 'A':\r\n                if(!(this.line.b===0&&prop.value===0)) this.line.a=prop.value;\r\n                break;\r\n            case 'B':\r\n                if(!(this.line.a===0&&prop.value===0)) this.line.b=prop.value;\r\n                break;\r\n            case 'C':\r\n                this.line.c=prop.value;\r\n                break;\r\n            default:\r\n        }\r\n    }\r\n    getDistance(point) {\r\n        return Geometry.PointToSLineDistance(point,this.line);\r\n    }\r\n    isInRect(topLeft,bottomRight){\r\n        const full=false;\r\n        const cross=Intersection.RectangleSLine(topLeft,bottomRight,this.line).length>0;\r\n        return {cross,full};    \r\n    }\r\n    toString(){\r\n        return `Line ${this.line.a}X+${this.line.b}Y+${this.line.c}=0`;\r\n    }\r\n}","import Geometry from '../../../utils/geometry';\r\nexport default class SnapMarkersManager {\r\n    constructor(){\r\n        this.snapSet=new Set();\r\n        this.snapMarkersActive = new Set();\r\n        this.snapMarkersAll = new Set();\r\n        this.activeMarker=null;\r\n    }\r\n    addSnap(snapClass){\r\n        this.snapSet.add(snapClass);\r\n        this.refreshMarkerList();\r\n    }\r\n    removeSnap(snapClass){\r\n        this.snapSet.delete(snapClass);\r\n        this.refreshMarkerList();\r\n    }\r\n    addSnapMarkers(markers){\r\n        if(markers===null) return;\r\n        for(let m of markers){\r\n            this.snapMarkersAll.add(m);\r\n            if(this.snapSet.has(m.constructor)) this.snapMarkersActive.add(m);\r\n        }\r\n    }\r\n    refreshMarkerList(){\r\n        for(let m of this.snapMarkersAll)\r\n            if(this.snapSet.has(m.constructor)) this.snapMarkersActive.add(m);\r\n        for(let m of this.snapMarkersActive)\r\n            if(!this.snapSet.has(m.constructor)) this.snapMarkersActive.delete(m);\r\n    }\r\n    clear(){\r\n        this.snapMarkersAll.clear();\r\n        this.snapMarkersActive.clear();\r\n    }\r\n    getDistanceToNearestMarker(pos,minDistance){\r\n        let marker=null;\r\n        let min=minDistance;\r\n        for(let m of this.snapMarkersActive){\r\n            let d=Geometry.distance(m.getPos(),pos);\r\n            if(d<=minDistance) {\r\n                if(d<=min) {\r\n                    marker=m;\r\n                    min=d;\r\n                }\r\n            }\r\n        }\r\n        this.activeMarker=marker;\r\n        if(marker!=null)return min;else return -1;\r\n    }\r\n    getActiveMarker(){\r\n        return this.activeMarker;\r\n    }\r\n}\r\n","export default class SelectionManager {\r\n    constructor(creator){\r\n        this.creator=creator;\r\n        this.selectionCreator=new creator();\r\n    }\r\n    setNext(point){\r\n        this.selectionCreator.setNextPoint(point);\r\n    }\r\n    setCurrent(point){\r\n        this.selectionCreator.setCurrent(point);\r\n        \r\n    }\r\n    getSelectionShape(){\r\n        return this.selectionCreator.getShape();\r\n    }\r\n    reset(){\r\n        this.selectionCreator=new this.creator();\r\n    }\r\n}","import Geometry,{Rectangle} from '../../utils/geometry';\r\nimport {Color} from '../colors';\r\nimport Shape from \"./Shape\";\r\nimport ShapeStyle from './ShapeStyle';\r\n\r\nexport default class SelectRectShape extends Shape{\r\n    constructor(rectangle){\r\n        super();\r\n        this.rectangle=rectangle;\r\n        this.rect=new Rectangle()\r\n        this.setStyle(new ShapeStyle(Color.SELECTION_AREA,ShapeStyle.SELECTION));\r\n    }\r\n\r\n    drawSelf(ctx, realRect, screenRect) {\r\n        this.refresh(realRect, screenRect);\r\n        ctx.strokeStyle=this.getStyle().getColor();\r\n        ctx.setLineDash(this.getStyle().getStroke());\r\n        ctx.lineWidth=this.getStyle().getWidth();\r\n        ctx.strokeRect(this.rect.topLeft.x,this.rect.topLeft.y,this.rect.width,this.rect.height);\r\n    }\r\n    refresh(realRect, screenRect){\r\n        this.rect.topLeft=Geometry.realToScreen(this.rectangle.topLeft,realRect,screenRect);\r\n        this.rect.width=Geometry.realToScreenLength(this.rectangle.width,realRect.width,screenRect.width);\r\n        this.rect.height=Geometry.realToScreenLength(this.rectangle.height,realRect.height,screenRect.height);\r\n    }\r\n    getModel(){\r\n        return this.rectangle;\r\n    }\r\n    getMarkers(){\r\n        let list=[];\r\n        return list;\r\n    }\r\n    getProperties(){\r\n        let prop=new Map();\r\n        return prop;\r\n    }\r\n    setProperty(prop){\r\n        super.setProperty(prop);\r\n    }\r\n    toString(){\r\n        return \"RectSelection\";\r\n    }\r\n}","export default class ShapeBuilder {\r\n     constructor(boundedCircle){\r\n        this.i=0;\r\n        this.boundedCircle=boundedCircle;\r\n        this.legal=true;\r\n    }\r\n\r\n    getShape(){\r\n        return this.shape;\r\n    }\r\n    getHelperShapes(){\r\n        return this.helperShapes;\r\n    }\r\n    isNext(){\r\n        return (this.i<this.points.length);\r\n    }\r\n    setNextPoint(p){\r\n        this.setCurrent(p);\r\n        this.i++;\r\n    }\r\n    is\r\n    isLegal(){return this.legal}\r\n    refresh(boundedCircle){\r\n        this.boundedCircle=boundedCircle;\r\n        if(this.points[this.i]!=null) this.setControlPoints();\r\n    }\r\n    setStyle(style){\r\n        this.style=style;\r\n    }\r\n    getCurrentStep(){\r\n        return this.i;\r\n    }\r\n    getName(){\r\n        return this.name;\r\n    }\r\n}","import {Rectangle} from '../../../utils/geometry';\r\nimport SelectRectShape from '../SelectRectShape';\r\nimport ShapeBuilder from './ShapeBuilder';\r\nexport default class SelectRectCreator extends ShapeBuilder{\r\n    static caption=\"RectSelection\";\r\n    rectangle=new Rectangle();\r\n    points=new Array(2);\r\n    constructor(style,boundedCircle){\r\n        super(boundedCircle)\r\n        this.name=\"SelectRectCreator\"\r\n        this.shape=new SelectRectShape(this.rectangle);\r\n        this.helperShapes = [];\r\n    }\r\n    setCurrent(point){\r\n        if(!this.isNext()) return;\r\n        this.points[this.i]=point;\r\n        if(this.i===0)this.points[1]=this.points[0];\r\n        if(this.i>0)this.rectangle=new Rectangle(this.points[0], this.points[1]);\r\n        this.shape=new SelectRectShape(this.rectangle);\r\n    }\r\n    setControlPoints(){\r\n        \r\n    }\r\n    reset(){return new SelectRectCreator();}\r\n}","import Shape from \"../Shape\";\r\nimport Geometry from \"../../../utils/geometry\";\r\n\r\nexport default class DragCursor extends Shape{\r\n    constructor(point){\r\n        super();\r\n        this.p=point;\r\n    }\r\n    drawArrow(ctx,pts){\r\n        ctx.beginPath();\r\n        ctx.moveTo(pts[0].x,pts[0].y);\r\n        ctx.lineTo(pts[1].x,pts[1].y);\r\n        ctx.moveTo(pts[2].x,pts[2].y);\r\n        ctx.lineTo(pts[1].x,pts[1].y);\r\n        ctx.moveTo(pts[1].x,pts[1].y);\r\n        ctx.lineTo(pts[3].x,pts[3].y);\r\n        ctx.stroke();\r\n    }\r\n    drawSelf(ctx, realRect,  screenRect){\r\n        this.refresh(realRect,screenRect);\r\n        ctx.strokeStyle=this.getStyle().getColor();\r\n        ctx.setLineDash(this.getStyle().getStroke());\r\n        ctx.lineWidth=2;\r\n        let size=10;\r\n        let pts=new Array(4);\r\n        pts[0]=this.p0;\r\n        pts[1]={x:pts[0].x,y:pts[0].y-size};\r\n        pts[2]={x:pts[0].x-size/3,y:pts[0].y-size*2/3};\r\n        pts[3]={x:pts[0].x+size/3,y:pts[0].y-size*2/3};\r\n        this.drawArrow(ctx,pts);\r\n        this.drawArrow(ctx,pts.map(p=>Geometry.rotatePoint(p,Math.PI/2,this.p0)));\r\n        this.drawArrow(ctx,pts.map(p=>Geometry.rotatePoint(p,Math.PI,this.p0)));\r\n        this.drawArrow(ctx,pts.map(p=>Geometry.rotatePoint(p,Math.PI*3/2,this.p0)));\r\n        \r\n\r\n        // ctx.beginPath();\r\n        // ctx.moveTo(this.p0.x-size,this.p0.y);\r\n        // ctx.lineTo(this.p0.x+size,this.p0.y);\r\n        // ctx.moveTo(this.p0.x,this.p0.y-size);\r\n        // ctx.lineTo(this.p0.x,this.p0.y+size);\r\n        // ctx.stroke();\r\n    }\r\n    refresh( realRect,  screenRect){\r\n        this.p0 = Geometry.realToScreen(this.p,realRect,screenRect);\r\n    }\r\n    setCoord( point) {\r\n        this.p=point;\r\n    }\r\n}\r\n","import Shape from \"../Shape\";\r\nimport Geometry from \"../../../utils/geometry\";\r\n\r\nexport default class PickCursor extends Shape{\r\n    constructor(point){\r\n        super();\r\n        this.p=point;\r\n    }\r\n    drawSelf(ctx, realRect,  screenRect){\r\n        this.refresh(realRect,screenRect);\r\n        ctx.strokeStyle=this.getStyle().getColor();\r\n        ctx.setLineDash(this.getStyle().getStroke());\r\n        ctx.lineWidth=this.getStyle().getWidth();\r\n        let size=10;\r\n        ctx.beginPath();\r\n        ctx.moveTo(this.p0.x,this.p0.y-size);\r\n        ctx.lineTo(this.p0.x,this.p0.y+size);\r\n        ctx.moveTo(this.p0.x-size,this.p0.y);\r\n        ctx.lineTo(this.p0.x+size,this.p0.y);\r\n        ctx.arc(this.p0.x,this.p0.y,10,0,2*Math.PI);\r\n        ctx.stroke();\r\n    }\r\n    refresh( realRect,  screenRect){\r\n        this.p0 = Geometry.realToScreen(this.p,realRect,screenRect);\r\n    }\r\n    setCoord( point) {\r\n        this.p=point;\r\n    }\r\n}\r\n","import {SET_GRID_VISIBLE,SET_GRID_SNAP,SET_SNAP,SET_SCREEN_CONTEXT,CREATE_SHAPE, SET_SELECTION_TYPE, SET_TOP_LEFT, SET_PICKED_DATA, START_PICKING, REPAINT, CANCEL, SET_BOUNDED_CIRCLE, REFRESH_SNAP_MARKERS, REFRESH_SHAPE_MANAGER, SET_REAL_WIDTH, SET_SCALE, SET_DIMENSIONS, SET_CUR_COORD, SET_RATIO, PAN_SCREEN, SET_PREV_STATUS, START_SELECTION, CANCEL_SELECTION} from \"../actions/ScreenActions\";\r\nimport {SELECT_SHAPE,DELETE_SELECTED_SHAPES,SET_STATUS, ADD_SHAPE, CENTER_TO_POINT, SELECT_ALL} from \"../actions/ScreenActions\";\r\nimport {SET_CYCLIC_FLAG} from \"../actions/ScreenActions\";\r\nimport {SET_PROPERTY}  from '../actions/ShapeActions';\r\nimport FreeCursor from \"../components/shapes/cursors/FreeCursor\";\r\nimport Geometry, { Circle, Coord2D, SLine } from \"../utils/geometry\";\r\nimport ShapeManager from \"../components/shapes/ShapeManager\";\r\nimport DrawCursor from \"../components/shapes/cursors/DrawCursor\";\r\nimport SLineShape from \"../components/shapes/SLineShape\";\r\nimport ShapeStyle from \"../components/shapes/ShapeStyle\";\r\nimport SnapMarkersManager from \"../components/shapes/markers/SnapMarkersManager\";\r\nimport SelectionManager from \"../components/shapes/SelectionManager\";\r\nimport SelectRectCreator from \"../components/shapes/shapecreators/SelectRectCreator\";\r\nimport DragCursor from \"../components/shapes/cursors/DragCursor\";\r\nimport PickCursor from \"../components/shapes/cursors/PickCursor\";\r\nimport { Color } from \"../components/colors\";\r\nexport const FREE='FREE';\r\nexport const SELECT='SELECT';\r\nexport const CREATE='CREATE';\r\nexport const DRAWING='DRAWING';\r\nexport const CANCEL='CANCEL';\r\nexport const PAN='PAN';\r\nexport const PICK='PICK';\r\nexport const PICK_END='PICK_END';\r\nconst xAxeShape=new SLineShape(new SLine(0,1,0),new Circle(new Coord2D(0,0),8));\r\nconst yAxeShape=new SLineShape(new SLine(1,0,0),new Circle(new Coord2D(0,0),8));\r\nxAxeShape.setStyle(new ShapeStyle(Color.RED,ShapeStyle.SOLID));\r\nyAxeShape.setStyle(new ShapeStyle(Color.RED,ShapeStyle.SOLID));\r\n\r\nconst initialState = {\r\n    bottomRight:{x:10,y:-10},\r\n    curCoord:{x:0,y:0},\r\n    cursor:new FreeCursor({x:0,y:0}),\r\n    curShape:null,\r\n    cyclicCreation:false,\r\n    gridSnap:false,\r\n    gridStep:1,\r\n    gridStepPixels:1,\r\n    marginTop:15,marginLeft:40,marginBottom:15,marginRight:10,\r\n    pickedData:{data:null,editId:0,fix:false},\r\n    picker:null,\r\n    prevStatus:FREE,\r\n    ratio:1,pixelRatio:1,\r\n    realWidth:20,realHeight:20,\r\n    repaint:0,//random number is used to rerender all components when it's changed\r\n    screenHeight:550,\r\n    screenWidth:550,\r\n    selectedShapes:[],\r\n    selectDist:2,\r\n    selectionManager:new SelectionManager(SelectRectCreator),\r\n    selectionType:'crossSelect',\r\n    shapes:[],\r\n    shapeCreator:null,\r\n    shapeManager:new ShapeManager(),\r\n    show:{grid:true},\r\n    snap:{snapClass:null,snap:false},\r\n    snapDist:20,snapMinDist:10,\r\n    snapMarkersManager:new SnapMarkersManager(),\r\n    status:FREE,\r\n    statusBar:5,\r\n    statusParams:{creator:null,picker:null},\r\n    topLeft:{x:-10,y:10},\r\n    xAxe:xAxeShape,\r\n    yAxe:yAxeShape,\r\n};\r\nexport function screenReducer(state = initialState,action) {\r\n    var tl,c,br,bc,params,rh,r;\r\n    switch (action.type) {\r\n        case ADD_SHAPE:\r\n            state.shapes.push(action.payload);\r\n            return{...state};\r\n        case CANCEL:\r\n            return {...state,\r\n                status:FREE,\r\n                curShape:null,\r\n                curHelperShapes:null,\r\n                shapeCreator:null,\r\n                picker:null,\r\n                creationStep:\"\",\r\n                currentShape:\"\",\r\n                cursor:new FreeCursor(state.curCoord),\r\n                repaint:Math.random()}\r\n        case CANCEL_SELECTION:\r\n            state.shapes.forEach(s=>s.setState({selected:false}))\r\n            return {...state,\r\n                status:FREE,\r\n                selectedShapes:[],\r\n                curShape:null,\r\n                curHelperShapes:null,\r\n                shapeCreator:null,\r\n                picker:null,\r\n                creationStep:\"\",\r\n                currentShape:\"\",\r\n                cursor:new FreeCursor(state.curCoord),\r\n                repaint:Math.random()}\r\n        case CENTER_TO_POINT:\r\n            var point=action.payload;\r\n            let viewPortWidth=state.realWidth-(state.marginLeft+state.marginRight)*state.pixelRatio;\r\n            let viewPortHeight=state.realHeight-(state.marginTop+state.marginBottom)*state.pixelRatio;\r\n            //new topLeft\r\n            tl={x:point.x-viewPortWidth/2-state.marginLeft*state.pixelRatio,y:point.y+viewPortHeight/2+state.marginTop*state.pixelRatio}\r\n            br={}\r\n            br.x=tl.x+state.realWidth;\r\n            br.y=tl.y-state.realHeight;        \r\n            //new boundedCircle\r\n            c=Geometry.screenToReal(state.screenWidth/2,state.screenHeight/2,state.screenWidth,state.screenHeight,tl,br);\r\n            r=Math.sqrt(state.realWidth*state.realWidth+state.realHeight*state.realHeight)/2;\r\n            bc=new Circle(c,r);\r\n            if(state.shapeCreator!=null) state.shapeCreator.refresh(bc);\r\n            return{...state,topLeft:tl,bottomRight:br};\r\n        case CREATE_SHAPE:\r\n            return{...state,\r\n                status:CREATE,\r\n                shapeCreator:action.payload,\r\n                curShape:null,\r\n                curHelperShapes:null,\r\n                cursor:new DrawCursor(state.curCoord)\r\n            };\r\n        case DELETE_SELECTED_SHAPES:\r\n            return{...state,shapes:state.shapes.filter((s)=>!s.getState().selected),selectedShapes:[]};\r\n        case PAN_SCREEN:\r\n            return {\r\n                ...state,\r\n                status:PAN,\r\n                prevStatus:state.status,\r\n                prevCursor:state.cursor,\r\n                cursor:new DragCursor(state.curCoord)\r\n            }\r\n        case REFRESH_SNAP_MARKERS:\r\n            state.snapMarkersManager.clear();\r\n            for(let s of state.shapes){\r\n                state.snapMarkersManager.addSnapMarkers(s.getMarkers());\r\n            }\r\n            return {...state}\r\n        case REFRESH_SHAPE_MANAGER:\r\n                state.shapeManager=new ShapeManager(state.shapes);\r\n                return {...state}\r\n        case REPAINT:\r\n            return {...state,repaint:Math.random()}\r\n        case SELECT_ALL:\r\n            var selectedShapes=[];\r\n            state.shapes.forEach((s,i)=>{\r\n                            if(i>1){\r\n                                   s.setState({selected:true});\r\n                                   selectedShapes.push(s);\r\n                                }});\r\n            return{...state,selectedShapes};\r\n        case SELECT_SHAPE:\r\n            return{...state,selectedShapes:action.payload};\r\n        case SET_BOUNDED_CIRCLE:\r\n            c=Geometry.screenToReal(state.screenWidth/2,state.screenHeight/2,state.screenWidth,state.screenHeight,state.topLeft,state.bottomRight);\r\n            r=Math.sqrt(state.realWidth*state.realWidth+state.realHeight*state.realHeight)/2;\r\n            bc=new Circle(c,r);\r\n            if(state.shapeCreator!=null) state.shapeCreator.refresh(bc);\r\n            return{...state,boundedCircle:bc}\r\n        case SET_DIMENSIONS:\r\n            params=action.payload;\r\n            rh=params.height*params.realWidth/params.width\r\n            return {...state,\r\n                screenWidth:params.width,\r\n                screenHeight:params.height,\r\n                realWidth:params.realWidth,\r\n                ratio:params.width/params.height,\r\n                pixelRatio:params.realWidth/state.screenWidth,\r\n                realHeight:rh,\r\n                bottomRight:{x:state.topLeft.x+params.realWidth,y:state.topLeft.y-rh}\r\n            }\r\n        case SET_CUR_COORD:\r\n            return {...state,curCoord:action.payload}\r\n        case SET_CYCLIC_FLAG:\r\n            return {...state,cyclicCreation:action.payload}\r\n        case SET_GRID_SNAP:\r\n            return{...state,gridSnap:action.payload};\r\n        case SET_GRID_VISIBLE:\r\n            return{...state,show:{grid:action.payload}};\r\n        case START_PICKING:\r\n            return {...state,\r\n                status:PICK,\r\n                pickedData:{data:state.pickedData.data,editId:action.payload.id},\r\n                picker:action.payload.picker,\r\n                cursor:new PickCursor(state.curCoord)\r\n            }\r\n        case START_SELECTION:\r\n            return {...state,status:SELECT}\r\n        case SET_PICKED_DATA:\r\n            return {...state,status:PICK_END,pickedData:{data:action.payload,editId:state.pickedData.editId}}\r\n        case SET_PREV_STATUS:\r\n            return {...state,status:state.prevStatus,cursor:state.prevCursor}\r\n        case SET_PROPERTY:\r\n            for(let shape of state.selectedShapes){\r\n               if(shape.getProperties().has(action.payload.key)) shape.setProperty({key:action.payload.key,value:action.payload.value});\r\n            }\r\n            return{...state}\r\n        case SET_RATIO:\r\n            return {...state,ratio:action.payload}\r\n        case SET_REAL_WIDTH:\r\n            var width=action.payload;\r\n            params=getRealWidthParams(width,state.screenWidth,state.screenHeight,state.topLeft,state.gridStep)\r\n            params.gridStepPixels=Math.round(params.gridStep/params.pixelRatio);\r\n            return {...state,...params}\r\n        case SET_SCALE:\r\n            const {scale,anchor}=action.payload;\r\n            tl=state.topLeft;\r\n            let dx=anchor.x-tl.x;\r\n            let dy=anchor.y-tl.y;\r\n            //getting new realHeight,pixelRatio,gridStepPixels,bottomRight\r\n            params=getRealWidthParams(state.realWidth*scale,state.screenWidth,state.screenHeight,tl,state.gridStep)\r\n            dx=dx*scale;\r\n            dy=dy*scale;\r\n            //new topLeft\r\n            tl={x:anchor.x-dx,y:anchor.y-dy}\r\n            br={}\r\n            br.x=tl.x+params.realWidth;\r\n            br.y=tl.y-params.realHeight;\r\n            //new boundedCircle\r\n            c=Geometry.screenToReal(state.screenWidth/2,state.screenHeight/2,state.screenWidth,state.screenHeight,tl,br);\r\n            r=Math.sqrt(params.realWidth*params.realWidth+params.realHeight*params.realHeight)/2;\r\n            bc=new Circle(c,r);\r\n            if(state.shapeCreator!=null) state.shapeCreator.refresh(bc);\r\n            //new gridStep\r\n            if(params.gridStep/params.pixelRatio<10){\r\n                if (params.gridStep<1000000) params.gridStep=params.gridStep*10;\r\n                }\r\n                else if(params.gridStep/params.pixelRatio>100)\r\n                    if(params.gridStep>0.001) params.gridStep=params.gridStep/10;\r\n                            params.gridStepPixels=Math.round(params.gridStep/params.pixelRatio);\r\n            var pr=params.realWidth/state.screenWidth;\r\n            return {...state,...params,topLeft:tl,bottomRight:br,boundedCicle:bc,pixelRatio:pr}\r\n        case SET_SCREEN_CONTEXT:\r\n            return{...state,context:action.payload};\r\n        case SET_SELECTION_TYPE:\r\n            return {...state,selectionType:action.payload}\r\n        case SET_SNAP:\r\n                if(action.payload.snap===true)state.snapMarkersManager.addSnap(action.payload.snapClass)\r\n                 else state.snapMarkersManager.removeSnap(action.payload.snapClass)\r\n            return{...state};\r\n        case SET_STATUS:\r\n            return{...state,\r\n                status:action.payload.status,\r\n                prevStatus:action.payload.status,\r\n                statusParams:action.payload.params};\r\n        case SET_TOP_LEFT:\r\n            var topLeft=action.payload;\r\n            var bottomRight={};\r\n            bottomRight.x=topLeft.x+state.realWidth;\r\n            bottomRight.y=topLeft.y-state.realHeight;\r\n            return {...state,topLeft,bottomRight}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nfunction getRealWidthParams(realWidth,screenWidth,screenHeight,topLeft,gridStep){\r\n    const pr=realWidth/screenWidth;\r\n    const rh=screenHeight*pr;\r\n    const gsp=Math.round(gridStep/pr);\r\n    const br={};\r\n    br.x=topLeft.x+realWidth;\r\n    br.y=topLeft.y-rh;\r\n    return {\r\n        realWidth:realWidth,\r\n        realHeight:rh,\r\n        pixelRatio:pr,\r\n        gridStepPixels:gsp,\r\n        bottomRight:br,\r\n        gridStep\r\n    }\r\n}","const options={\r\n    devUrl:'',\r\n    _devUrl:'',\r\n}\r\nexport default options","import options from '../config'\r\nexport const SET_LANGUAGE='SET_LANGUAGE';\r\nexport const REQUEST_LANGUAGE='REQUEST_LANGUAGE';\r\nexport const SHOW_HELP='SHOW_HELP';\r\nexport const SHOW_CONFIRM='SHOW_CONFIRM';\r\nexport const SHOW_ALERT='SHOW_ALERT';\r\n\r\nexport function setLanguage(captions) {\r\n    return {\r\n        type: SET_LANGUAGE,\r\n        payload: captions,\r\n    }\r\n}\r\nexport function requestLanguage(lang) {\r\n    return dispatch=> {\r\n        fetch(options.devUrl+'/lang',{method:'POST',\r\n                       body:JSON.stringify({lang:lang}),\r\n                       headers: {'Content-Type': 'application/json'}\r\n                        })\r\n            .then(res => res.json())\r\n            .then(capt => dispatch(setLanguage(capt)))\r\n            .catch(e => {\r\n                console.error(e)\r\n            });\r\n    }\r\n\r\n}\r\nexport function showHelp(show){\r\n    return {\r\n        type:SHOW_HELP,\r\n        payload:show\r\n    }\r\n}\r\nexport function showConfirm(show,messageKey,okAction){\r\n    return {\r\n        type:SHOW_CONFIRM,\r\n        payload:{show,messageKey,okAction}\r\n    }\r\n}\r\nexport function showAlert(show,messageKey){\r\n    return {\r\n        type:SHOW_ALERT,\r\n        payload:{show,messageKey}\r\n    }\r\n}\r\nexport function blink(){\r\n    const form=document.querySelector('.modalContainer > .toolBar')\r\n    const oldColor=form.style.backgroundColor\r\n    var count=0\r\n    const int=setInterval(()=>{\r\n        if(form.style.backgroundColor===oldColor)form.style.backgroundColor='red'; \r\n            else form.style.backgroundColor=oldColor\r\n        if(++count>3) {clearInterval(int);form.style.backgroundColor=oldColor}\r\n    },40)\r\n}\r\n\r\n","export const captions={\r\n  about:{\r\n    name:\"© Takhmazov Borys, 2018-2019\",\r\n    email:\"E-Mail: tboris1983@gmail.com\",\r\n  },\r\n  user:{\r\n    name:\"\"\r\n  },\r\n  buttons:{\r\n    cancel:\"Cancel\",\r\n    logout:\"Log out\",\r\n    showPass:\"Show password\",\r\n    pick:\"Pick\"\r\n  },\r\n  registerForm:{\r\n    title:\"Sign up\",\r\n    name:\"Nickname\",\r\n    email:\"E-Mail\",\r\n    password:\"Password\",\r\n    passwordAgain:\"Password again\",\r\n    serverMessages:[\"\",\"User already exists\",\"E-Mail already exists\",\"\",\"\",\"Internal server error\"],\r\n    inputMessages:[\"Name length too short (4 char at least)\",\"Name can contain only letters, digits and _\",\r\n                    \"Password too short (6 char at least)\",\"Passwords aren't equal\",\"E-mail format incorrect\"]\r\n  },\r\n  loginForm:{\r\n    title:\"Sign in\",\r\n    name:\"Name or E-Mail\",\r\n    password:\"Password\",\r\n    regForm:\"Sign up\",\r\n    rememberMe:\"Remember me on this device\",\r\n    messages:[\"\",\"User data incorrect\",\"User isn't activated yet\",\"\",\"\",\"Internal server error. Please try again\"]\r\n  },\r\n  activation:{\r\n    title:\"Activation\",\r\n    messages:[\"Activation succeeded. You can now sign in with your login and password.\",\r\n              \"Activation code is incorrect or expired\",\"\",\"\",\"\",\"Server internal error\"]\r\n  },\r\n  title:\"Geometry editor\",\r\n  messages:{\r\n    deleteShapes:\"Delete selected shapes?\",\r\n    logout:\"Do you want to log out?\",\r\n    regSucceed:\"Registration succeeded. Please check you mailbox to activate account\"\r\n  },\r\n  create:{\r\n    createToolBar:\"Create\",\r\n    createCheckBox:\"Cyclic\",\r\n    createSLine2Points:\"Straight line\",\r\n    createRayLine2Points:\"Ray line\",\r\n    createSegmentLine2Points:\"Segment line\",\r\n    createCircleCenter:\"Circle by center\",\r\n    createCircle2P:\"Circle by 2 points\",\r\n    createCircle3P:\"Circle by 3 points\",\r\n    createRect:\"Rectangle by 2 points\",\r\n    createRectCenter:\"Rectangle by center\",\r\n    createTriangle:\"Triangle\",\r\n    createTriangleInscribed:\"Triangle inscribed in circle\",\r\n    createTriangleDescribed:\"Triangle described about circle\",\r\n    createParabola:\"Parabola\",\r\n    createHyperbola:\"Hyperbola\",\r\n    createFunction:\"User defined function\",\r\n    development:\"(in development)\"\r\n  },\r\n  modify:{\r\n    crossSelect:\"Partial selection\",\r\n    fullSelect:\"Full selection\"\r\n  },\r\n  snap:{snapToggleBar:\"Snap\",\r\n    snapGridPoints:\"Snap to grid points\",\r\n    snapEndPoints: \"Snap to end points\",\r\n    snapCenterPoints: \"Snap to center points\",\r\n    snapMiddlePoints: \"Snap to middle points\"\r\n  },\r\n  showGrid:\"Show grid\",\r\n  propBar:\"Properties\",\r\n  noShapesSelected:\"No shapes selected\",\r\n  NShapesSelected:\" shapes selected\",\r\n  deleteButton:\"Delete\",\r\n  shapes:{\r\n    Circle:{\r\n      Title:\"Circle\",\r\n      Radius:\"Radius\",\r\n      Center:\"Center\",\r\n    },\r\n    Rectangle:{\r\n      Title:\"Rectangle\",\r\n      P1:\"P1\",\r\n      P2:\"P2\",\r\n    },\r\n    Line:{\r\n      Title:\"Line\",\r\n      P1:\"P1\",\r\n      P2:\"P2\",\r\n    },\r\n    SLine:{\r\n      Title:\"Straight Line AX+BY+C=0\",\r\n      A:\"A\",\r\n      B:\"B\",\r\n      C:\"C\"\r\n    },\r\n    RLine:{\r\n      Title:\"Ray Line\",\r\n      Origin:\"Origin\",\r\n      Direction:\"Direction\",\r\n    },\r\n    Triangle:{\r\n      Title:\"Triangle\",\r\n      P1:\"P1\",\r\n      P2:\"P2\",\r\n      P3:\"P3\",\r\n    }\r\n  },\r\n  pickers:{\r\n    PointPicker:{\r\n      description:\"\",\r\n      steps:[\"Select point\"]\r\n    },\r\n    DistancePicker:{\r\n      description:\"\",\r\n      steps:[\"Select 1st point\",\"Select 2nd point\"]\r\n    },\r\n  },\r\n  creators:{\r\n    StraightLineCreator:{\r\n      description:\"Straight Line\",\r\n      steps:[\"Select 1st point\",\"Select 2nd point\"]\r\n    },\r\n    RayLineCreator:{\r\n      description:\"Ray Line\",\r\n      steps:[\"Select origin point\",\"Select direction point\"]\r\n    },\r\n    LineCreator:{\r\n      description:\"Segment Line\",\r\n      steps:[\"Select first point\",\"Select second point\"]\r\n    },\r\n    CircleCRCreator:{\r\n      description:\"Circle\",\r\n      steps:[\"Select center point\",\"Select radius point\"]\r\n    },\r\n    Circle2PCreator:{\r\n      description:\"Circle\",\r\n      steps:[\"Select first point\",\"Select second point\"]\r\n    },\r\n    Circle3PCreator:{\r\n      description:\"Circle\",\r\n      steps:[\"Select first point\",\"Select second point\",\"Select third point\"]\r\n    },\r\n    RectangleCreator:{\r\n      description:\"Rectangle\",\r\n      steps:[\"Select first point\",\"Select second point\"]\r\n    },\r\n    TriangleCreator:{\r\n      description:\"Triangle\",\r\n      steps:[\"Select first point\",\"Select second point\",\"Select third\"]\r\n    },\r\n    SelectRectCreator:{\r\n      description:\"\",\r\n      steps:[\"\",\"Specify second selection point\"]\r\n    },\r\n  },\r\n  help:{\r\n    title:'Reference',\r\n    hotKeys:[\r\n    {key:\"ESC\",desc:'Cancel'},\r\n    {key:\"Ctrl-A\",desc:'Select all'},\r\n    {key:\"Del\",desc:'Delete selected'},\r\n    {key:\"C\",desc:'View to origin'},\r\n    {key:\"Mouse wheel\",desc:'Zoom +/-'},\r\n    {key:\"Mouse middle button\",desc:'Move screen'}\r\n    ]\r\n  }\r\n}\r\n","import {SET_LANGUAGE} from \"../actions/AppActions\";\r\n\r\nimport {captions} from '../locale/eng';\r\nconst keys=[\r\n    {ctrlKey:true,shiftKey:false,altKey:false,keyCode:65,action:\"selectAll\",param:null},\r\n    {ctrlKey:false,shiftKey:false,altKey:false,keyCode:46,action:\"deleteConfirm\",param:null},\r\n    {ctrlKey:false,shiftKey:false,altKey:false,keyCode:67,action:\"centerToPoint\",param:{x:0,y:0}},\r\n    {ctrlKey:false,shiftKey:false,altKey:false,keyCode:27,action:\"cancelSelection\",param:null},\r\n]\r\nconst initialState={captions:captions,keyDownHandler:keys}\r\nexport function optionsReducer(state=initialState,action) {\r\n    switch (action.type) {\r\n        case SET_LANGUAGE:\r\n            document.title=action.payload.title;\r\n            return{...state,captions:action.payload};\r\n        default:\r\n            return state\r\n    }\r\n}","export const SET_ACTIVE_SNAP_BUTTON='SET_ACTIVE_SNAP_BUTTON';\r\nexport const CLEAR_ACTIVE_SNAP_BUTTON='CLEAR_ACTIVE_SNAP_BUTTON';\r\nexport const SET_ACTIVE_CREATE_BUTTON='SET_ACTIVE_CREATE_BUTTON';\r\nexport const SET_ACTIVE_LANG_BUTTON='SET_ACTIVE_LANG_BUTTON';\r\nexport const SET_ACTIVE_SELECTION_BUTTON='SET_ACTIVE_SELECTION_BUTTON';\r\nexport function setActiveSnapButton(id) {\r\n    return {\r\n        type: SET_ACTIVE_SNAP_BUTTON,\r\n        payload: id,\r\n    }\r\n}\r\nexport function clearActiveSnapButton(id) {\r\n    return {\r\n        type: CLEAR_ACTIVE_SNAP_BUTTON,\r\n        payload: id,\r\n    }\r\n}\r\nexport function setActiveCreateButton(id) {\r\n    return {\r\n        type: SET_ACTIVE_CREATE_BUTTON,\r\n        payload: id,\r\n    }\r\n}\r\nexport function setActiveSelectionButton(id) {\r\n    return {\r\n        type: SET_ACTIVE_SELECTION_BUTTON,\r\n        payload: id,\r\n    }\r\n}\r\nexport function setActiveLangButton(id) {\r\n    return {\r\n        type: SET_ACTIVE_LANG_BUTTON,\r\n        payload: id,\r\n    }\r\n}","\r\nimport {SET_ACTIVE_SNAP_BUTTON,CLEAR_ACTIVE_SNAP_BUTTON} from \"../actions/ComponentActions\";\r\nimport {SET_ACTIVE_CREATE_BUTTON,SET_ACTIVE_LANG_BUTTON} from \"../actions/ComponentActions\";\r\nimport {SET_STATUS, deleteSelectedShapes, DELETE_CONFIRM, CANCEL} from \"../actions/ScreenActions\";\r\nimport {SHOW_HELP, SHOW_CONFIRM, SHOW_ALERT} from '../actions/AppActions';\r\nimport { FREE } from \"./screen\";\r\nconst initialState={\r\n    activeLangButton:\"en\",\r\n    defaultLang:\"en\",\r\n    activeSnapButtons:new Set(),\r\n    showHelp:false,\r\n    showConfirm:{show:false,message:\"\"},\r\n    showAlert:{show:false,message:\"\"}\r\n}\r\nexport function componentReducer(state=initialState,action) {\r\n    let newState={...state};\r\n    const data=action.payload;\r\n    if(!newState.activeButtons) newState.activeButtons=new Set();\r\n    switch (action.type) {\r\n        case CANCEL:\r\n            return {...newState,activeCreateButton:null}\r\n        case SET_ACTIVE_CREATE_BUTTON:\r\n            newState.activeCreateButton=data;\r\n            return newState;\r\n        case SET_ACTIVE_LANG_BUTTON:\r\n            newState.activeLangButton=data;\r\n            return newState;\r\n        case SET_ACTIVE_SNAP_BUTTON:\r\n            newState.activeSnapButtons.add(data);\r\n            return newState;    \r\n        case CLEAR_ACTIVE_SNAP_BUTTON:\r\n            newState.activeSnapButtons.delete(data);\r\n            return newState;\r\n        case SET_STATUS:\r\n            if(data.status===FREE) return{...state,activeCreateButton:''}\r\n            return{...state} \r\n        case SHOW_HELP:\r\n            return {...state,showHelp:data};  \r\n        case SHOW_CONFIRM:\r\n            return {...state,showConfirm:data};  \r\n        case SHOW_ALERT:\r\n            return {...state,showAlert:data}; \r\n        case DELETE_CONFIRM:\r\n           return{...state,showConfirm:{show:true,messageKey:\"deleteShapes\",okAction:deleteSelectedShapes.bind(null,false)}}    \r\n        default:\r\n            return newState;\r\n    }\r\n}","export const SET_TOKEN='SET_TOKEN';\r\nexport const LOGOUT='LOGOUT';\r\n\r\nexport function setToken(token,remember) {\r\n    return {\r\n        type: SET_TOKEN,\r\n        payload: {token,remember},\r\n    }\r\n}\r\nexport function logout() {\r\n    return {\r\n        type: LOGOUT,\r\n    }\r\n}\r\n\r\n","import {SET_TOKEN, LOGOUT} from \"../actions/UserActions\";\r\nimport {captions} from '../locale/eng';\r\nimport jwtDecode from 'jwt-decode';\r\n\r\nvar user={}\r\n//var token=localStorage.getItem('token');\r\n//if(!token) token=sessionStorage.getItem('token');\r\nvar token=document.cookie.split('=')[1];\r\nif(token) user={name:jwtDecode(token).name,token}; else user.name=captions.user.name;\r\nexport function userReducer(state=user,action) {\r\n    switch (action.type) {\r\n        case SET_TOKEN:\r\n            if(action.payload.token) {\r\n                let expires;\r\n                if(action.payload.remember===true) expires=`;expires=Tue, 19 Jan 2099 00:00:00 GMT`;\r\n                    else expires=''\r\n                document.cookie=`token=${action.payload.token}${expires}`\r\n                user={name:jwtDecode(action.payload.token).name,token:action.payload.token}\r\n            }\r\n            else{\r\n                user.name=captions.user.name;\r\n            }\r\n            return user;\r\n        case LOGOUT:\r\n            document.cookie='token='\r\n            return {}\r\n        default:\r\n            return state\r\n    }\r\n}","import {combineReducers} from \"redux\";\r\nimport {shapeReducer} from \"./shapes\";\r\nimport {screenReducer} from \"./screen\";\r\nimport {optionsReducer} from \"./options\";\r\nimport {componentReducer} from \"./component\";\r\nimport { userReducer } from \"./user\";\r\n\r\nexport const rootReducer=combineReducers({\r\n    shapes:shapeReducer,\r\n    screen:screenReducer,\r\n    options:optionsReducer,\r\n    user:userReducer,\r\n    components:componentReducer,\r\n});","import {createStore,applyMiddleware} from \"redux\";\r\nimport thunk from 'redux-thunk';\r\nimport { rootReducer } from '../reducers'\r\nwindow.actions=[]\r\nconst actionList=(store)=>(next)=>(action)=>{window.actions.push(action.type);return next(action)}\r\n\r\nexport const store = createStore(rootReducer,applyMiddleware(thunk,actionList));","import React from 'react';\r\nimport '../Graph.css';\r\n\r\nexport default class LangToggleButton extends React.Component{\r\n    onClick(){\r\n        if(!this.props.pressed){\r\n            this.props.requestLanguage(this.props.lang);\r\n            this.props.setActiveLangButtonId(this.props.lang);\r\n        }\r\n    }\r\n    render(){\r\n        let className=this.props.pressed?\"langToggleButtonDown\":\"langToggleButtonUp\";\r\n        return <div\r\n                id={this.props.lang}\r\n                className={className+\" noselect\"}\r\n                title={this.props.title}\r\n                onClick={this.onClick.bind(this)}\r\n                >\r\n        </div>\r\n    }\r\n}","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport '../Graph.css';\r\nimport LangToggleButton from './LangToogleButton';\r\nimport {setActiveLangButton} from '../actions/ComponentActions';\r\nimport {requestLanguage} from '../actions/AppActions';\r\n\r\nclass LangToggleBar extends React.Component{\r\n    render(){\r\n        return <div className={\"langToggleBar\"}>\r\n            <LangToggleButton \r\n                lang=\"ru\"\r\n                pressed={this.props.pressed===\"ru\"}\r\n                setActiveLangButtonId={this.props.setActiveLangButtonId}\r\n                requestLanguage={this.props.requestLanguage}\r\n                title=\"Русский\"\r\n                />\r\n            <LangToggleButton\r\n                lang=\"en\"\r\n                pressed={this.props.pressed===\"en\"}\r\n                setActiveLangButtonId={this.props.setActiveLangButtonId}\r\n                requestLanguage={this.props.requestLanguage}\r\n                title=\"English\"\r\n                />\r\n            <LangToggleButton\r\n                lang=\"fr\"\r\n                pressed={this.props.pressed===\"fr\"}\r\n                setActiveLangButtonId={this.props.setActiveLangButtonId}\r\n                requestLanguage={this.props.requestLanguage}\r\n                title=\"Français\"\r\n                />\r\n        </div>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = store=>{\r\n    return{\r\n        pressed:store.components.activeLangButton,\r\n    }\r\n};\r\nconst mapDispatchToProps = dispatch=>{\r\n    return {\r\n        setActiveLangButtonId:lang=>dispatch(setActiveLangButton(lang)),\r\n        requestLanguage:lang=>dispatch(requestLanguage(lang)),\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(LangToggleBar);","import React from 'react';\r\nimport '../Graph.css';\r\nimport {connect} from 'react-redux';\r\nimport {showHelp} from '../actions/AppActions';\r\n\r\nclass HelpButton extends React.Component{\r\n    onClick(){\r\n        this.props.showHelp(true);\r\n    }\r\n    render(){\r\n        return <button \r\n                className={\"helpButton noselect\"}\r\n                onClick={this.onClick.bind(this)}\r\n                >\r\n            ?\r\n        </button>\r\n    }\r\n}\r\nconst mapDispatchToProps=dispatch=>{\r\n    return{\r\n        showHelp:show=>{dispatch(showHelp(show))}\r\n    }\r\n}\r\nexport default connect(null,mapDispatchToProps)(HelpButton);","import React from 'react';\r\nimport {connect} from 'react-redux'\r\nimport {NavLink} from 'react-router-dom'\r\nimport \"../Graph.css\";\r\nimport { showConfirm } from '../actions/AppActions';\r\nimport { logout } from '../actions/UserActions';\r\n\r\nclass User extends React.Component{\r\n    logout(){\r\n        this.props.showConfirm();\r\n    }\r\n    render(){\r\n        const links=!this.props.user.token?<>\r\n            <NavLink to=\"/login\"><span className=\"link\">{this.props.cap.loginForm.title}</span></NavLink>\r\n            <NavLink to=\"/register\"><span className=\"link\">{this.props.cap.registerForm.title}</span></NavLink>\r\n            </>\r\n            :<NavLink to='/' onClick={this.logout.bind(this)}><span className=\"link\">{this.props.cap.buttons.logout}</span></NavLink>\r\n        return <div className=\"user noselect\">\r\n            {this.props.user.name?this.props.user.name:''}\r\n            \r\n            {links}\r\n        </div>\r\n    }\r\n}\r\nconst mapStateToProps=store=>{\r\n    return {\r\n        user:store.user,\r\n        cap:store.options.captions,\r\n    }\r\n}\r\nconst mapDispatchToProps=dispatch=>{\r\n    return{\r\n        showConfirm:()=>dispatch(showConfirm(true,'logout',logout))\r\n    }\r\n}\r\nexport default connect(mapStateToProps,mapDispatchToProps)(User)","import React from 'react';\r\nimport \"../Graph.css\";\r\nimport LangToggleBar from './LangToggleBar';\r\nimport HelpButton from './HelpButton';\r\nimport User from './User';\r\n\r\nexport default class Header extends React.Component{\r\n    render(){\r\n        return <div className={\"header\"}>\r\n            <LangToggleBar/> \r\n            <HelpButton/>\r\n            <User/>\r\n        </div>\r\n    }\r\n}","import React from \"react\";\r\nimport '../Buttons.css';\r\n\r\nexport default class ToolButton extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={pressed:props.activeButtonId===props.id}\r\n    }\r\n    onclick(){\r\n        if(this.props.params&&this.props.params.dev) return;\r\n        const pressed=this.props.activeButtonId===this.props.id;\r\n        const params=!this.props.params?{id:this.props.id}:{...this.props.params,id:this.props.id};\r\n        if(this.props.onClick)this.props.onClick({pressed,params});\r\n        if(this.props.setButtonFirst)this.props.setButtonFirst(this.props.id);\r\n    }\r\n\r\n    render(){\r\n        const pressed=this.props.activeButtonId===this.props.id;\r\n        let title=this.props.title;\r\n        if(this.props.params&&this.props.params.dev) title=`${title} ${this.props.params.dev}`\r\n        let cls=!pressed?\"toolButtonUp\":\"toolButtonDown\";\r\n        cls=cls+\" toolButton\";\r\n        return <div id={this.props.id}\r\n                    className={cls}\r\n                    onClick={this.onclick.bind(this)}\r\n                    title={title}\r\n                    \r\n                    >\r\n\r\n        </div>\r\n    }\r\n}\r\n","import React from 'react';\r\nimport '../Graph.css';\r\nimport ToolButton from \"./ToolButton\";\r\n\r\nexport default class ToolButtonGroup extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={buttons:props.buttons,firstButton:props.buttons[0].id,expanded:false};\r\n    }\r\n    onMouseEnter(){\r\n        this.setState({expanded:true});\r\n    }\r\n    onMouseLeave(){\r\n        this.setState({expanded:false});\r\n    }\r\n    setButtonFirst(id){\r\n            this.setState({firstButton:id,expanded:false});\r\n    }\r\n    render(){\r\n        let buttons=[];\r\n        const first=this.props.buttons.find((button)=>button.id===this.state.firstButton);\r\n        buttons.push(<ToolButton \r\n                            title={first.title}\r\n                            id={first.id}\r\n                            params={first.params}\r\n                            key={0}\r\n                            index={0}\r\n                            onClick={this.props.onClick}\r\n                            activeButtonId={this.props.activeButton}\r\n                            setButtonFirst={this.setButtonFirst.bind(this)}\r\n                        />);\r\n        let index=1;\r\n        this.props.buttons.forEach((button)=>{\r\n                        if(button.id!==this.state.firstButton)\r\n                            buttons.push(<ToolButton \r\n                                    title={button.title}\r\n                                    id={button.id}\r\n                                    params={button.params}\r\n                                    key={index}\r\n                                    index={index++}\r\n                                    onClick={this.props.onClick}\r\n                                    activeButtonId={this.props.activeButton}\r\n                                    setButtonFirst={this.setButtonFirst.bind(this)}\r\n                                />);\r\n                    })\r\n        let cls=\"toolButtonGroup\";\r\n        if(this.state.expanded) cls=cls+\" toolButtonGroupExpanded\"; \r\n                else cls=cls+\" toolButtonGroupCollapsed\";\r\n        return <div className={cls}\r\n                onMouseEnter={this.onMouseEnter.bind(this)}\r\n                onMouseLeave={this.onMouseLeave.bind(this)}\r\n                >\r\n             {buttons}\r\n        </div>\r\n    }\r\n}\r\n","export default class SnapMarker {\r\n    static MARKER_SIZE=5;\r\n    static SNAP_MARKER_SIZE=5; \r\n    constructor(pos){\r\n        this.pos=pos;\r\n\r\n    }\r\n    getMarker(){\r\n        return this.markerShape;\r\n    }\r\n    getPos(){\r\n        return this.pos;\r\n    }\r\n    setMarker(pos, markerShape){\r\n    this.pos=pos;\r\n    this.markerShape=markerShape;\r\n    }\r\n    refresh(realRect, screenRect){\r\n    this.markerShape.refresh(realRect,screenRect);\r\n    }\r\n}","import {Circle} from '../../../utils/geometry';\r\nimport CircleShape from '../CircleShape';\r\nimport ShapeStyle from '../ShapeStyle';\r\nimport {Color} from '../../colors';\r\nimport SnapMarker from './SnapMarker';\r\n\r\nexport default class EndSnapMarker extends SnapMarker {\r\n    static caption = \"center points\";\r\n    constructor(pos){\r\n        super(pos);\r\n        this.circle=new Circle();\r\n    }\r\n    refresh(realRect, screenRect){\r\n        this.circle.center=this.getPos();\r\n        this.circle.radius=realRect.width/screenRect.width*SnapMarker.SNAP_MARKER_SIZE;\r\n        let markerShape=new CircleShape(this.circle);\r\n        markerShape.setStyle(new ShapeStyle(Color.GREEN,ShapeStyle.SOLID));\r\n        this.setMarker(this.circle.center,markerShape);\r\n        super.refresh(realRect,screenRect);\r\n    }\r\n}","import Geometry from '../../../utils/geometry';\r\nimport Shape from '../Shape';\r\nimport {Color} from '../../colors';\r\nimport SnapMarker from './SnapMarker';\r\n\r\nexport default class PointMarker extends Shape {\r\n    static caption = \"center points\";\r\n    constructor(point){\r\n        super();\r\n        this.point=point\r\n        this.setColor(Color.ACTIVE_POINT_MARKER);\r\n    }\r\n    drawSelf(ctx, realRect, screenRect){\r\n        this.refresh(realRect, screenRect);\r\n        ctx.fillStyle=this.getStyle().getColor();\r\n        ctx.lineWidth=this.getStyle().getWidth();\r\n        ctx.beginPath();\r\n        ctx.arc(this.screenCenter.x,this.screenCenter.y,this.screenRadius,0,2*Math.PI);\r\n        ctx.fill();\r\n    }\r\n    refresh(realRect, screenRect){\r\n        this.screenCenter=Geometry.realToScreen(this.point,realRect,screenRect);\r\n        this.screenRadius=SnapMarker.MARKER_SIZE/2;\r\n    }\r\n}","export default class PropertyPicker {\r\n     constructor(){\r\n        this.i=0;\r\n    }\r\n\r\n    getShape(){\r\n        return this.shape;\r\n    }\r\n    getHelperShapes(){\r\n        return this.helperShapes;\r\n    }\r\n    getPickedData(){\r\n        return this.data;\r\n    }\r\n    isNext(){\r\n        return (this.i<this.points.length);\r\n    }\r\n    setNextPoint(p){\r\n        this.setCurrent(p);\r\n        this.i++;\r\n    }\r\n\r\n    refresh(boundedCircle){\r\n        this.boundedCircle=boundedCircle;\r\n        if(this.points[this.i]!=null) this.setControlPoints();\r\n    }\r\n    setStyle(style){\r\n        this.style=style;\r\n    }\r\n    getCurrentStep(){\r\n        return this.i;\r\n    }\r\n    getName(){\r\n        return this.name;\r\n    }\r\n}","import ShapeStyle from '../ShapeStyle';\r\nimport {Coord2D} from \"../../../utils/geometry\";\r\nimport PropertyPicker from './PropertyPicker';\r\nexport default class PointPicker extends PropertyPicker{\r\n    static caption=\"\";\r\n    constructor(){\r\n        super()\r\n        this.name=\"PointPicker\"\r\n        this.points=[new Coord2D()];\r\n        this.helperShapes=[];\r\n    }\r\n    setCurrent(point){\r\n        if(!this.isNext()) return;\r\n        this.points[this.i]=point;\r\n        this.data=point;\r\n    }\r\n    reset(){return new PointPicker(new ShapeStyle(this.style.getColor(),this.style.getType()));}\r\n}\r\n","import Geometry, {Coord2D,Line,Intersection} from '../../utils/geometry';\r\nimport EndSnapMarker from './markers/EndSnapMarker';\r\nimport MiddleSnapMarker from './markers/MiddleSnapMarker';\r\nimport Shape from \"./Shape\";\r\nimport PointMarker from './markers/PointMarker';\r\nimport PointPicker from './pickers/PointPicker';\r\n\r\nexport default class TriangleShape extends Shape{\r\n    constructor(triangle){\r\n        super();\r\n        this.p=[new Coord2D(),new Coord2D(),new Coord2D()];\r\n        this.triangle=triangle;\r\n        this.model=triangle;\r\n    }\r\n    drawSelf(ctx,realRect, screenRect){\r\n        this.refresh(realRect,screenRect);\r\n        ctx.strokeStyle=this.getStyle().getColor();\r\n        ctx.setLineDash(this.getStyle().getStroke());\r\n        ctx.lineWidth=this.getStyle().getWidth();\r\n        ctx.beginPath();\r\n        ctx.moveTo(this.p[0].x,this.p[0].y);\r\n        ctx.lineTo(this.p[1].x,this.p[1].y);\r\n        ctx.lineTo(this.p[2].x,this.p[2].y);\r\n        ctx.lineTo(this.p[0].x,this.p[0].y);\r\n        ctx.stroke();\r\n    }\r\n    refresh(realRect, screenRect){\r\n        for (let i=0;i<3;i++) this.p[i]=Geometry.realToScreen(this.triangle.points[i],realRect,screenRect);\r\n        if(this.activePoint) \r\n            this.activePointMarker=new PointMarker(this.activePoint)\r\n    }\r\n    setActivePoint(key){\r\n        this.activePoint=null;\r\n        if(key==='P1') this.activePoint=this.triangle.points[0];\r\n        if(key==='P2') this.activePoint=this.triangle.points[1];\r\n        if(key==='P3') this.activePoint=this.triangle.points[2];\r\n    }\r\n    getMarkers(){\r\n        let list=[];\r\n        list.push(new EndSnapMarker(this.triangle.points[0]));\r\n        list.push(new EndSnapMarker(this.triangle.points[1]));\r\n        list.push(new EndSnapMarker(this.triangle.points[2]));\r\n        list.push(new MiddleSnapMarker(Geometry.midPoint(this.triangle.points[0],this.triangle.points[1])));\r\n        list.push(new MiddleSnapMarker(Geometry.midPoint(this.triangle.points[1],this.triangle.points[2])));\r\n        list.push(new MiddleSnapMarker(Geometry.midPoint(this.triangle.points[2],this.triangle.points[0])));\r\n        return list;\r\n    }\r\n    getProperties(){\r\n        let prop=new Map();\r\n        prop.set('Title',{value:'Triangle',regexp:/\\s*/});\r\n        prop.set('P1',{value:{x:this.triangle.points[0].x,y:this.triangle.points[0].y},picker:PointPicker,regexp:/^-?\\d*\\.?\\d*$/});\r\n        prop.set('P2',{value:{x:this.triangle.points[1].x,y:this.triangle.points[1].y},picker:PointPicker,regexp:/^-?\\d*\\.?\\d*$/});\r\n        prop.set('P3',{value:{x:this.triangle.points[2].x,y:this.triangle.points[2].y},picker:PointPicker,regexp:/^-?\\d*\\.?\\d*$/});\r\n        return prop;\r\n    }\r\n    setProperty(prop){\r\n        super.setProperty(prop);\r\n        switch(prop.key){\r\n            case 'P1':\r\n                this.triangle.points[0].x=prop.value.x;\r\n                this.triangle.points[0].y=prop.value.y;\r\n                break;\r\n            case 'P2':\r\n                this.triangle.points[1].x=prop.value.x;\r\n                this.triangle.points[1].y=prop.value.y;\r\n                break;\r\n            case 'P3':\r\n                this.triangle.points[2].x=prop.value.x;\r\n                this.triangle.points[2].y=prop.value.y;\r\n                break;\r\n            default:\r\n        }\r\n    }\r\n    getDistance(point) {\r\n        let l1=new Line(this.triangle.points[0],this.triangle.points[1]);\r\n        let l2=new Line(this.triangle.points[1],this.triangle.points[2]);\r\n        let l3=new Line(this.triangle.points[2],this.triangle.points[0]);\r\n        return Math.min(Geometry.PointToLineDistance(point,l1),\r\n        Geometry.PointToLineDistance(point,l2),\r\n        Geometry.PointToLineDistance(point,l3));\r\n    }\r\n    isInRect(topLeft,bottomRight){\r\n        const inRect=[Geometry.pointInRect(this.triangle.points[0],topLeft,bottomRight),\r\n                        Geometry.pointInRect(this.triangle.points[1],topLeft,bottomRight),\r\n                        Geometry.pointInRect(this.triangle.points[2],topLeft,bottomRight)];\r\n        const full=inRect.every(i=>i===true);\r\n        const ps=[Intersection.LineRectangle(new Line(this.triangle.points[0],this.triangle.points[1]),topLeft,bottomRight),\r\n                    Intersection.LineRectangle(new Line(this.triangle.points[1],this.triangle.points[2]),topLeft,bottomRight),\r\n                    Intersection.LineRectangle(new Line(this.triangle.points[2],this.triangle.points[0]),topLeft,bottomRight)];\r\n        const cross=ps.some(p=>p.length>0);\r\n        return {cross,full};    \r\n    }\r\n    toString(){\r\n        return \"Triangle\";\r\n    }\r\n}","import Geometry,{Triangle,Coord2D} from '../../../utils/geometry';\r\nimport TriangleShape from '../TriangleShape';\r\nimport ShapeStyle from '../ShapeStyle';\r\nimport {Color} from '../../colors';\r\nimport SnapMarker from './SnapMarker';\r\n\r\nexport default class MiddleSnapMarker extends SnapMarker {\r\n    static caption = \"middle points\";\r\n    constructor(pos){\r\n    super(pos);\r\n    this.triangle=new Triangle();\r\n}\r\n    refresh(realRect, screenRect){\r\n        let pos=this.getPos();\r\n        let r=realRect.width/screenRect.width*SnapMarker.SNAP_MARKER_SIZE;\r\n        let p=new Array(3);\r\n        p[0]=new Coord2D(pos.x,pos.y+r);\r\n        p[1]=Geometry.rotatePoint(p[0],Math.PI*2/3,pos);\r\n        p[2]=Geometry.rotatePoint(p[1],Math.PI*2/3,pos);\r\n        this.triangle=new Triangle(p);\r\n        let markerShape=new TriangleShape(this.triangle);\r\n        markerShape.setStyle(new ShapeStyle(Color.GREEN,ShapeStyle.SOLID));\r\n        this.setMarker(pos,markerShape);\r\n        super.refresh(realRect,screenRect);\r\n    }\r\n}","import Geometry,{Rectangle,Coord2D,Line, Intersection} from '../../utils/geometry';\r\nimport EndSnapMarker from './markers/EndSnapMarker';\r\nimport MiddleSnapMarker from './markers/MiddleSnapMarker';\r\nimport Shape from \"./Shape\";\r\nimport PointMarker from './markers/PointMarker';\r\nimport PointPicker from './pickers/PointPicker';\r\n\r\nexport default class RectangleShape extends Shape{\r\n    constructor(rectangle){\r\n        super();\r\n        this.rectangle=rectangle;\r\n        this.model=rectangle;\r\n        this.rect=new Rectangle()\r\n    }\r\n\r\n    drawSelf(ctx, realRect, screenRect) {\r\n        this.refresh(realRect, screenRect);\r\n        ctx.strokeStyle=this.getStyle().getColor();\r\n        ctx.setLineDash(this.getStyle().getStroke());\r\n        ctx.lineWidth=this.getStyle().getWidth();\r\n        ctx.strokeRect(this.rect.topLeft.x,this.rect.topLeft.y,this.rect.width,this.rect.height);\r\n    }\r\n    refresh(realRect, screenRect){\r\n        this.rect.topLeft=Geometry.realToScreen(this.rectangle.topLeft,realRect,screenRect);\r\n        this.rect.width=Geometry.realToScreenLength(this.rectangle.width,realRect.width,screenRect.width);\r\n        this.rect.height=Geometry.realToScreenLength(this.rectangle.height,realRect.height,screenRect.height);\r\n        if(this.activePoint) \r\n            this.activePointMarker=new PointMarker(this.activePoint)\r\n    }\r\n    getMarkers(){\r\n        let list=[];\r\n        list.push(new EndSnapMarker(this.rectangle.topLeft));\r\n        list.push(new EndSnapMarker(new Coord2D(this.rectangle.topLeft.x+this.rectangle.width,this.rectangle.topLeft.y)));\r\n        list.push(new EndSnapMarker(new Coord2D(this.rectangle.topLeft.x,this.rectangle.topLeft.y-this.rectangle.height)));\r\n        list.push(new EndSnapMarker(new Coord2D(this.rectangle.topLeft.x+this.rectangle.width,this.rectangle.topLeft.y-this.rectangle.height)));\r\n        list.push(new MiddleSnapMarker(Geometry.midPoint(this.rectangle.topLeft,new Coord2D(this.rectangle.topLeft.x+this.rectangle.width,this.rectangle.topLeft.y))));\r\n        list.push(new MiddleSnapMarker(Geometry.midPoint(new Coord2D(this.rectangle.topLeft.x+this.rectangle.width,this.rectangle.topLeft.y),new Coord2D(this.rectangle.topLeft.x+this.rectangle.width,this.rectangle.topLeft.y-this.rectangle.height))));\r\n        list.push(new MiddleSnapMarker(Geometry.midPoint(new Coord2D(this.rectangle.topLeft.x+this.rectangle.width,this.rectangle.topLeft.y-this.rectangle.height),new Coord2D(this.rectangle.topLeft.x,this.rectangle.topLeft.y-this.rectangle.height))));\r\n        list.push(new MiddleSnapMarker(Geometry.midPoint(new Coord2D(this.rectangle.topLeft.x,this.rectangle.topLeft.y-this.rectangle.height),this.rectangle.topLeft)));\r\n        return list;\r\n    }\r\n    setActivePoint(key){\r\n        this.activePoint=null;\r\n        if(key==='P1') this.activePoint=this.rectangle.topLeft;\r\n        if(key==='P2') this.activePoint=this.rectangle.bottomRight;\r\n    }\r\n    getProperties(){\r\n        let prop=new Map();\r\n        prop.set('Title',{value:'Rectangle',regexp:/\\s*/});\r\n        prop.set('P1',{value:{x:this.rectangle.topLeft.x,y:this.rectangle.topLeft.y},picker:PointPicker,regexp:/^-?\\d*\\.?\\d*$/});\r\n        prop.set('P2',{value:{x:this.rectangle.bottomRight.x,y:this.rectangle.bottomRight.y},picker:PointPicker,regexp:/^-?\\d*\\.?\\d*$/});\r\n        return prop;\r\n    }\r\n    setProperty(prop){\r\n        super.setProperty(prop);\r\n        switch(prop.key){\r\n            case 'P1':\r\n                this.rectangle.topLeft.x=prop.value.x;\r\n                this.rectangle.topLeft.y=prop.value.y;\r\n                break;\r\n            case 'P2':\r\n                this.rectangle.bottomRight.x=prop.value.x;\r\n                this.rectangle.bottomRight.y=prop.value.y;\r\n                break;\r\n            default:\r\n        }\r\n        this.rectangle.width=this.rectangle.bottomRight.x-this.rectangle.topLeft.x;\r\n        this.rectangle.height=this.rectangle.topLeft.y-this.rectangle.bottomRight.y;\r\n    }\r\n    getDistance(point) {\r\n        let tl=this.rectangle.topLeft;\r\n        let tr=new Coord2D(tl.x+this.rectangle.width,tl.y);\r\n        let bl=new Coord2D(tl.x,tl.y-this.rectangle.height);\r\n        let br=new Coord2D(tl.x+this.rectangle.width,tl.y-this.rectangle.height);\r\n        let top=new Line(tl,tr);\r\n        let bottom=new Line(bl,br);\r\n        let right=new Line(tr,br);\r\n        let left=new Line(tl,bl);\r\n        return Math.min(Geometry.PointToLineDistance(point,top),\r\n        Geometry.PointToLineDistance(point,left),\r\n        Geometry.PointToLineDistance(point,bottom),\r\n        Geometry.PointToLineDistance(point,right));\r\n    }\r\n    isInRect(topLeft,bottomRight){\r\n        const inRect=[Geometry.pointInRect(this.rectangle.topLeft,topLeft,bottomRight),\r\n                        Geometry.pointInRect(this.rectangle.bottomRight,topLeft,bottomRight)];\r\n        const full=inRect.every(i=>i===true);\r\n        const cross=Intersection.RectangleRectangle(topLeft,bottomRight,this.rectangle.topLeft,this.rectangle.bottomRight).length>0;\r\n        return {cross,full};    \r\n    }\r\n    toString(){\r\n        return \"Rectangle\";\r\n    }\r\n}","import {Rectangle} from '../../../utils/geometry';\r\nimport RectangleShape from '../RectangleShape';\r\nimport ShapeStyle from '../ShapeStyle';\r\nimport {Color} from '../../colors';\r\nimport SnapMarker from './SnapMarker';\r\nexport default class EndSnapMarker extends SnapMarker {\r\n    static caption = \"end points\";\r\n    constructor(pos){\r\n        super(pos);\r\n        this.rect=new Rectangle();\r\n    }\r\n    refresh(realRect, screenRect){\r\n        let pos=this.getPos();\r\n        this.rect.width=realRect.width/screenRect.width*SnapMarker.SNAP_MARKER_SIZE;\r\n        this.rect.height=this.rect.width;\r\n        this.rect.topLeft.x=pos.x-this.rect.width/2;\r\n        this.rect.topLeft.y=pos.y+this.rect.height/2;\r\n        let markerShape=new RectangleShape(this.rect);\r\n        markerShape.setStyle(new ShapeStyle(Color.DARK_ORANGE,ShapeStyle.SOLID,3));\r\n        this.setMarker(pos,markerShape);\r\n        super.refresh(realRect,screenRect);\r\n    }\r\n}","import Geometry, { Intersection} from '../../utils/geometry';\r\nimport EndSnapMarker from './markers/EndSnapMarker';\r\nimport MiddleSnapMarker from './markers/MiddleSnapMarker';\r\nimport Shape from \"./Shape\";\r\nimport PointMarker from './markers/PointMarker';\r\nimport PointPicker from './pickers/PointPicker';\r\n\r\nexport default class LineShape extends Shape{\r\n    constructor(line){\r\n        super();\r\n        this.p=[];\r\n        this.p[0]=line.p1;\r\n        this.p[1]=line.p2;\r\n        this.line=line;\r\n        this.model=line;\r\n    }\r\n    drawSelf(ctx,realRect, screenRect){\r\n        this.refresh(realRect, screenRect);\r\n        ctx.strokeStyle=this.getStyle().getColor();\r\n        ctx.setLineDash(this.getStyle().getStroke());\r\n        ctx.lineWidth=this.getStyle().getWidth();\r\n        ctx.beginPath();\r\n        ctx.moveTo(this.p0.x,this.p0.y);\r\n        ctx.lineTo(this.p1.x,this.p1.y);\r\n        ctx.stroke();\r\n    }\r\n    refresh(realRect, screenRect){\r\n        this.p0 = Geometry.realToScreen(this.line.p1,realRect,screenRect);\r\n        this.p1 = Geometry.realToScreen(this.line.p2, realRect, screenRect);\r\n        if(this.activePoint) {\r\n            this.activePointMarker=new PointMarker(this.activePoint)\r\n        }\r\n    }\r\n    getMarkers(){\r\n        let list=[];\r\n        list.push(new EndSnapMarker(this.line.p1));\r\n        list.push(new EndSnapMarker(this.line.p2));\r\n        list.push(new MiddleSnapMarker(Geometry.midPoint(this.line.p1,this.line.p2)))\r\n        return list;\r\n    }\r\n    setActivePoint(key){\r\n        this.activePoint=null;\r\n        if(key==='P1') this.activePoint=this.line.p1;\r\n        if(key==='P2') this.activePoint=this.line.p2;\r\n    }\r\n    getProperties(){\r\n        let prop=new Map();\r\n         prop.set('Title',{value:'Line',regexp:/\\s*/});\r\n        prop.set('P1',{value:{x:this.line.p1.x,y:this.line.p1.y},picker:PointPicker,regexp:/^-?\\d*\\.?\\d*$/});\r\n        prop.set('P2',{value:{x:this.line.p2.x,y:this.line.p2.y},picker:PointPicker,regexp:/^-?\\d*\\.?\\d*$/});\r\n        return prop;\r\n    }\r\n    setProperty(prop){\r\n        super.setProperty(prop);\r\n        switch(prop.key){\r\n            case 'P1':\r\n                this.line.p1.x=prop.value.x;\r\n                this.line.p1.y=prop.value.y;\r\n                break;\r\n            case 'P2':\r\n                this.line.p2.x=prop.value.x;\r\n                this.line.p2.y=prop.value.y;\r\n                break;\r\n            default:\r\n        }\r\n    }\r\n    getDistance(point) {\r\n        return Geometry.PointToLineDistance(point,this.line);\r\n    }\r\n    isInRect(topLeft,bottomRight){\r\n        const inRect=[Geometry.pointInRect(this.line.p1,topLeft,bottomRight),\r\n                        Geometry.pointInRect(this.line.p2,topLeft,bottomRight)];\r\n        const full=inRect.every(i=>i===true);\r\n        const cross=Intersection.LineRectangle(this.line,topLeft,bottomRight).length>0;\r\n        return {cross,full};    \r\n    }\r\n    toString(){\r\n            return `Line P1(${this.line.p1.x},${this.line.p1.y}) P2(${this.line.p2.x},${this.line.p2.y})`;\r\n    }\r\n\r\n}","import LineShape from '../LineShape';\r\nimport ShapeStyle from '../ShapeStyle';\r\nimport Geometry, {Line,Coord2D,Circle, Vector} from \"../../../utils/geometry\";\r\nimport {Color} from '../../colors';\r\nimport PropertyPicker from './PropertyPicker';\r\nimport TextShape from '../TextShape';\r\nexport default class DistancePicker extends PropertyPicker{\r\n    static caption=\"\";\r\n    constructor(style=new ShapeStyle(Color.BLACK,ShapeStyle.DASH)){\r\n        super()\r\n        this.name=\"DistancePicker\"\r\n        this.line=new Line(new Coord2D(),new Coord2D());\r\n        this.boundedCircle=new Circle(new Coord2D(),0);\r\n        this.points=[new Coord2D(),new Coord2D()];\r\n        this.shape=new LineShape(this.line);\r\n        this.text=new TextShape();\r\n        this.text.setAnchor(TextShape.CENTER)\r\n        this.text.setFont('10px sans-serif')\r\n        this.style=style;\r\n        this.shape.setStyle(style);\r\n        this.helperShapes=[this.text];\r\n        this.xAxe=new Vector({x:1,y:0},{x:0,y:0})\r\n        //this.helperShapes.push(new CircleShape(new Circle(new Coord2D(),0)));\r\n        //this.helperShapes.push(new CircleShape(new Circle(new Coord2D(),0)));\r\n    }\r\n    setCurrent(point){\r\n        if(!this.isNext()) return;\r\n        this.points[this.i]=point;\r\n        if(this.i===0)this.points[1]=this.points[0];\r\n        if(this.i>0)this.line=new Line(this.points[0],this.points[1]);\r\n        this.data=Geometry.distance(this.points[0],this.points[1]);\r\n        this.shape=new LineShape(this.line);\r\n        this.shape.setStyle(this.style);\r\n        this.text.setText(this.data.toFixed(4))\r\n        this.text.setPoint(Geometry.midPoint(this.points[0],this.points[1]))\r\n        let angle=Geometry.angleVectors(new Vector(this.points[1],this.points[0]),this.xAxe);\r\n        if(angle<Math.PI/2)angle=angle*Math.sign(this.points[0].y-this.points[1].y);\r\n            else angle=(Math.PI-angle)*Math.sign(this.points[1].y-this.points[0].y);\r\n        this.text.rotate(angle);\r\n\r\n        this.setControlPoints();\r\n    }\r\n    setControlPoints(){\r\n        //this.helperShapes[0]=new CircleShape(new Circle(this.points[0],this.boundedCircle.radius* Screen.MARKER_SIZE));\r\n        //this.helperShapes[1]=new CircleShape(new Circle(this.points[1],this.boundedCircle.radius* Screen.MARKER_SIZE));\r\n        //this.helperShapes[0].setColor(Color.BLUE);\r\n        //this.helperShapes[1].setColor(Color.BLUE);\r\n    }\r\n    reset(){return new DistancePicker(new ShapeStyle(this.style.getColor(),this.style.getType()));}\r\n}\r\n","import {Coord2D} from \"../../utils/geometry\";\r\nimport Geometry from \"../../utils/geometry\";\r\nimport CenterSnapMarker from './markers/CenterSnapMarker';\r\nimport Shape from \"./Shape\";\r\nimport PointMarker from \"./markers/PointMarker\";\r\nimport PointPicker from './pickers/PointPicker'\r\nimport DistancePicker from './pickers/DistancePicker'\r\nexport default class CircleShape extends Shape{\r\n    constructor(circle){\r\n        super();\r\n        this.p=new Coord2D();\r\n        this.circle=circle;\r\n        this.model=circle;\r\n    }\r\n\r\n    drawSelf(ctx, realRect, screenRect){\r\n        this.refresh(realRect, screenRect);\r\n        ctx.strokeStyle=this.getStyle().getColor();\r\n        ctx.setLineDash(this.getStyle().getStroke());\r\n        ctx.lineWidth=this.getStyle().getWidth();\r\n        ctx.beginPath();\r\n        ctx.arc(this.screenCenter.x,this.screenCenter.y,this.screenRadius,0,2*Math.PI);\r\n        ctx.stroke();\r\n    }\r\n    refresh(realRect, screenRect){\r\n        this.screenCenter=Geometry.realToScreen(this.circle.center,realRect,screenRect);\r\n        this.screenRadius=Geometry.realToScreenLength(this.circle.radius,realRect.width,screenRect.width);\r\n        if(this.activePoint) \r\n            this.activePointMarker=new PointMarker(this.activePoint)\r\n\r\n    }\r\n    setActivePoint(key){\r\n        this.activePoint=null;\r\n        if(key==='Center') this.activePoint=this.circle.center;\r\n    }\r\n    getMarkers(){\r\n        let list=[];\r\n        list.push(new CenterSnapMarker(this.circle.center));\r\n        return list;\r\n    }\r\n    getProperties(){\r\n        let prop=new Map();\r\n        prop.set('Title',{value:'Circle',regexp:/\\s*/});\r\n        prop.set('Center',{value:{x:this.circle.center.x,y:this.circle.center.y},picker:PointPicker,regexp:/^-?\\d*\\.?\\d*$/});\r\n        prop.set('Radius',{value:this.circle.radius,picker:DistancePicker,regexp:/^\\d*\\.?\\d*$/});\r\n        return prop;\r\n    }\r\n    setProperty(prop){\r\n        super.setProperty(prop);\r\n        switch(prop.key){\r\n            case 'Center':\r\n                this.circle.center.x=prop.value.x;\r\n                this.circle.center.y=prop.value.y;\r\n                break;\r\n            case 'Radius':\r\n                this.circle.radius=prop.value;\r\n                break;\r\n            default:\r\n        }\r\n    }\r\n    getDistance(point) {\r\n        return Math.abs(Geometry.distance(point,this.circle.center)-this.circle.radius);\r\n    }\r\n    isInRect(topLeft,bottomRight){\r\n        const outRectX1=topLeft.x-this.circle.radius;\r\n        const outRectY1=topLeft.y+this.circle.radius;\r\n        const outRectX2=bottomRight.x+this.circle.radius;\r\n        const outRectY2=bottomRight.y-this.circle.radius;\r\n        const inRectX1=topLeft.x+this.circle.radius;\r\n        const inRectY1=topLeft.y-this.circle.radius;\r\n        const inRectX2=bottomRight.x-this.circle.radius;\r\n        const inRectY2=bottomRight.y+this.circle.radius;\r\n        const c=this.circle.center;\r\n        let cross=false;\r\n        const signs=[Math.sign(Geometry.distance(c,{x:topLeft.x,y:topLeft.y})-this.circle.radius),\r\n                     Math.sign(Geometry.distance(c,{x:bottomRight.x,y:topLeft.y})-this.circle.radius),\r\n                     Math.sign(Geometry.distance(c,{x:bottomRight.x,y:bottomRight.y})-this.circle.radius),\r\n                     Math.sign(Geometry.distance(c,{x:topLeft.x,y:bottomRight.y})-this.circle.radius)];\r\n        if(signs.every(x=>x<0)) return {cross:false,full:false};\r\n        let full=Geometry.pointInRectByPoints(c.x,c.y,inRectX1,inRectY1,inRectX2,inRectY2);\r\n        if(full===true) return {cross:false,full:true}\r\n        if(Geometry.pointInRectByPoints(c.x,c.y,outRectX1,outRectY1,outRectX2,outRectY2)){\r\n                cross=true;\r\n                if(Geometry.pointInRectByPoints(c.x,c.y,outRectX1,outRectY1,topLeft.x,topLeft.y)){\r\n                    if(Geometry.distance(c,{x:topLeft.x,y:topLeft.y})>this.circle.radius) cross=false;\r\n                }\r\n                if(Geometry.pointInRectByPoints(c.x,c.y,bottomRight.x,outRectY1,outRectX2,topLeft.y)){\r\n                    if(Geometry.distance(c,{x:bottomRight.x,y:topLeft.y})>this.circle.radius) cross=false;\r\n                }\r\n                if(Geometry.pointInRectByPoints(c.x,c.y,bottomRight.x,bottomRight.y,outRectX2,outRectY2)){\r\n                    if(Geometry.distance(c,{x:bottomRight.x,y:bottomRight.y})>this.circle.radius) cross=false;\r\n                }\r\n                if(Geometry.pointInRectByPoints(c.x,c.y,outRectX1,bottomRight.y,topLeft.x,outRectY2)){\r\n                    if(Geometry.distance(c,{x:topLeft.x,y:bottomRight.y})>this.circle.radius) cross=false;\r\n                }\r\n            }\r\n        return {cross:cross,full:false}\r\n    }\r\n    toString(){\r\n        return \"Center(\"+this.circle.center.x+\",\"+this.circle.center.y+\") radius(\"+this.circle.radius+\")\";\r\n    }\r\n\r\n}","import SLineShape from '../SLineShape';\r\nimport CircleShape from '../CircleShape';\r\nimport ShapeStyle from '../ShapeStyle';\r\nimport {SLine,Coord2D, Circle} from \"../../../utils/geometry\";\r\nimport {Color} from '../../colors';\r\nimport Screen from '../../Screen';\r\nimport ShapeBuilder from './ShapeBuilder';\r\nexport default class StraightLineCreator extends ShapeBuilder{\r\n    static caption=\"Straight line\";\r\n    constructor(style,boundedCircle){\r\n        super(boundedCircle)\r\n        this.name=\"StraightLineCreator\"\r\n        this.points=new Array(2);\r\n        this.points[0]=new Coord2D();\r\n        this.points[1]=new Coord2D();\r\n        this.line=new SLine(0,0,0);\r\n        //this.boundedCircle=new Circle(new Coord2D(),0);\r\n        this.shape=new SLineShape(this.line);\r\n        this.style=style||new ShapeStyle(Color.BLACK,ShapeStyle.SOLID);\r\n        this.shape.setStyle(style);\r\n        this.helperShapes=[];\r\n        this.helperShapes.push(new CircleShape(new Circle(new Coord2D(),0)));\r\n        this.helperShapes.push(new CircleShape(new Circle(new Coord2D(),0)));\r\n    }\r\n    setControlPoints(){\r\n        this.helperShapes[0]=new CircleShape(new Circle(this.points[0], this.boundedCircle.radius* Screen.MARKER_SIZE));\r\n        this.helperShapes[1]=new CircleShape(new Circle(this.points[1], this.boundedCircle.radius* Screen.MARKER_SIZE));\r\n        this.helperShapes[0].setColor(Color.POINT_MARKER);\r\n        this.helperShapes[1].setColor(Color.POINT_MARKER);\r\n    }\r\n    setCurrent(point){\r\n        if(!this.isNext()) return;\r\n        this.points[this.i]=point;\r\n        if(this.i===0)this.points[1]=this.points[0];\r\n        if(this.i>0) {this.line=new SLine(...this.points);if(this.line.a===0&&this.line.b===0)this.legal=false;else this.legal=true;}\r\n        this.shape=new SLineShape(this.line);\r\n        this.shape.setStyle(this.style);\r\n        this.setControlPoints();\r\n    }\r\n    reset(){return new StraightLineCreator(new ShapeStyle(this.style.getColor(),this.style.getType()),this.boundedCircle);}\r\n}","import Geometry,{Coord2D,Circle, Intersection} from \"../../utils/geometry\";\r\nimport EndSnapMarker from './markers/EndSnapMarker';\r\nimport Shape from \"./Shape\";\r\nimport PointMarker from \"./markers/PointMarker\";\r\nimport PointPicker from \"./pickers/PointPicker\";\r\n\r\nexport default class RayLineShape extends Shape{\r\n    constructor(line){\r\n        super();\r\n        this.line=line;\r\n        this.model=line;\r\n    }\r\n    drawSelf(ctx,realRect, screenRect){\r\n        this.refresh(realRect,screenRect);\r\n        if(this.p0===null||this.p1===null) return;\r\n        ctx.strokeStyle=this.getStyle().getColor();\r\n        ctx.setLineDash(this.getStyle().getStroke());\r\n        ctx.lineWidth=this.getStyle().getWidth();\r\n        ctx.beginPath();\r\n        ctx.moveTo(this.p0.x,this.p0.y);\r\n        ctx.lineTo(this.p1.x,this.p1.y);\r\n        ctx.stroke();\r\n    }\r\n    refresh(realRect, screenRect){\r\n        let br=new Coord2D(realRect.topLeft.x+realRect.width,realRect.topLeft.y-realRect.height);\r\n        let c=Geometry.midPoint(realRect.topLeft,br);\r\n        let rad=Geometry.distance(realRect.topLeft,br)/2;\r\n        let circle=new Circle(c,rad);\r\n        let p=Intersection.CircleRLine(circle,this.line);\r\n        if(p!=null){\r\n            if(p.length===1){\r\n                let r=p[0];\r\n                p=new Array(2);\r\n                p[0]=this.line.origin;\r\n                p[1]=r;\r\n            }\r\n            this.p0=Geometry.realToScreen(p[0],realRect,screenRect);\r\n            this.p1=Geometry.realToScreen(p[1],realRect,screenRect);\r\n        }else{\r\n            this.p0=null;\r\n            this.p1=null;\r\n        }\r\n        if(this.activePoint) \r\n            this.activePointMarker=new PointMarker(this.activePoint)\r\n    }\r\n    getMarkers(){\r\n        let list=[];\r\n        list.push(new EndSnapMarker(this.line.origin));\r\n        return list;\r\n    }\r\n    setActivePoint(key){\r\n        this.activePoint=null;\r\n        if(key==='Origin') this.activePoint=this.line.origin;\r\n        if(key==='Direction') this.activePoint=this.line.directionPoint;\r\n    }\r\n    getProperties(){\r\n        let prop=new Map();\r\n        prop.set('Title',{value:'RLine',regexp:/\\s*/});\r\n        prop.set('Origin',{value:{x:this.line.origin.x,y:this.line.origin.y},picker:PointPicker,regexp:/^-?\\d*\\.?\\d*$/});\r\n        prop.set('Direction',{value:{x:this.line.origin.x+this.line.vector.x,y:this.line.origin.y+this.line.vector.y},picker:PointPicker,regexp:/^-?\\d*\\.?\\d*$/});\r\n        return prop;\r\n    }\r\n    setProperty(prop){\r\n        super.setProperty(prop);\r\n        switch(prop.key){\r\n            case 'Origin':\r\n                this.line.origin.x=prop.value.x;\r\n                this.line.origin.y=prop.value.y;\r\n                this.line.directionPoint.x=this.line.origin.x+this.line.vector.x;\r\n                this.line.directionPoint.y=this.line.origin.y+this.line.vector.y;\r\n                break;\r\n            case 'Direction':\r\n                this.line.vector.x=prop.value.x-this.line.origin.x;\r\n                this.line.vector.y=prop.value.y-this.line.origin.y;\r\n                this.line.directionPoint.x=this.line.origin.x+this.line.vector.x;\r\n                this.line.directionPoint.y=this.line.origin.y+this.line.vector.y;\r\n                break;\r\n            default:\r\n        }\r\n    }\r\n    getDistance(point) {\r\n        return Geometry.PointToRLineDistance(point,this.line);\r\n    }\r\n    isInRect(topLeft,bottomRight){\r\n        const full=false;\r\n        const cross=Intersection.RectangleRLine(topLeft,bottomRight,this.line).length>0;\r\n        return {cross,full};    \r\n    }\r\n    toString(){\r\n        return `Ray origin (${this.line.origin.x},${this.line.origin.y}) vector(${this.line.vector.x},${this.line.vector.y})`;\r\n    }\r\n\r\n}","import RayLineShape from '../RayLineShape';\r\nimport CircleShape from '../CircleShape';\r\nimport ShapeStyle from '../ShapeStyle';\r\nimport {RLine, Coord2D, Circle} from \"../../../utils/geometry\";\r\nimport {Color} from '../../colors';\r\nimport Screen from '../../Screen';\r\nimport ShapeBuilder from './ShapeBuilder';\r\nexport default class RayLineCreator extends ShapeBuilder{\r\n    static caption=\"Ray line\";\r\n    constructor(style,boundedCircle){\r\n        super(boundedCircle)\r\n        this.name=\"RayLineCreator\"\r\n        this.line=new RLine(new Coord2D(),new Coord2D());\r\n        this.points=new Array(2);\r\n        this.shape=new RayLineShape(this.line);\r\n        this.style=style||new ShapeStyle(Color.BLACK,ShapeStyle.SOLID);\r\n        this.shape.setStyle(style);\r\n        this.helperShapes=[];\r\n        this.helperShapes.push(new CircleShape(new Circle(new Coord2D(),0)));\r\n        this.helperShapes.push(new CircleShape(new Circle(new Coord2D(),0)));\r\n    }\r\n    setControlPoints(){\r\n        this.helperShapes[0]=new CircleShape(new Circle(this.points[0], this.boundedCircle.radius* Screen.MARKER_SIZE));\r\n        this.helperShapes[1]=new CircleShape(new Circle(this.points[1], this.boundedCircle.radius* Screen.MARKER_SIZE));\r\n        this.helperShapes[0].setColor(Color.POINT_MARKER);\r\n        this.helperShapes[1].setColor(Color.POINT_MARKER);\r\n    }\r\n\r\n    setCurrent(point){\r\n        if(!this.isNext()) return;\r\n        this.points[this.i]=point;\r\n        if(this.i===0)this.points[1]=this.points[0];\r\n        if(this.i>0) {this.line=new RLine(...this.points);if(this.line.vector.x===0&&this.line.vector.y===0)this.legal=false;else this.legal=true}\r\n        this.shape=new RayLineShape(this.line,this.boundedCircle);\r\n        this.shape.setStyle(this.style);\r\n        this.setControlPoints();\r\n    }\r\n    reset(){return new RayLineCreator(new ShapeStyle(this.style.getColor(),this.style.getType()),this.boundedCircle);}\r\n}","import LineShape from '../LineShape';\r\nimport CircleShape from '../CircleShape';\r\nimport ShapeStyle from '../ShapeStyle';\r\nimport {Line,Coord2D,Circle} from \"../../../utils/geometry\";\r\nimport {Color} from '../../colors';\r\nimport Screen from '../../Screen';\r\nimport ShapeBuilder from './ShapeBuilder';\r\nexport default class LineCreator extends ShapeBuilder{\r\n    static caption=\"Segment line\";\r\n    constructor(style=new ShapeStyle(Color.BLACK,ShapeStyle.SOLID),boundedCircle){\r\n        super(boundedCircle)\r\n        this.name=\"LineCreator\"\r\n        this.line=new Line(new Coord2D(),new Coord2D());\r\n        this.points=[new Coord2D(),new Coord2D()];\r\n        this.shape=new LineShape(this.line);\r\n        this.style=style;\r\n        this.shape.setStyle(style);\r\n        this.helperShapes=[];\r\n        this.helperShapes.push(new CircleShape(new Circle(new Coord2D(),0)));\r\n        this.helperShapes.push(new CircleShape(new Circle(new Coord2D(),0)));\r\n    }\r\n    setCurrent(point){\r\n        if(!this.isNext()) return;\r\n        this.points[this.i]=point;\r\n        if(this.i===0)this.points[1]=this.points[0];\r\n        if(this.i>0)this.line=new Line(this.points[0],this.points[1]);\r\n        this.shape=new LineShape(this.line);\r\n        this.shape.setStyle(this.style);\r\n        this.setControlPoints();\r\n    }\r\n    setControlPoints(){\r\n        this.helperShapes[0]=new CircleShape(new Circle(this.points[0],this.boundedCircle.radius* Screen.MARKER_SIZE));\r\n        this.helperShapes[1]=new CircleShape(new Circle(this.points[1],this.boundedCircle.radius* Screen.MARKER_SIZE));\r\n        this.helperShapes[0].setColor(Color.POINT_MARKER);\r\n        this.helperShapes[1].setColor(Color.POINT_MARKER);\r\n    }\r\n    reset(){return new LineCreator(new ShapeStyle(this.style.getColor(),this.style.getType()),this.boundedCircle);}\r\n}\r\n","import {Circle,Line,Coord2D} from \"../../../utils/geometry\";\r\nimport CircleShape from \"../CircleShape\";\r\nimport LineShape from \"../LineShape\";\r\nimport Geometry from \"../../../utils/geometry\";\r\nimport ShapeStyle from \"../ShapeStyle\";\r\nimport {Color} from '../../colors';\r\nimport Screen from '../../Screen';\r\nimport ShapeBuilder from \"./ShapeBuilder\";\r\nexport default class CircleCRCreator extends ShapeBuilder{\r\n    static caption=\"Circle by center\";\r\n    constructor(style=new ShapeStyle(Color.BLACK,ShapeStyle.SOLID),boundedCircle){\r\n        super(boundedCircle)\r\n        this.name=\"CircleCRCreator\"\r\n        this.points=new Array(2);\r\n        this.circle=new Circle(new Coord2D(),0);\r\n        this.helperShapes = [];\r\n        this.shape=new CircleShape(this.circle);\r\n        this.radiusLine=new Line(this.circle.center,this.circle.center);\r\n        this.helperShapes.push(new LineShape(this.radiusLine));\r\n        this.helperShapes.push(new CircleShape(new Circle(new Coord2D(),0)));\r\n        this.helperShapes.push(new CircleShape(new Circle(new Coord2D(),0)));\r\n        this.style=style;\r\n        this.shape.setStyle(style);\r\n        this.helperShapes[0].setStyle(new ShapeStyle(Color.GRAY,ShapeStyle.DASH));\r\n        this.helperShapes[1].setStyle(new ShapeStyle(Color.BLUE,ShapeStyle.SOLID));\r\n        this.helperShapes[2].setStyle(new ShapeStyle(Color.BLUE,ShapeStyle.SOLID));\r\n    }\r\n\r\n    setCurrent(point){\r\n        if(!this.isNext()) return;\r\n        this.points[this.i]=point;\r\n        if(this.i===0)this.points[1]=this.points[0];\r\n        if(this.i>0)this.circle=new Circle(this.points[0], Geometry.distance(this.points[0],this.points[this.i]));\r\n        this.radiusLine=new Line(this.points[0],this.points[this.i]);\r\n        this.shape=new CircleShape(this.circle);\r\n        this.helperShapes[0]=new LineShape(this.radiusLine);\r\n        this.shape.setStyle(this.style);\r\n        this.helperShapes[0].setStyle(new ShapeStyle(Color.GRAY,ShapeStyle.DASH));\r\n        this.setControlPoints();\r\n    }\r\n\r\n    setControlPoints(){\r\n        this.helperShapes[1]=new CircleShape(new Circle(this.points[0],this.boundedCircle.radius*Screen.MARKER_SIZE));\r\n        this.helperShapes[2]=new CircleShape(new Circle(this.points[1],this.boundedCircle.radius*Screen.MARKER_SIZE));\r\n        this.helperShapes[1].setStyle(new ShapeStyle(Color.POINT_MARKER,ShapeStyle.SOLID));                     \r\n        this.helperShapes[2].setStyle(new ShapeStyle(Color.POINT_MARKER,ShapeStyle.SOLID));\r\n    }\r\n    reset(){return new CircleCRCreator(new ShapeStyle(this.style.getColor(),this.style.getType()),this.boundedCircle);}\r\n}","import {Circle,Line,Coord2D} from \"../../../utils/geometry\";\r\nimport CircleShape from \"../CircleShape\";\r\nimport LineShape from \"../LineShape\";\r\nimport Geometry from \"../../../utils/geometry\";\r\nimport ShapeStyle from \"../ShapeStyle\";\r\nimport {Color} from '../../colors';\r\nimport Screen from '../../Screen';\r\nimport ShapeBuilder from \"./ShapeBuilder\";\r\nexport default class Circle2PCreator extends ShapeBuilder{\r\n     static caption=\"Circle by 2 points\";\r\n     constructor(style,boundedCircle){\r\n        super(boundedCircle)\r\n        this.name=\"Circle2PCreator\"\r\n        this.style=style;\r\n        this.circle=new Circle(new Coord2D(),0);\r\n        this.shape=new CircleShape(this.circle);\r\n        this.shape.setStyle(style);\r\n        this.helperShapes = [];\r\n        this.diamLine=new Line(this.circle.center,this.circle.center);\r\n        this.helperShapes.push(new LineShape(this.diamLine));\r\n        this.helperShapes.push(new CircleShape(new Circle(new Coord2D(),0)));\r\n        this.helperShapes.push(new CircleShape(new Circle(new Coord2D(),0)));\r\n        this.helperShapes[0].setStyle(new ShapeStyle(Color.gray,ShapeStyle.DASH));\r\n        this.helperShapes[1].setStyle(new ShapeStyle(Color.blue,ShapeStyle.SOLID));\r\n        this.helperShapes[2].setStyle(new ShapeStyle(Color.blue,ShapeStyle.SOLID));\r\n        this.points=new Array(2);\r\n    }\r\n    \r\n    setCurrent(point){\r\n        if(!this.isNext()) return;\r\n        this.points[this.i]=point;\r\n        if(this.i===0)this.points[1]=this.points[0];\r\n        if(this.i>0) this.circle=new Circle(Geometry.midPoint(this.points[0],this.points[1]),Geometry.distance(this.points[0],this.points[1])/2);\r\n        this.diamLine =new Line(this.points[0],this.points[this.i]);\r\n        this.shape=new CircleShape(this.circle);\r\n        this.shape.setStyle(this.style);\r\n        this.setControlPoints();\r\n    }\r\n    setControlPoints(){\r\n        this.helperShapes[0]=new LineShape(this.diamLine);\r\n        this.helperShapes[1]=new CircleShape(new Circle(this.points[0],this.boundedCircle.radius* Screen.MARKER_SIZE));\r\n        this.helperShapes[2]=new CircleShape(new Circle(this.points[1],this.boundedCircle.radius* Screen.MARKER_SIZE));\r\n        this.helperShapes[0].setStyle(new ShapeStyle(Color.GRAY,ShapeStyle.DASH));\r\n        this.helperShapes[1].setStyle(new ShapeStyle(Color.POINT_MARKER,ShapeStyle.SOLID));\r\n        this.helperShapes[2].setStyle(new ShapeStyle(Color.POINT_MARKER,ShapeStyle.SOLID));\r\n    }\r\n    reset(){return new Circle2PCreator(new ShapeStyle(this.style.getColor(),this.style.getType()),this.boundedCircle);}\r\n    \r\n}","import {Circle,Triangle,Coord2D} from \"../../../utils/geometry\";\r\nimport CircleShape from \"../CircleShape\";\r\nimport TriangleShape from \"../TriangleShape\";\r\nimport ShapeStyle from \"../ShapeStyle\";\r\nimport {Color} from '../../colors';\r\nimport Screen from '../../Screen';\r\nimport ShapeBuilder from \"./ShapeBuilder\";\r\nexport default class Circle3PCreator extends ShapeBuilder{\r\n    static caption=\"Circle by 3 points\";\r\n    constructor(style,boundedCircle){\r\n        super(boundedCircle)\r\n        this.name=\"Circle3PCreator\"\r\n        this.style=style;\r\n        this.circle=new Circle(new Coord2D(),0);\r\n        this.shape=new CircleShape(this.circle);\r\n        this.shape.setStyle(style);\r\n        this.helperShapes = [];\r\n        this.triangle =new Triangle();\r\n        this.helperShapes.push(new TriangleShape(this.triangle));\r\n        this.helperShapes.push(new CircleShape(new Circle(new Coord2D(),0)));\r\n        this.helperShapes.push(new CircleShape(new Circle(new Coord2D(),0)));\r\n        this.helperShapes.push(new CircleShape(new Circle(new Coord2D(),0)));\r\n        this.helperShapes[0].setStyle(new ShapeStyle(Color.gray,ShapeStyle.DASH));\r\n        this.helperShapes[1].setStyle(new ShapeStyle(Color.POINT_MARKER,ShapeStyle.SOLID));\r\n        this.helperShapes[2].setStyle(new ShapeStyle(Color.POINT_MARKER,ShapeStyle.SOLID));\r\n        this.helperShapes[3].setStyle(new ShapeStyle(Color.POINT_MARKER,ShapeStyle.SOLID));\r\n        this.points=new Array(3);\r\n    }\r\n\r\n    setCurrent(point){\r\n        if(!this.isNext()) return;\r\n        this.points[this.i]=point;\r\n        if(this.i===0)this.points[1]=this.points[0];\r\n        if(this.i<2)this.points[2]=this.points[1];\r\n        this.triangle=new Triangle(this.points);\r\n        this.circle=this.triangle.getOuterCircle();\r\n        this.shape=new CircleShape(this.circle);\r\n        this.shape.setStyle(this.style);\r\n        this.setControlPoints();\r\n    }\r\n\r\n    setControlPoints(){\r\n        this.helperShapes[0]=new TriangleShape(new Triangle(this.points));\r\n        this.helperShapes[1]=new CircleShape(new Circle(this.points[0],this.boundedCircle.radius* Screen.MARKER_SIZE));\r\n        this.helperShapes[2]=new CircleShape(new Circle(this.points[1],this.boundedCircle.radius* Screen.MARKER_SIZE));\r\n        this.helperShapes[3]=new CircleShape(new Circle(this.points[2],this.boundedCircle.radius* Screen.MARKER_SIZE));\r\n        this.helperShapes[0].setStyle(new ShapeStyle(Color.GRAY,ShapeStyle.DASH));\r\n        this.helperShapes[1].setStyle(new ShapeStyle(Color.BLUE,ShapeStyle.SOLID));\r\n        this.helperShapes[2].setStyle(new ShapeStyle(Color.BLUE,ShapeStyle.SOLID));\r\n        this.helperShapes[3].setStyle(new ShapeStyle(Color.BLUE,ShapeStyle.SOLID));\r\n    }\r\n    reset(){return new Circle3PCreator(new ShapeStyle(this.style.getColor(),this.style.getType()),this.boundedCircle);}\r\n    refresh(boundedCircle){\r\n        this.boundedCircle=boundedCircle;\r\n        if(this.points[this.i]!=null) this.setControlPoints();\r\n    }\r\n\r\n}","import TriangleShape from '../TriangleShape';\r\nimport CircleShape from '../CircleShape';\r\nimport {Triangle,Coord2D,Circle} from \"../../../utils/geometry\";\r\nimport {Color} from '../../colors';\r\nimport ShapeStyle from '../ShapeStyle';\r\nimport Screen from '../../Screen';\r\nimport ShapeBuilder from './ShapeBuilder';\r\nexport default class TriangleCreator extends ShapeBuilder{\r\n     static caption=\"Triangle\";\r\n     constructor(style,boundedCircle){\r\n        super(boundedCircle)\r\n        this.name=\"TriangleCreator\"\r\n        this.style=style;\r\n        this.triangle=new Triangle();\r\n        this.shape=new TriangleShape(this.triangle);\r\n        this.helperShapes=[];\r\n        this.helperShapes.push(new CircleShape(new Circle(new Coord2D(),0)));\r\n        this.helperShapes.push(new CircleShape(new Circle(new Coord2D(),0)));\r\n        this.helperShapes.push(new CircleShape(new Circle(new Coord2D(),0)));\r\n        this.shape.setStyle(style);\r\n        this.points=new Array(3);\r\n    }\r\n    setCurrent(point){\r\n        if(!this.isNext()) return;\r\n        this.points[this.i]=point;\r\n        if(this.i===0)this.points[1]=this.points[0];\r\n        if(this.i<2)this.points[2]=this.points[1];\r\n        this.triangle=new Triangle(this.points);\r\n        this.shape=new TriangleShape(this.triangle);\r\n        this.shape.setStyle(this.style);\r\n        this.setControlPoints();\r\n    }\r\n    setControlPoints(){\r\n        this.helperShapes[0]=new CircleShape(new Circle(this.points[0],this.boundedCircle.radius* Screen.MARKER_SIZE));\r\n        this.helperShapes[1]=new CircleShape(new Circle(this.points[1],this.boundedCircle.radius* Screen.MARKER_SIZE));\r\n        this.helperShapes[2]=new CircleShape(new Circle(this.points[2],this.boundedCircle.radius* Screen.MARKER_SIZE));\r\n        this.helperShapes[0].setColor(Color.POINT_MARKER);\r\n        this.helperShapes[1].setColor(Color.POINT_MARKER);\r\n        this.helperShapes[2].setColor(Color.POINT_MARKER);\r\n    }\r\n    reset(){return new TriangleCreator(new ShapeStyle(this.style.getColor(),this.style.getType()),this.boundedCircle);}\r\n}","import {Color} from '../../colors';\r\nimport {Rectangle,Coord2D,Circle} from '../../../utils/geometry';\r\nimport RectangleShape from '../RectangleShape';\r\nimport CircleShape from '../CircleShape';\r\nimport ShapeStyle from '../ShapeStyle';\r\nimport Screen from '../../Screen';\r\nimport ShapeBuilder from './ShapeBuilder';\r\nexport default class RectangleCreator extends ShapeBuilder{\r\n    static caption=\"Rectangle\";\r\n    rectangle=new Rectangle();\r\n    points=new Array(2);\r\n    constructor(style,boundedCircle){\r\n        super(boundedCircle)\r\n        this.name=\"RectangleCreator\"\r\n        this.style=style;\r\n        this.shape=new RectangleShape(this.rectangle);\r\n        this.shape.setStyle(style);\r\n        this.helperShapes = [];\r\n        this.helperShapes.push(new CircleShape(new Circle(new Coord2D(),0)));\r\n        this.helperShapes.push(new CircleShape(new Circle(new Coord2D(),0)));\r\n        this.helperShapes[0].setStyle(new ShapeStyle(Color.BLUE,ShapeStyle.SOLID));\r\n        this.helperShapes[1].setStyle(new ShapeStyle(Color.BLUE,ShapeStyle.SOLID));\r\n    }\r\n    setCurrent(point){\r\n        if(!this.isNext()) return;\r\n        this.points[this.i]=point;\r\n        if(this.i===0)this.points[1]=this.points[0];\r\n        if(this.i>0)this.rectangle=new Rectangle(this.points[0], this.points[1]);\r\n        this.shape=new RectangleShape(this.rectangle);\r\n        this.shape.setStyle(this.style);\r\n        this.setControlPoints();\r\n    }\r\n    setControlPoints(){\r\n        this.helperShapes[0]=new CircleShape(new Circle(this.points[0],this.boundedCircle.radius*Screen.MARKER_SIZE));\r\n        this.helperShapes[1]=new CircleShape(new Circle(this.points[1],this.boundedCircle.radius*Screen.MARKER_SIZE));\r\n        this.helperShapes[0].setStyle(new ShapeStyle(Color.POINT_MARKER,ShapeStyle.SOLID));\r\n        this.helperShapes[1].setStyle(new ShapeStyle(Color.POINT_MARKER,ShapeStyle.SOLID));\r\n    }\r\n    reset(){return new RectangleCreator(new ShapeStyle(this.style.getColor(),this.style.getType()),this.boundedCircle);}\r\n}","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport '../Graph.css';\r\nimport ToolButtonGroup from \"./ToolButtonGroup\";\r\nimport StraightLineCreator from \"./shapes/shapecreators/StraightLineCreator\";\r\nimport RayLineCreator from \"./shapes/shapecreators/RayLineCreator\";\r\nimport LineCreator from \"./shapes/shapecreators/LineCreator\";\r\nimport CircleCRCreator from \"./shapes/shapecreators/CircleCRCreator\";\r\nimport Circle2PCreator from \"./shapes/shapecreators/Circle2PCreator\";\r\nimport Circle3PCreator from \"./shapes/shapecreators/Circle3PCreator\";\r\nimport TriangleCreator from \"./shapes/shapecreators/TriangleCreator\";\r\nimport RectangleCreator from \"./shapes/shapecreators/RectangleCreator\";\r\nimport {setActiveCreateButton} from \"../actions/ComponentActions\";\r\nimport {setScreenStatus, setCyclicFlag, createNewShape, cancel} from \"../actions/ScreenActions\";\r\nimport ShapeStyle from './shapes/ShapeStyle';\r\nimport { Color } from './colors';\r\n\r\nclass CreateToolBar extends React.Component{\r\n    onClick({pressed,params}){\r\n        if(!pressed) {\r\n            this.setButtonId(params.id);\r\n            this.props.createNewShape(new params.creator(new ShapeStyle(Color.BLACK, ShapeStyle.SOLID),this.props.boundedCircle));\r\n        }\r\n        else {\r\n           this.setButtonId(\"\");\r\n           this.props.cancel();\r\n        }\r\n    }\r\n    setButtonId(id){\r\n        this.props.setActiveCreateButton(id);\r\n    }\r\n    render(){\r\n        const cap=this.props.captions.create;\r\n        return <div className={\"toolBar\"} id=\"createToolBar\">\r\n                 <div className={\"toolBarHeader\"}>\r\n                    <span className={\"toolBarCaption noselect\"}>{cap.createToolBar}</span>\r\n                </div>\r\n                <hr/>\r\n                <div className=\"checkbox\">\r\n                    <input type=\"checkbox\" id=\"cyclic\" onChange={(e)=>{this.props.setCyclicFlag(e.target.checked)}}/>\r\n                    <label htmlFor=\"cyclic\">{cap.createCheckBox}</label>\r\n                </div>\r\n            <ToolButtonGroup \r\n                                buttons={[{title:cap.createSLine2Points,id:\"SLine\",params:{creator:StraightLineCreator}},\r\n                                         {title:cap.createRayLine2Points,id:\"RLine\",params:{creator:RayLineCreator}},\r\n                                         {title:cap.createSegmentLine2Points,id:\"Line\",params:{creator:LineCreator}}\r\n                                            ]}\r\n                                activeButton={this.props.activeButton}\r\n                                onClick={this.onClick.bind(this)}\r\n                                />\r\n            <ToolButtonGroup \r\n                                buttons={[{title:cap.createCircleCenter,id:\"CircleRad\",params:{creator:CircleCRCreator}},\r\n                                          {title:cap.createCircle2P,id:\"Circle2p\",params:{creator:Circle2PCreator}},\r\n                                          {title:cap.createCircle3P,id:\"Circle3p\",params:{creator:Circle3PCreator}}\r\n                                            ]}\r\n                                activeButton={this.props.activeButton}\r\n                                onClick={this.onClick.bind(this)}\r\n                                />\r\n            <ToolButtonGroup \r\n                                buttons={[{title:cap.createRect,id:\"Rect2p\",params:{creator:RectangleCreator}},\r\n                                          {title:cap.createRectCenter,id:\"RectCenter\",params:{creator:null,dev:cap.development}}    \r\n                                            ]}\r\n                                activeButton={this.props.activeButton}\r\n                                onClick={this.onClick.bind(this)}            \r\n                                />\r\n            <ToolButtonGroup\r\n                buttons={[{title:cap.createTriangle,id:\"Triangle\",params:{creator:TriangleCreator}},\r\n                        {title:cap.createTriangleInscribed,id:\"TriangleInscribed\",params:{creator:null,dev:cap.development}},\r\n                        {title:cap.createTriangleDescribed,id:\"TriangleDescribed\",params:{creator:null,dev:cap.development}}\r\n                ]}\r\n                activeButton={this.props.activeButton}\r\n                onClick={this.onClick.bind(this)}\r\n            />\r\n            <ToolButtonGroup\r\n                buttons={[{title:cap.createParabola,id:\"Parabola\",params:{creator:null,dev:cap.development}},\r\n                        {title:cap.createHyperbola,id:\"Hyperbola\",params:{creator:null,dev:cap.development}},\r\n                ]}\r\n                activeButton={this.props.activeButton}\r\n                onClick={this.onClick.bind(this)}\r\n            />\r\n            <ToolButtonGroup\r\n                buttons={[{title:cap.createFunction,id:\"Function\",params:{creator:null,dev:cap.development}}\r\n                ]}\r\n                activeButton={this.props.activeButton}\r\n                onClick={this.onClick.bind(this)}\r\n            />\r\n\r\n        </div>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (store,ownProps) => {\r\n\r\n    return {\r\n        boundedCircle:store.screen.boundedCircle,\r\n        context:store.screen.context,\r\n        captions:store.options.captions,\r\n        activeButton:store.components.activeCreateButton,\r\n    }\r\n};\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        cancel:()=>dispatch(cancel()),\r\n        createNewShape:(creator)=>dispatch(createNewShape(creator)),\r\n        setActiveCreateButton:id=>dispatch(setActiveCreateButton(id)),\r\n        setScreenStatus:(status,params)=>dispatch(setScreenStatus(status,params)),\r\n        setCyclicFlag:(flag)=>dispatch(setCyclicFlag(flag)),\r\n    }\r\n};\r\nexport default connect(mapStateToProps,mapDispatchToProps)(CreateToolBar)","import React from \"react\";\r\n\r\nexport default class OptionTogglePic extends React.Component{\r\n\r\n    onclick(){\r\n        if(!this.props.pressed) {\r\n                this.props.setSnap(this.props.snapClass,true);\r\n                this.props.setActiveSnapButton(this.props.id);\r\n            }\r\n            else {\r\n                this.props.setSnap(this.props.snapClass,false);\r\n                this.props.clearActiveSnapButton(this.props.id);\r\n            }\r\n    }\r\n    render(){\r\n        let cls=!this.props.pressed?\"toolButtonUp\":\"toolButtonDown\";\r\n        cls=cls+\" toolButton snapButton\";\r\n        return <div id={this.props.id}\r\n                    className={cls}\r\n                       onClick={this.onclick.bind(this)}\r\n                    title={this.props.title}\r\n\r\n                    >\r\n\r\n        </div>\r\n    }\r\n}","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport '../Graph.css';\r\nimport {setSnap} from '../actions/ScreenActions';\r\nimport {setActiveSnapButton,clearActiveSnapButton} from '../actions/ComponentActions';\r\nimport OptionTogglePic from './OptionTogglePic';\r\nimport EndSnapMarker from \"./shapes/markers/EndSnapMarker\";\r\nimport MiddleSnapMarker from \"./shapes/markers/MiddleSnapMarker\";\r\nimport CenterSnapMarker from \"./shapes/markers/CenterSnapMarker\";\r\nclass SnapToggleBar extends React.Component{\r\n    render(){\r\n        let cap=this.props.captions.snap;\r\n        return <div className={\"toolBar snapToolBar\"}>\r\n                               \r\n        <OptionTogglePic title={cap.snapGridPoints}\r\n                           id={\"grid\"}\r\n                           setSnap={this.props.setSnap}\r\n                           snapClass={\"grid\"}\r\n                           setActiveSnapButton={this.props.setActiveSnapButton}\r\n                           clearActiveSnapButton={this.props.clearActiveSnapButton}\r\n                           pressed={this.props.activeButtons.has(\"grid\")}\r\n        />\r\n        <OptionTogglePic title={cap.snapEndPoints}\r\n                             id={\"endpoint\"}\r\n                             setSnap={this.props.setSnap}\r\n                             snapClass={EndSnapMarker}\r\n                             setActiveSnapButton={this.props.setActiveSnapButton}\r\n                             clearActiveSnapButton={this.props.clearActiveSnapButton}\r\n                             pressed={this.props.activeButtons.has(\"endpoint\")}\r\n            />\r\n         <OptionTogglePic title={cap.snapMiddlePoints}\r\n                             id={\"middlepoint\"}\r\n                             setSnap={this.props.setSnap}\r\n                             snapClass={MiddleSnapMarker}\r\n                             setActiveSnapButton={this.props.setActiveSnapButton}\r\n                             clearActiveSnapButton={this.props.clearActiveSnapButton}\r\n                             pressed={this.props.activeButtons.has(\"middlepoint\")}\r\n            />\r\n        <OptionTogglePic title={cap.snapCenterPoints}\r\n                             id={\"centerpoint\"}\r\n                             setSnap={this.props.setSnap}\r\n                             snapClass={CenterSnapMarker}\r\n                             setActiveSnapButton={this.props.setActiveSnapButton}\r\n                             clearActiveSnapButton={this.props.clearActiveSnapButton}\r\n                             pressed={this.props.activeButtons.has(\"centerpoint\")}\r\n            />\r\n        </div>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = store => {\r\n\r\n    return {\r\n            screen: store.screen,\r\n            captions:store.options.captions,\r\n            activeButtons:store.components.activeSnapButtons,\r\n    }\r\n};\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        setSnap: (snapClass,snap)=>dispatch(setSnap(snapClass,snap)),\r\n        setActiveSnapButton: id=>dispatch(setActiveSnapButton(id)),\r\n        clearActiveSnapButton: id=>dispatch(clearActiveSnapButton(id)),\r\n    }\r\n};\r\nexport default connect(mapStateToProps,mapDispatchToProps)(SnapToggleBar)","import React from 'react';\r\nimport '../Buttons.css';\r\nimport { connect } from 'react-redux';\r\n\r\nclass PickButton extends React.Component{\r\n    render(){\r\n        const style=this.props.active?\"pickButtonDown\":\"pickButtonUp\"\r\n        return <div title={this.props.captions.buttons.pick} onClick={this.props.onClick} className={\"pickButton \"+style}></div>\r\n    }\r\n}\r\nconst mapStateToProps=(store)=>({captions:store.options.captions})\r\nexport default connect(mapStateToProps)(PickButton)","import \"../Graph.css\";\r\nimport React from \"react\";\r\nimport PickButton from \"./PickButton\";\r\nimport { PICK, PICK_END } from \"../reducers/screen\";\r\nimport { connect } from \"react-redux\";\r\nimport { startPicking, setPickedData, cancel } from \"../actions/ScreenActions\";\r\n\r\nclass PropertyField extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={value:props.value.toFixed(4),correct:true,prevValue:props.value.toFixed(4),originValue:props.value.toFixed(4)}\r\n    }\r\n    change(e){\r\n        let v=e.target.value;\r\n        const r=this.props.regexp;\r\n        const corr=v.match(r)!=null;\r\n        if(corr)this.setState({value:v,prevValue:v}); \r\n          else\r\n          this.setState({value:v===''?'':this.state.prevValue})\r\n    }\r\n    blur(){\r\n        this.setState({value:this.state.originValue})\r\n        window.KEYDOWNHANDLE=true\r\n    }\r\n    onKeyPress(e){\r\n        if(e.charCode===13){\r\n            let v=e.target.value;\r\n            v=v===''?\"0\":v;\r\n            const r=this.props.regexp;\r\n            if(v.match(r)!==null) {\r\n                const n=Number.parseFloat(v);\r\n                this.props.setProperty(this.props.propKey,n);\r\n                this.setState({value:n,correct:true,prevValue:n});\r\n                return;\r\n                }\r\n            this.setState({value:this.state.prevValue})\r\n        }\r\n       return false;\r\n        \r\n    }\r\n    static getDerivedStateFromProps(nextProps,prevState){\r\n        let value=(nextProps.status===PICK_END&&nextProps.id===nextProps.editId)?nextProps.pickedValue:prevState.value;\r\n        value=(+value).toFixed(4)\r\n        return {...nextProps,value:value,originValue:nextProps.value,correct:true};\r\n    }\r\n    componentDidUpdate(){\r\n        if(this.props.status===PICK_END&&this.props.propKey===this.props.editId) {\r\n           this.props.setProperty(this.props.propKey,+this.state.value)\r\n           this.props.cancel();\r\n        }\r\n    }\r\n    render(){\r\n        return <div className={\"noselect\"}>\r\n            <div style={{display:'flex',flexDirection:'row',alignContent:'center'}}>\r\n            {this.props.label}\r\n            <input style={!this.state.correct?{backgroundColor:'red'}:{}}\r\n                className='propertyField'\r\n                type=\"text\" value={this.state.value} \r\n                id={this.props.label}\r\n                onChange={this.change.bind(this)}\r\n                onKeyPress={this.onKeyPress.bind(this)}\r\n                onKeyDown={(e)=>{e.stopPropagation()}}\r\n                onBlur={this.blur.bind(this)}\r\n                onFocus={()=>{window.KEYDOWNHANDLE=false}}\r\n                />\r\n            {this.props.picker?<PickButton\r\n                active={this.props.status===PICK&&this.props.id===this.props.editId} \r\n                onClick={()=>{\r\n                    if(this.props.status===PICK&&this.props.id===this.props.editId){this.props.cancel();return;}   \r\n                    this.props.setPickedData(this.state.value);\r\n                    this.props.startPicking(this.props.id,new this.props.picker());\r\n                 }}></PickButton>:<></>}\r\n        </div>\r\n        </div>\r\n    }\r\n}\r\nconst mapStateToProps=(store)=>{\r\n    return {\r\n        pickedValue:store.screen.pickedData.data,\r\n        editId:store.screen.pickedData.editId,\r\n        status:store.screen.status,\r\n    }\r\n}\r\nconst mapDispatchToProps=(dispatch)=>{\r\n    return {\r\n        startPicking:(id,picker)=>dispatch(startPicking(id,picker)),\r\n        setPickedData:data=>dispatch(setPickedData(data)),\r\n        cancel:()=>dispatch(cancel()),\r\n    }\r\n}\r\nexport default connect(mapStateToProps,mapDispatchToProps)(PropertyField)","import \"../Graph.css\";\r\nimport React from \"react\";\r\nimport {connect} from 'react-redux';\r\nimport { PICK_END, PICK } from \"../reducers/screen\";\r\nimport { startPicking, setPickedData, cancel } from \"../actions/ScreenActions\";\r\nimport PickButton from \"./PickButton\";\r\n\r\nclass PropertyMultField extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        const value={x:props.value.x,y:props.value.y}\r\n        this.state={value:{x:value.x,y:value.y},correct:true,prevValue:{x:value.x,y:value.y},originValue:{x:value.x,y:value.y}}\r\n    }\r\n    change(e){\r\n        let v={x:this.state.value.x,y:this.state.value.y};\r\n        v[e.target.id]=e.target.value;\r\n        const r=this.props.regexp;\r\n        const corr=v[e.target.id].match(r)!=null&&v[e.target.id]!==\"\";\r\n        if(corr)this.setState({value:{x:v.x,y:v.y},prevValue:{x:v.x,y:v.y}}); \r\n          else{\r\n          const value=this.state.prevValue\r\n          if(v[e.target.id]==='') value[e.target.id]='';\r\n          this.setState({value:value})}\r\n    }\r\n    blur(){\r\n        //this.props.setActivePoint('');\r\n        this.setState({value:this.state.originValue})\r\n        window.KEYDOWNHANDLE=true\r\n    }\r\n    focus(){\r\n        this.props.setActivePoint(this.props.propKey);\r\n        window.KEYDOWNHANDLE=false;\r\n    }\r\n    onKeyPress(e){\r\n        if(e.charCode===13){\r\n            let v=e.target.value;\r\n            v=v===''?\"0\":v;\r\n            const r=this.props.regexp;\r\n            if(v.match(r)!==null) {\r\n                const n=Number.parseFloat(v);\r\n                const value=this.state.value;\r\n                value[e.target.id]=n;\r\n                this.props.setProperty(this.props.propKey,value);\r\n                this.setState({value:value,correct:true,prevValue:value});\r\n                return;\r\n                }\r\n            this.setState({value:this.state.prevValue})\r\n        }\r\n       return false;\r\n        \r\n    }\r\n    static getDerivedStateFromProps(nextProps,prevState){\r\n            let value=(nextProps.status===PICK_END&&nextProps.id===nextProps.editId)?nextProps.pickedValue:prevState.value;\r\n            value.x=+value.x.toFixed(4)\r\n            value.y=+value.y.toFixed(4)\r\n            return {...nextProps,value:value,originValue:nextProps.value,correct:true};\r\n    }\r\n    componentDidUpdate(){\r\n        if(this.props.status===PICK_END&&this.props.propKey===this.props.editId) {\r\n           this.props.setProperty(this.props.propKey,this.state.value)\r\n           this.props.cancel();\r\n        }\r\n    }\r\n    render(){\r\n        const value=this.state.value;\r\n        return <div className={\"noselect\"}>\r\n            <div style={{display:'flex',flexDirection:'row',alignContent:'center'}}>\r\n            {this.props.label}\r\n            <input style={!this.state.correct?{backgroundColor:'red'}:{}}\r\n                className='propertyMultField'\r\n                type=\"text\" value={value.x} \r\n                id='x'\r\n                onChange={this.change.bind(this)}\r\n                onKeyPress={this.onKeyPress.bind(this)}\r\n                onKeyDown={(e)=>{e.stopPropagation()}}\r\n                onBlur={this.blur.bind(this)}\r\n                onFocus={this.focus.bind(this)}\r\n                />\r\n            <input style={!this.state.correct?{backgroundColor:'red'}:{}}\r\n                className='propertyMultField'\r\n                type=\"text\" value={value.y} \r\n                id='y'\r\n                onChange={this.change.bind(this)}\r\n                onKeyPress={this.onKeyPress.bind(this)}\r\n                onKeyDown={(e)=>{e.stopPropagation()}}\r\n                onBlur={this.blur.bind(this)}\r\n                onFocus={this.focus.bind(this)}\r\n                />\r\n             {this.props.picker?<PickButton \r\n                active={this.props.status===PICK&&this.props.id===this.props.editId} \r\n                onClick={()=>{\r\n                    if(this.props.status===PICK&&this.props.id===this.props.editId){this.props.cancel();return;}   \r\n                    this.props.setPickedData(this.state.value);\r\n                    this.props.startPicking(this.props.id,new this.props.picker());\r\n                    this.props.setActivePoint(this.props.propKey);\r\n                        \r\n                 }}></PickButton>:<></>}\r\n            </div>\r\n        </div>\r\n    }\r\n}\r\nconst mapStateToProps=(store)=>{\r\n    return {\r\n        pickedValue:store.screen.pickedData.data,\r\n        editId:store.screen.pickedData.editId,\r\n        status:store.screen.status,\r\n    }\r\n}\r\nconst mapDispatchToProps=(dispatch)=>{\r\n    return {\r\n        startPicking:(id,picker)=>dispatch(startPicking(id,picker)),\r\n        setPickedData:data=>dispatch(setPickedData(data)),\r\n        cancel:()=>dispatch(cancel()),\r\n    }\r\n}\r\nexport default connect(mapStateToProps,mapDispatchToProps)(PropertyMultField)","import \"../Graph.css\";\r\nimport React from \"react\";\r\n\r\nclass PropertyEditButtonsBar extends React.Component{\r\n\r\n    onClick(){\r\n        this.props.deleteConfirm();\r\n    }\r\n\r\n    render(){\r\n        return <div className=\"propEditBar\">\r\n            <button className=\"deleteButton\" onClick={this.onClick.bind(this)}>{this.props.caption}</button>\r\n            \r\n        </div>\r\n    }\r\n}\r\nexport default PropertyEditButtonsBar","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport '../Graph.css';\r\nimport {setProperty} from '../actions/ShapeActions'\r\nimport PropertyField from './PropertyField';\r\nimport PropertyMultField from './PropertyMultField';\r\nimport PropertyEditButtonsBar from './PropertyEditButtonsBar';\r\nimport { repaint, deleteConfirm } from '../actions/ScreenActions';\r\nclass PropertyEditorBar extends React.Component{\r\n    prop;\r\n    shape;\r\n    setProperty(k,v){\r\n        this.props.setProperty({key:k,value:v});\r\n        }\r\n    setActivePoint(key){\r\n        this.shape.setActivePoint(key);\r\n        this.props.repaint();\r\n    }\r\n    render(){\r\n        const shapes=this.props.screen.selectedShapes;\r\n        let propElements=[];\r\n        let shapeTitle;\r\n        if(shapes.length===1){\r\n            this.shape=shapes[0];\r\n            this.prop=shapes[0].getProperties();\r\n            let shapeType=this.prop.get('Title').value;\r\n            shapeTitle=this.props.captions.shapes[shapeType].Title;\r\n            for(let key of this.prop.keys()){\r\n                if(key!=='Title')propElements.push(typeof this.prop.get(key).value==='object'?<PropertyMultField\r\n                                                     key={key}\r\n                                                     propKey={key}\r\n                                                     id={key}\r\n                                                     label={this.props.captions.shapes[shapeType][key]} \r\n                                                     value={this.prop.get(key).value}\r\n                                                     regexp={this.prop.get(key).regexp}\r\n                                                     picker={this.prop.get(key).picker}\r\n                                                     setProperty={this.setProperty.bind(this)}\r\n                                                     setActivePoint={this.setActivePoint.bind(this)}  />:\r\n                                                     <PropertyField \r\n                                                     key={key}\r\n                                                     propKey={key}\r\n                                                     id={key}\r\n                                                     label={this.props.captions.shapes[shapeType][key]} \r\n                                                     value={this.prop.get(key).value}\r\n                                                     regexp={this.prop.get(key).regexp}\r\n                                                     picker={this.prop.get(key).picker}\r\n                                                     setProperty={this.setProperty.bind(this)}  />)\r\n            }\r\n        }\r\n        if(shapes.length>1){\r\n            propElements=shapes.length+this.props.captions.NShapesSelected;\r\n        }    \r\n        if(shapes.length===0) propElements=this.props.captions.noShapesSelected;\r\n        return <div className={\"toolBar propertiesBar noselect\"}>\r\n            <div className='toolBarHeader noselect'>{this.props.captions.propBar}</div>\r\n            <hr/>\r\n            {shapeTitle?shapeTitle:\"\"}\r\n            <div className='propertyGroup'>\r\n            {propElements}\r\n            </div>\r\n            {this.props.screen.selectedShapes.length>0?<PropertyEditButtonsBar\r\n                                    deleteConfirm={this.props.deleteConfirm.bind(null,true)}\r\n                                    caption={this.props.captions.deleteButton}/>:<></>}\r\n                                    \r\n        \r\n        </div>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = store => {\r\n\r\n    return {\r\n            screen: store.screen,\r\n            captions:store.options.captions,\r\n    }\r\n};\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        setProperty:(prop)=>dispatch(setProperty(prop)),\r\n        deleteConfirm:()=>dispatch(deleteConfirm()),\r\n        repaint:()=>dispatch(repaint()),\r\n    }\r\n};\r\nexport default connect(mapStateToProps,mapDispatchToProps)(PropertyEditorBar)","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport '../Graph.css';\r\nimport {setScreenStatus, setSelectionType} from \"../actions/ScreenActions\";\r\nimport ToolButtonGroup from './ToolButtonGroup';\r\n\r\n\r\nclass SelectionToolBar extends React.Component{\r\n    onClick({params}){\r\n            this.props.setSelectionType(params.id);\r\n    }\r\n    render(){\r\n        const cap=this.props.captions.modify;\r\n        return <div className={\"toolBar\"} id=\"selectionToolBar\">\r\n                 \r\n                <ToolButtonGroup\r\n                                buttons={[{title:cap.crossSelect,id:\"crossSelect\"},\r\n                                         {title:cap.fullSelect,id:\"fullSelect\"},\r\n                                            ]}\r\n                                activeButton={this.props.activeButton}\r\n                                onClick={this.onClick.bind(this)}\r\n                                />\r\n        </div>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = store => {\r\n\r\n    return {\r\n        context:store.screen.context,\r\n        captions:store.options.captions,\r\n        activeButton:store.screen.selectionType,\r\n    }\r\n};\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        setSelectionType:id=>dispatch(setSelectionType(id)),\r\n        setScreenStatus:(status,param)=>dispatch(setScreenStatus(status,param)),\r\n    }\r\n};\r\nexport default connect(mapStateToProps,mapDispatchToProps)(SelectionToolBar)","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport '../Graph.css';\r\nimport {setScreenStatus,selectShapes,selectAll,addShape,centerToPoint, setTopLeft, setPickedData, cancel, setCurCoord, refreshSnapMarkers, refreshShapeManager, setDimensions, setBoundedCircle, setRealWidth,setRatio, repaint, setScale, setPrevStatus, deleteConfirm, cancelSelection} from \"../actions/ScreenActions\";\r\nimport {setLanguage} from \"../actions/AppActions\";\r\nimport CreateToolBar from \"./CreateToolBar\";\r\nimport Screen from \"./Screen\";\r\nimport SnapToggleBar from './SnapToggleBar';\r\nimport PropertyEditorBar from './PropertyEditorBar';\r\nimport SelectionToolBar from './SelectionToolBar';\r\nimport { createShape } from '../actions/ShapeActions';\r\n\r\nclass MainContainer extends React.Component{\r\n    render(){\r\n        return <div className={'mainContainer'}>\r\n        <div className={'screenContainer'}>\r\n            <Screen style={{borderWidth:1+'px',borderStyle:\"solid\"}}\r\n                actions={this.props.actions}\r\n                keyDownHandler={this.props.keyDownHandler}\r\n                {...this.props.screen}\r\n                />\r\n                </div>\r\n        <CreateToolBar/>\r\n        <SelectionToolBar/>\r\n        <PropertyEditorBar/>\r\n        <SnapToggleBar/>\r\n        \r\n    </div>\r\n    }\r\n}\r\nconst mapStateToProps = store => {\r\n    return {\r\n            screen: {...store.screen,captions:store.options.captions},\r\n            keyDownHandler:store.options.keyDownHandler,\r\n    }\r\n};\r\nconst mapDispatchToProps = dispatch => {\r\n    return {actions:{\r\n        addShape:(shape)=>dispatch(addShape(shape)),\r\n        cancel:()=>dispatch(cancel()),\r\n        cancelSelection:()=>dispatch(cancelSelection()),\r\n        centerToPoint:(p)=>dispatch(centerToPoint(p)),\r\n        createShape:(creator)=>dispatch(createShape(creator)),\r\n        deleteConfirm:()=>dispatch(deleteConfirm()),\r\n        refreshShapeManager:()=>dispatch(refreshShapeManager()),\r\n        refreshSnapMarkers:()=>dispatch(refreshSnapMarkers()),\r\n        repaint:()=>dispatch(repaint()),\r\n        selectAll:()=>dispatch(selectAll()),\r\n        selectShapes:(selectedShapes)=>dispatch(selectShapes(selectedShapes)),\r\n        setBoundedCircle:()=>dispatch(setBoundedCircle()),\r\n        setCurCoord:(coord)=>dispatch(setCurCoord(coord)),\r\n        setDimensions:(width,height,realWidth,topLeft)=>dispatch(setDimensions(width,height,realWidth,topLeft)),\r\n        setLanguage:captions=>dispatch(setLanguage(captions)),\r\n        setPickedData:data=>dispatch(setPickedData(data)),\r\n        setPrevStatus:()=>dispatch(setPrevStatus()),\r\n        setRatio:(ratio)=>dispatch(setRatio(ratio)),\r\n        setRealWidth:(width)=>dispatch(setRealWidth(width)),\r\n        setScale:(scale,anchor)=>dispatch(setScale(scale,anchor)),\r\n        setScreenStatus:(status,params)=>dispatch(setScreenStatus(status,params)),\r\n        setTopLeft:(p)=>dispatch(setTopLeft(p)),\r\n    }}\r\n};\r\nexport default connect(mapStateToProps,mapDispatchToProps)(MainContainer)","import React from 'react';\r\nimport '../Graph.css';\r\nimport {connect} from 'react-redux';\r\n\r\nclass MySelf extends React.Component{\r\n\r\n    render(){\r\n        return <div style={{textAlign: \"center\"}}>\r\n        <span   ref={this.ref2}\r\n                className={\"noselect\"}\r\n                style={{position:\"relative\",whiteSpace:\"pre\",fontSize:\"small\"}}\r\n                >\r\n            <hr/>\r\n            {`${this.props.cap.name}          ${this.props.cap.email}`}\r\n            <hr/>\r\n        </span>\r\n        </div>\r\n    }\r\n}\r\nconst mapStateToProps=store=>{\r\n    return {\r\n        cap:store.options.captions.about\r\n    }\r\n}\r\nexport default connect(mapStateToProps)(MySelf);","import React,{Fragment} from 'react';\r\nimport '../Graph.css';\r\nimport '../Buttons.css';\r\nimport {showHelp} from '../actions/AppActions';\r\nimport { connect } from 'react-redux';\r\nimport MySelf from './MySelf';\r\n\r\nclass HelpSection extends React.Component{\r\n    constructor(){\r\n        super();\r\n        this.ref=React.createRef()\r\n        this.state={done:false}\r\n    }\r\n    \r\n    animate=()=>{\r\n        if(this.w<this.maxw) this.ref.current.style.width=`${this.w}px`;\r\n        if(this.h<this.maxh) this.ref.current.style.height=`${this.h}px`;\r\n        if(this.w>=this.maxw&&this.h>=this.maxh) this.setState({done:true});\r\n        this.w+=50;\r\n        this.h+=50;\r\n    }\r\n    componentWillUnmount(){\r\n        clearInterval(this.t);\r\n        window.KEYDOWNHANDLE=true\r\n    }\r\n    componentDidMount(){\r\n        this.maxw=document.body.clientWidth/1.1;\r\n        this.maxh=document.body.clientHeight/1.1;\r\n        this.w=0;\r\n        this.h=0;\r\n        this.t=setInterval(this.animate,1);\r\n        window.KEYDOWNHANDLE=false\r\n    }\r\n    render(){\r\n        const keys=this.props.captions.help.hotKeys.map((item,i)=><Fragment key={i}><span className='helpHotKey'>{item.key} </span> - {item.desc}<br/></Fragment>);\r\n        return <div className='helpContainer  noselect' onClick={this.props.showHelp.bind(null,false)}>\r\n                <div style={{display:\"inline-block\",zIndex:101,position:\"relative\"}}>\r\n                    <div id='help' ref={this.ref} className={\"toolBar helpSectionShow\"}>\r\n                        <div className={\"toolBarHeader\"}>\r\n                            <span className={\"toolBarCaption\"}>{this.props.captions.help.title}</span>\r\n                        </div>\r\n                    {this.state.done?<MySelf/>:<></>}\r\n                    {keys}\r\n                    <div id=\"pifagor\"></div>\r\n                    <div id=\"evklid\"></div>\r\n                    </div>\r\n                </div>\r\n        </div>\r\n    }\r\n}\r\nconst mapStateToProps=store=>{\r\n    return {\r\n        captions:store.options.captions,\r\n    }\r\n};\r\nconst mapDispatchToProps=dispatch=>{\r\n    return{\r\n        showHelp:show=>dispatch(showHelp(show))\r\n    }\r\n};\r\nexport default connect(mapStateToProps,mapDispatchToProps)(HelpSection);\r\n","import React from 'react';\r\nimport '../Graph.css';\r\nimport '../Buttons.css';\r\nimport {showConfirm, blink} from '../actions/AppActions';\r\nimport { connect } from 'react-redux';\r\nimport {store} from '../store/configureStore'\r\nclass Confirm extends React.Component{\r\n    \r\n    render(){\r\n        return <div className='modalContainer  noselect' onClick={blink}>\r\n                    <div className={\"toolBar\"} onClick={(e)=>{e.stopPropagation()}}>\r\n                      <div>{this.props.captions.messages[this.props.messageKey]}</div>\r\n                        <div className=\"flexCenter\">\r\n                        <button onClick={()=>{\r\n                            store.dispatch(this.props.onOk());\r\n                            this.props.hideConfirm()}}>OK</button>\r\n                        <button onClick={this.props.hideConfirm}>{this.props.captions.buttons.cancel}</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n    }\r\n}\r\nconst mapStateToProps=store=>{\r\n    return {\r\n        captions:store.options.captions,\r\n    }\r\n};\r\nconst mapDispatchToProps=dispatch=>{\r\n    return{\r\n        hideConfirm:()=>dispatch(showConfirm(false))\r\n    }\r\n};\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Confirm);\r\n","import React from 'react';\r\nimport '../Graph.css';\r\nimport '../Buttons.css';\r\nimport {showAlert, blink} from '../actions/AppActions';\r\nimport { connect } from 'react-redux';\r\n\r\nclass Alert extends React.Component{\r\n    render(){\r\n        return <div className='modalContainer  noselect' onClick={blink}>\r\n                    <div className={\"toolBar\"} onClick={(e)=>{e.stopPropagation()}}>\r\n                        <div>{this.props.captions.messages[this.props.messageKey]}</div>\r\n                        <div className=\"flexCenter\">\r\n                        <button onClick={()=>{\r\n                            this.props.hideAlert()}}>OK</button>\r\n                        </div>    \r\n                    </div>\r\n                </div>\r\n    }\r\n}\r\nconst mapStateToProps=store=>{\r\n    return {\r\n        captions:store.options.captions,\r\n    }\r\n};\r\nconst mapDispatchToProps=dispatch=>{\r\n    return{\r\n        hideAlert:()=>dispatch(showAlert(false))\r\n    }\r\n};\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Alert);\r\n","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport Header from './components/Header';\r\nimport {captions} from './locale/eng';\r\nimport MainContainer from './components/MainContainer';\r\nimport HelpSection from './components/HelpSection';\r\nimport {setLanguage} from './actions/AppActions';\r\nimport Confirm from './components/Confirm';\r\nimport Alert from './components/Alert';\r\n\r\nclass Body extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        props.setLanguage(captions);\r\n    }\r\n    render() {\r\n        return <div className={\"body\"}>\r\n            {this.props.showConfirm.show?<Confirm messageKey={this.props.showConfirm.messageKey} onOk={this.props.showConfirm.okAction}/>:<></>}\r\n            {this.props.showAlert.show?<Alert messageKey={this.props.showAlert.messageKey}/>:<></>}\r\n            <Header/>\r\n            {this.props.showHelp?<HelpSection/>:<></>}\r\n            <hr/>\r\n            <MainContainer/>\r\n            \r\n           </div>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = store => {\r\n    return {\r\n            showHelp:store.components.showHelp,\r\n            showConfirm:store.components.showConfirm,\r\n            showAlert:store.components.showAlert,\r\n    }\r\n};\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        setLanguage: captions=>dispatch(setLanguage(captions)),\r\n    }\r\n};\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Body)","import React from 'react';\r\nimport '../Graph.css';\r\n\r\nexport default class Spinner extends React.Component{\r\n\r\n    render(){\r\n        return <div className=\"spinner\"></div>\r\n    }\r\n}","import React from 'react';\r\nimport '../Graph.css';\r\nimport '../Buttons.css';\r\nimport {connect} from 'react-redux';\r\nimport { setToken } from '../actions/UserActions';\r\nimport options from '../config'\r\nimport Spinner from './Spinner';\r\nimport { blink } from '../actions/AppActions';\r\nclass Login extends React.Component{\r\n    constructor(){\r\n        super();\r\n        this.refName=React.createRef();\r\n        this.refPass=React.createRef();\r\n        this.state={correct:true,logging:false,errCode:0,showPass:false,remember:false}\r\n    }\r\n    onRegClick(){\r\n        this.props.history.push('/register')\r\n    }\r\n    onSubmit(e){\r\n        if(this.state.logging)return;\r\n        const name=this.refName.current.value;\r\n        const pass=this.refPass.current.value;\r\n        this.requestLogin(name,pass);\r\n        e.preventDefault();\r\n    }\r\n    cancel(){\r\n        this.props.history.push('/');\r\n    }\r\n    requestLogin(name,password){\r\n        this.setState({correct:true,logging:true});\r\n        fetch(options.devUrl+'/login',\r\n                    {method:'POST',headers: {\"Content-Type\": \"application/json\"},\r\n                    body:JSON.stringify({nameOrEmail:name,password:password})})\r\n            .then(res=>\r\n                res.json())\r\n            .then(res=>{\r\n                this.setState({correct:res.success,logging:false,errCode:res.errCode});\r\n                if(res.success===true) {\r\n                    this.props.setToken(res.token,this.state.remember);\r\n                    this.props.history.push('/');\r\n                }\r\n            })\r\n            .catch(e=>{console.error(e); this.setState({correct:false,logging:false,errCode:3});});\r\n    }\r\n    \r\n    componentWillUnmount(){\r\n        window.KEYDOWNHANDLE=true\r\n    }\r\n    componentDidMount(){\r\n        window.KEYDOWNHANDLE=false\r\n        this.ref.style.overflow=\"hidden\"\r\n        this.ref.style.width=\"0px\"\r\n        this.ref.style.transition=\"width 200ms linear\"\r\n        setTimeout(()=>{this.ref.style.width=\"200px\"},10)\r\n    }\r\n    render(){\r\n        const cap=this.props.cap;\r\n        const showPass=this.state.showPass?\"text\":\"password\"\r\n        return <div className='modalContainer noselect' onClick={blink}>\r\n                    <div ref={(ref)=>{this.ref=ref}}className={\"toolBar\"} onClick={(e)=>{e.stopPropagation()}}>\r\n                        <div className={\"toolBarHeader\"}>\r\n                            <span className={\"toolBarCaption\"}>{cap.loginForm.title}</span>\r\n                        </div>\r\n                        <form onSubmit={this.onSubmit.bind(this)} className='loginForm'>\r\n                            <input name=\"nameOrEmail\" ref={this.refName} required placeholder={cap.loginForm.name}/>\r\n                            <input name=\"password\" ref={this.refPass} required placeholder={cap.loginForm.password} type={showPass}/>\r\n                            <input type='submit' value='OK'/>\r\n                            <input type='button' value={cap.loginForm.regForm} onClick={this.onRegClick.bind(this)}/>\r\n                            <input type='button' value={cap.buttons.cancel} onClick={this.cancel.bind(this)}/>\r\n                        </form>\r\n                        <div className=\"checkbox\">\r\n                            <input type=\"checkbox\" id=\"show\" onChange={(e)=>{this.setState({showPass:e.target.checked})}}/>\r\n                            <label htmlFor=\"show\">{cap.buttons.showPass}</label>\r\n                        </div>\r\n                        <div className=\"checkbox\">\r\n                            <input type=\"checkbox\" id=\"remember\" onChange={(e)=>{this.setState({remember:e.target.checked})}}/>\r\n                            <label htmlFor=\"remember\">{cap.loginForm.rememberMe}</label>\r\n                        </div>\r\n                    {this.state.correct===false?<span className=\"errorMessage\">{cap.loginForm.messages[this.state.errCode]}</span>:<></>}\r\n                    <div className=\"flexCenter\">{this.state.logging?<Spinner/>:<></>}</div>\r\n                    </div>\r\n                </div>\r\n    }\r\n}\r\nconst mapStateToProps=(store)=>{\r\n    return {\r\n        cap:store.options.captions,\r\n    }\r\n}\r\nconst mapDispatchToProps=dispatch=>{\r\n    return{\r\n        setToken:(token,remember)=>{dispatch(setToken(token,remember))}\r\n    }\r\n}\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Login);","import React from 'react';\r\nimport '../Graph.css';\r\nimport {connect} from 'react-redux';\r\nimport options from '../config'\r\nimport Spinner from './Spinner';\r\nimport { showAlert, blink } from '../actions/AppActions';\r\n\r\nclass Register extends React.Component{\r\n    constructor(){\r\n        super()\r\n        this.refName=React.createRef()\r\n        this.refEmail=React.createRef()\r\n        this.refPass1=React.createRef()\r\n        this.refPass2=React.createRef()\r\n        this.state={correct:false,message:\"\",fetching:false,showPass:false}\r\n    }\r\n    check(name,email,pass1,pass2){\r\n        const cap=this.props.cap.registerForm;\r\n        let messIndex;\r\n        let state={correct:true}\r\n        if(pass2!==pass1) messIndex=3\r\n        if(pass1.length<6) messIndex=2\r\n        if(!email.match(/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/)) messIndex=4\r\n        if(!name.match(/^[a-zA-Z0-9]+([a-zA-Z0-9](_)[a-zA-Z0-9])*[a-zA-Z0-9]+$/)) messIndex=1\r\n        if(name.length<4) messIndex=0\r\n        if(messIndex!==undefined) state={correct:false,message:cap.inputMessages[messIndex]}\r\n        return state;\r\n    }\r\n    onSubmit(e){\r\n        const cap=this.props.cap.registerForm;\r\n        const name=this.refName.current.value;\r\n        const email=this.refEmail.current.value;\r\n        const pass1=this.refPass1.current.value;\r\n        const pass2=this.refPass2.current.value;\r\n        const state=this.check(name,email,pass1,pass2)\r\n        if(state.correct){\r\n            fetch(options.devUrl+'/register',{method:'POST',headers: {\"Content-Type\": \"application/json\"},\r\n                    body:JSON.stringify({name:name,email:email,password:pass1})})\r\n                    .then(res=>res.json())\r\n                    .then(res=>{\r\n                        if(res.registered) {\r\n                            this.props.showAlert('regSucceed');\r\n                            this.props.history.push('/');\r\n                        }\r\n                        this.setState({correct:res.registered,fetching:false,message:cap.serverMessages[res.errCode]})\r\n                    })\r\n                    .catch(err=>{this.setState({correct:false,fetching:false,message:cap.serverMessages[5]})})\r\n        }\r\n        this.setState({...state,fetching:true});\r\n        e.preventDefault();\r\n    }\r\n    cancel(){\r\n        this.props.history.push('/');\r\n    }\r\n    componentWillUnmount(){\r\n        window.KEYDOWNHANDLE=true\r\n    }\r\n    componentDidMount(){\r\n        window.KEYDOWNHANDLE=false\r\n        this.ref.style.overflow=\"hidden\"\r\n        this.ref.style.width=\"0px\"\r\n        this.ref.style.transition=\"width 200ms linear\"\r\n        setTimeout(()=>{this.ref.style.width=\"200px\"},10)\r\n    }\r\n    render(){\r\n        const cap=this.props.cap;\r\n        const showPass=this.state.showPass?\"text\":\"password\"\r\n        return <div className='modalContainer noselect' onClick={blink}>\r\n                    <div ref={(ref)=>{this.ref=ref}} className={\"toolBar center\"} onClick={(e)=>{e.stopPropagation()}}>\r\n                        <div className={\"toolBarHeader\"}>\r\n                            <span className={\"toolBarCaption\"}>{cap.registerForm.title}</span>\r\n                        </div>\r\n                        <form onSubmit={this.onSubmit.bind(this)} className='loginForm'>\r\n                            <input required ref={this.refName} placeholder={cap.registerForm.name}/>\r\n                            <input required ref={this.refEmail} placeholder={cap.registerForm.email} type=\"email\"/>\r\n                            <input required ref={this.refPass1} placeholder={cap.registerForm.password} type={showPass}/>\r\n                            <input required ref={this.refPass2} placeholder={cap.registerForm.passwordAgain} type={showPass}/>\r\n                            <input type='submit' value='OK'/>\r\n                            <input type='button' value={cap.buttons.cancel} onClick={this.cancel.bind(this)}/>\r\n                        </form>\r\n                        <div className=\"checkbox\">\r\n                        <input type=\"checkbox\" id=\"show\" onChange={(e)=>{this.setState({showPass:e.target.checked})}}/><label htmlFor=\"show\">{cap.buttons.showPass}</label>\r\n                        </div>\r\n                        <div className=\"flexCenter\">{this.state.fetching?<Spinner/>:<></>}</div>\r\n                        {!this.state.correct?<span className=\"errorMessages\">{this.state.message}</span>:<></>}\r\n                    </div>\r\n                </div>\r\n    }\r\n}\r\nconst mapStateToProps=store=>{\r\n    return {\r\n        cap:store.options.captions\r\n    }\r\n}\r\nconst mapDispatchToProps=dispatch=>{\r\n    return {\r\n        showAlert:(messageKey)=>dispatch(showAlert(true,messageKey))\r\n    }\r\n}\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Register);","import React from 'react';\r\nimport '../Graph.css';\r\nimport {connect} from 'react-redux';\r\nimport options from '../config';\r\nimport Spinner from './Spinner';\r\n\r\nclass Activation extends React.Component{\r\n    constructor(){\r\n        super();\r\n        this.state={activated:true,logging:false,errCode:0,message:\"\"}\r\n    }\r\n    onLoginClick(){\r\n        this.props.history.push('/login')\r\n    }\r\n    cancel(){\r\n        this.props.history.push('/');\r\n    }\r\n    activate(id){\r\n        this.setState({activated:false,logging:true});\r\n        fetch(options.devUrl+'/activate',\r\n                    {method:'POST',headers: {\"Content-Type\": \"application/json\"},\r\n                    body:JSON.stringify({id:id})})\r\n            .then(res=>res.json())\r\n            .then(res=>{\r\n                this.setState({activated:res.success,logging:false,message:this.props.cap.activation.messages[res.errCode]});\r\n                if(res.success===true) {\r\n                    //this.props.setToken(res.token);\r\n                    //this.props.history.push('/');\r\n                }\r\n            })\r\n            .catch(e=>{console.error(e); this.setState({activated:false,logging:false,errCode:5});});\r\n    }\r\n    componentWillUnmount(){\r\n        window.KEYDOWNHANDLE=true\r\n    }\r\n    componentDidMount(){\r\n        this.activate(this.props.match.params.id)\r\n        window.KEYDOWNHANDLE=false\r\n    }\r\n    render(){\r\n        const cap=this.props.cap;\r\n        //const text=this.cap.activation.messages[this.state.errCode]\r\n        const text=this.state.message\r\n        return <div className='modalContainer noselect'>\r\n                    <div className={\"toolBar\"}>\r\n                        <div className={\"toolBarHeader\"}>\r\n                            <span className={\"toolBarCaption\"}>{cap.activation.title}</span>\r\n                        </div>\r\n                        \r\n                        {this.state.logging?<Spinner/>: \r\n                        <div>   \r\n                         <div>{text}</div>\r\n                         <input type='button' value={cap.loginForm.title} onClick={this.onLoginClick.bind(this)}/>\r\n                         <input type='button' value={cap.buttons.cancel} onClick={this.cancel.bind(this)}/>\r\n                         </div>}\r\n                    </div>\r\n                </div>\r\n    }\r\n}\r\nconst mapStateToProps=(store)=>{\r\n    return {\r\n        cap:store.options.captions,\r\n    }\r\n}\r\nconst mapDispatchToProps=dispatch=>{\r\n    return{\r\n    }\r\n}\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Activation);","import React from 'react';\r\nimport {BrowserRouter,Route} from 'react-router-dom';\r\nimport {Provider} from 'react-redux';\r\nimport {store} from './store/configureStore';\r\nimport Body from './Body';\r\nimport Login from './components/Login'\r\nimport Register from './components/Register';\r\nimport Activation from './components/Activation';\r\nexport default class GeomEditor extends React.Component {\r\n    render() {\r\n        return <Provider store={store}>\r\n            <BrowserRouter>\r\n                <Route path='/' component={Body}/>\r\n                <Route exact path='/activate' component={Activation}/>\r\n                <Route path='/activate/:id' component={Activation}/>\r\n                <Route path='/login' component={Login}/>\r\n                <Route path='/register' component={Register}/>\r\n            </BrowserRouter>\r\n        </Provider>\r\n\r\n    }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport GeomEditor from './GeomEditor';\r\n\r\nReactDOM.render(\r\n    <GeomEditor/>\r\n    ,\r\n    document.getElementById('root'));\r\n"],"sourceRoot":""}